
commit d02f1c3cdcc6a04d085538578d872ec6e3282382
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Apr 1 09:56:47 2018 -0700

    Suunto EON Steel: set date too when doing device timesync
    
    I'd never noticed this before, since my date had always been already set
    correctly, but the timesync with the EON Steel only set the time, not
    the date.
    
    The fix is trivial, since the code already filled in the datetime data,
    it just didn't do the SET_DATE command.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 0e0ee16ea69ae5d9eaf246f39e4c420a102d7046
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Mar 31 11:42:46 2018 -0700

    Correctly fix build without HID support
    
    Suggested by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 156cac65b6abed6835ba6fe1f0abf05abb3eb04c
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Mar 31 11:35:31 2018 -0700

    Revert "Allow compilation on platforms without USBHID support"
    
    This reverts commit 7444cca876cf1637fd7c3d4ad1e48145b215aed8.
    
    The commit does what it advertises - but also breaks HID support everywhere
    else. Oops.
    
    Reported-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5b54386dbdf1e23300b2f3b57f369abcaa1b2714
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Mar 11 12:14:37 2018 -0700

    remove the transfer type comments from the descriptor array
    
    This basically reverts commit 4a3f7a7cce54 ("Mark DC descriptors with
    supported transport").
    
    The commit wasn't wrong, but it ends up having caused a *lot* of pain
    for merging, because it adds the transfer type marker to most lines in
    that descriptor array, and the end result is very painful to merge if
    upstream libdivecomputer ever changes any of the array entries (which
    happens fairly regularly, either because of format changes, or because a
    new entry is added).
    
    It's probably better and simpler to simply have some entirely separate
    model for figuring out which dive computer supports which protocol.
    There are enough common rules (like "old Suunto models are all FTDI")
    that such a separate table probably would be simpler and clearer anyway.
    
    This does not implement such a table, though - it just removes the
    information entirely.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit f4e43afad9f113a4e83e7d9f507ffe3648842fc0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Mar 11 11:59:40 2018 -0700

    remove 'serial' number from descriptor array
    
    I added this long ago as a merge fixup (see commit f9db4ca97c4b: "Merge
    git://git.libdivecomputer.org/libdivecomputer into Subsurface-branch"),
    because some of the OSTC parser_create() functions take a serial number.
    
    However, the serial number is never actually taken from the descriptor
    array, and if it was, it would be incorrect anyway.  None of the entries
    in the descriptor array actually have any, so it's always zero.
    
    So just remove it, because it's a big pain whenever upstream changes the
    descriptor array format.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit f5e10ff9bcb1963f8b1d1b2971244b39287d46e5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Mar 11 12:08:13 2018 -0700

    get rid of annoying compile warnings
    
    This gets rid of the warnings in the build, mostly by just disabling
    them entirely, and in one case by adding a default statement to make the
    compiler not warn about lacking case statements for a switch()
    statement.
    
    Some of the warnings really don't work that well for libdivecomputer
    (warning about pointer signs is very annoying when we mix regular
    strings and various "unsigned char *" raw data).
    
    And some of the warnings we should probably re-enable once by one, and
    actually fix up.
    
    But even the ones we should re-enable are right now more of a pain than
    they are worth, and nobody has had the energy to do so.  And as long as
    there are *so* many warnings, nobody likely will.
    
    In the meantime, this gets rid of the harmless warnings, so that we can
    see if any *bad* warnings happen.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 38ff1f75dd32f24a37bc4486c4850eb15a73a46c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 24 09:48:17 2018 +0100

    Remove the half-duplex emulation from the I/O api
    
    Now that the half-duplex emulation code isn't used anymore, it can be
    removed from the I/O stream api.

commit 4897a8351bb5142c3fa13c97d41a5832b75205ab
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 24 09:16:23 2018 +0100

    Handle the half-duplex emulation in the vyper2 backend
    
    The half-duplex emulation is basically a workaround for a timing problem
    in the vyper2 backend. Since no other dive computer backend uses or
    needs this feature, it makes no sense to support this at the I/O layer.
    It can be implemented directly in the vyper2 backend instead.

commit ee31f24cfb20c76dd0ba1d11ba087aaa51330ae1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 23 20:43:45 2018 +0100

    Use the new timer for the timestamps in the logging
    
    Replace the platform specific code with the new timers.

commit eb4c150024edd7476aa5268b325be0091416e1ca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 23 20:20:34 2018 +0100

    Use the new timer for the timeout calculations
    
    Replace the gettimeofday() based implementation with the new monotonic
    timers. This makes the implementation more robust against unexpected
    adjustments of the clock.

commit a8adb16c0d4a5cb0cda4a0671822e7078dd502cf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 23 20:03:13 2018 +0100

    Add a high resolution timer module
    
    The new timer module provides an cross-platform interface for a high
    resolution monotonic clock. The timestamps are always relative to the
    creation of the timer and their unit is one microseconds.
    
    The timers can be used for logging, measuring elapsed time and
    implementing timeouts.

commit becaf02ab63a67d584fcaa64fe649b69bb7a931f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 15 08:25:28 2018 +0100

    Add functions for converting bluetooth addresses

commit efd47cd9a1333e4cd52bc2c126092ad30b45fe55
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 15 20:17:47 2018 +0100

    Add support for the OSTC 2 TR
    
    The OSTC 2 TR add supports for one or more tank pressure transmitters,
    and the active transmitter is linked to the active gas mix.

commit 7444cca876cf1637fd7c3d4ad1e48145b215aed8
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Mon Feb 12 12:21:07 2018 -0800

    Allow compilation on platforms without USBHID support
    
    E.g. iOS.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8cf5209d318170d88a4b257d48dae1635d2eda53
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Feb 7 08:10:59 2018 -0800

    Revert "Shearwater: correctly handle the different models"
    
    This reverts commit 8ea8cebb4e6c3d86b9ceb2291caa077dabd2a3f7.
    
    Well intended, but as Jef points out it breaks download from older Shearwater
    dive computers in certain situations.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0ac15dffd37075c902f2b59da6fb49008142e236
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 5 20:16:48 2018 +0100

    Add a workaround for invalid logbook begin pointers
    
    Unfortunately there are several devices where an invalid logbook begin
    pointer occurs relative frequently. Typical examples are the Oceanic VT
    4.1 and the Sherwood Wisdom 2. In such cases, the strict validation of
    the pointer causes the download to fail, without being able to download
    any dives at all.
    
    Since the begin pointer is only needed to detect the oldest logbook
    entry, we can fall back to downloading the entire logbook ringbuffer. If
    we're lucky (and we usually are), we can detect the oldest entry by
    inspecting the logbook entries once they are downloaded (e.g. presence
    of uninitialized entries) and then the download will finish succesfully.
    In the worst case scenario, we'll be able to download at least some
    dives before hitting another error.

commit 05f55222101ae4b248aaf353d1a47514126389ee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 5 20:02:15 2018 +0100

    Let the ringbuffer function handle a full ringbuffer
    
    The ringbuffer_distance() function has a parameter to specify whether a
    ringbuffer with identical begin/end pointers should be considered an
    empty or a full ringbuffer. Hence there is no need to handle the case of
    a full ringbuffer manually.

commit 9117b593fc4552b6140e9c51594a4289584df99c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 5 19:53:19 2018 +0100

    Suppress the warning if no O2 sensors are present
    
    The warning about disabling the O2 sensors due to factory default
    calibration values, applies only if there is at least one calibrated O2
    sensor present.
    
    This has no effect on the calibration bits, because those are already
    zero if there are no calibrated O2 sensors present.

commit 85eef19f8f9b1510eb3ae6e79f96ee77b7b1a8b1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 19 20:25:07 2017 +0100

    Integrate the connect step into the open function
    
    There is no need to expose the two step connection setup of the
    underlying socket interface in the public api. Doing so may complicate
    the implementation on platforms where the native api is not based on the
    socket interface (e.g. Mac OS X).
    
    Note that the function to connect based on the IrDA service name is
    removed. It's not used anywhere in libdivecomputer and since IrDA is an
    outdated technology nowadays, it's unlikely we'll need it in the future.

commit 0ce3bd3e6dd715aa78a73390db4203f29b003b39
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 20 11:35:27 2017 +0200

    Implement some filter functions

commit 30e406081780621b952791989c1f627c3865871e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 17 23:41:48 2017 +0200

    Add suport for applying a filter function
    
    The device descriptors are extended with a filter function. During the
    device discovery, this filter function is used to return only devices
    that match a known dive computer.
    
    The filtering is optional, and can be disabled by passing a NULL pointer
    for the device descriptor when creating the iterator with one of the
    dc_xxx_iterator_new() functions.

commit ca91500ed5b42a8050f12ff20513bab1f1c40e4b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 8 16:38:07 2017 +0100

    Re-write the device discovery using the iterator api
    
    Replacing the callback based interface with an iterator based interface,
    results in a more extensible abstraction with a common interface for
    each of the built-in I/O implementations (serial, usbhid, irda and
    bluetooth).

commit 296fad2d9d3387b8b3096c959fd48a659d126814
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 8 15:04:17 2017 +0100

    Cleanup the iterator internals

commit f992d201ad955340e404e076c7cd227ad5413ce3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 5 21:11:35 2017 +0100

    Simplify the conditional compilation
    
    Move the global variables inside an existing conditionally compiled
    block, to remove some of the #ifdef's.

commit 931d1857ce94b96c26468ce692454fcda8546875
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 25 16:13:35 2017 +0200

    Disable some Windows specific compiler warnings
    
    The -Wno-pedantic-ms-format option is only needed for the MinGW target.
    But for some reason, the AX_APPEND_COMPILE_FLAGS macro enables the
    option for all other GCC targets too. But during compilation GCC outputs
    the warning "unrecognized command line option".

commit 90eed3c790fcb1986a5ce665b8c0857bad85d486
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Oct 5 22:07:14 2017 +0200

    Use SDP to auto-detect the rfcomm port number
    
    When the port number is set to zero (which is an invalid value), detect
    the port number automatically. On Windows, we can simply supply the UUID
    of the serial port service, and the Windows api will take care of the
    discovery. On Linux (bluez), the SDP discovery needs to be performed
    manually to retrieve the port number.

commit 6d5ac37f99c38bac626d5ea33a3fdd1c628bf57f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 19 21:00:31 2017 +0200

    Use the actual IrDA device names

commit 9e169c9a3f67277e4e4f46f457dcb47899f1c4e5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 30 21:07:33 2018 +0100

    Use the correct data type for the temperature
    
    Temperatures are reported as a floating point values and not as
    (unsigned) integers.

commit 3e36cad5eeab3b3e96f1b522ac95928673408f0b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 29 20:47:25 2018 +0100

    Disable O2 sensors with default calibration values
    
    If all (calibrated) sensors still have their factory default calibration
    values (2100), they are probably not calibrated properly. To avoid
    returning incorrect ppO2 values to the application, they are manually
    disabled (e.g. marked as uncalibrated).

commit 9ca91ca5844538af148d416bd122af4c68559026
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 24 08:32:42 2018 +0100

    Add support for the Seac Jack
    
    The Seac Jack is compatible with the DiveSystem/Ratio dive computers.

commit 0ae9e355f8ab3deec5c317227588a5e7a611e422
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 11 22:07:56 2018 +0100

    Check for memory allocation errors
    
    Appending data to the buffer may fail if a memory allocation is
    necessary to enlarge the buffer. Hence the return value of the
    dc_buffer_append() call should always be checked, unless the memory was
    already pre-allocated or the check is deferred after the last operation.

commit c194f559d8d8e96a3b1300ae81949a46d977b2a5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 8 23:51:21 2018 +0100

    Erase the buffer before calling the vtable function
    
    This guarantees that the backend will always receive an empty buffer,
    and eliminates the need to clear the buffer manually in every single
    backend.

commit d23bc6e089f640eec1c09f8327a839c6586a895d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 5 18:24:50 2018 +0100

    Replace hardcoded size with the sizeof operator

commit c3556d81c91958bae1729402c9f8128b9d19ddb2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 4 15:14:10 2018 +0100

    Use the correct model number for the Shearwater Nerd 2
    
    Unlike the Shearwater Petrel, the Shearwater Nerd 2 appears to have a
    distinct model number from the Nerd.
    
    Reported-by: Janice McLaughlin <janice@moremobilesoftware.com>

commit fb8115cbc63a78cee3845d610f3dd3746bf6bde3
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:18 2018 -0800

    Scubapro G2 cleanup: avoid memory leak
    
    Coverity CID 207807
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4335c9b9eb4fee8544a0707d60340887ffe4259a
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:27 2018 -0800

    Cleanup: remove confusing NULL check
    
    device has already been dereferenced before we ever get here
    
    Coverity CID 207713
    Coverity CID 207780
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4144e0c7ffc23de9f850128bf0dc4903ebaa446d
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:26 2018 -0800

    Cleanup: bail on error
    
    Coverity CID 207809
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 2f097e54fe7ec1cce21f429f4feb4c9296bd7176
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:25 2018 -0800

    Cleanup: consistently check return value of iostream functions
    
    Coverity CID 215197
    Coverity CID 215200
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4e93b9a8f827d23b04e3acb41ae20825d0dcb6c7
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:24 2018 -0800

    Cleanup: check return value of ioctl()
    
    It's checked for all the other invocations...
    
    Coverity CID 207796
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit e22adbb3f96c997444f24e380f2808aca2215172
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:23 2018 -0800

    Cleanup: remove dead code and return the correct return code
    
    Coverity CID 207700
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 88cc5e14137b9a5a534360cf2486b19c345897df
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:22 2018 -0800

    Cleanup: avoid undefined shift operation
    
    Shifting a 32bit value by 32 is undefined.
    
    Instead of using shifts to create the mask, explicitly create it by
    subtracting 1 from the signbit value (and using bitwise NOT to fill all
    the higher bits).
    
    This commit looks confusing because Jef wanted me to not have two places
    where I use the bitwise not. So instead of creating an equivalent mask
    variable and not having to change the return statements we end up with a
    mask that is the bitwise invert of what was there before this commit and
    therefore the return statements need to change as well.
    
    Coverity CID 207769
    
    Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 71f76819c04398c62f4786994f103a9b1a38fa37
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:21 2018 -0800

    Cleanup: ensure string is 0 terminated
    
    The Linux kernel uses the sir_name as a standard C string (in one
    instance copying it into a 60 char buffer using kstrncpy with a length
    limit of 60), we therefore need to ensure that it is 0 terminated.
    
    Since the existing code didn't notify the caller if we were truncating
    the string at 25 characters, I didn't add such a warning/error for
    truncating at 24 characters.
    
    I was not able to find documentation on how Windows uses irdaServiceName
    but since this is implementing the same standard, the same change was
    made to the Windows code.
    
    In both cases I replaced the hardcoded length of 25 with a sizeof()
    argument (but both Linux and Windows hard code that length in their
    headers, so it seems unlikely this would ever change).
    
    Coverity CID 207790
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5997caf45f88914dd2392c0bfff966de72bdf1c3
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:20 2018 -0800

    Cleanup: avoid memory leak
    
    Coverity CID 207731
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 681720e96a4cd8a5c497908ede95bd1a11a4daec
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:19 2018 -0800

    Cleanup: avoid memory leak
    
    Coverity CID 207773
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 96e6bf5848f73d2feba730b9c0a266c94d841637
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:17 2018 -0800

    Cleanup: avoid memory leaks
    
    Coverity CID 207730
    Coverity CID 207747
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit bd00ddea176046f5cdc0b2533a16de7d2cd25002
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jan 4 08:50:16 2018 -0800

    Cleanup: correctly handle upper bound of array
    
    Coverity CID 207684
    Coverity CID 207724
    Coverity CID 207728
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 81f3fdd854668fc5cd44ad798cda79b015b16ebe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 11 22:56:11 2017 +0100

    Fix a mistake in the error checking
    
    This is a small bug that was introduced long time ago, with commit
    84563c6303a4ab263ea19c973d3f0bbfe6fc0955.

commit a833992ed6e4efc6f1864cc890c9daa77d909704
Author: Janice <janice@moremobilesoftware.com>
Date:   Mon Dec 11 13:33:59 2017 -0800

    Add support for the Mares Quad Air

commit ca1efdcecdac3348b1125fcd0266ab12cfc20154
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Dec 6 21:23:19 2017 -0600

    Correctly determine git SHA if libdivecomputer is a git submodule
    
    In the case of a submodule, the .git file is a text file pointing to the
    correct module in the parent's .git folder. The git rev-parse works
    correctly in both cases.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit db70c581a621814feb881494c890ae8a49da709a
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Dec 6 21:23:19 2017 -0600

    Correctly determine git SHA if libdivecomputer is a git submodule
    
    In the case of a submodule, the .git file is a text file pointing to the
    correct module in the parent's .git folder. The git rev-parse works
    correctly in both cases.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f5aee8198f3361df2980e492aa9f245f5af5b4c5
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Mon Dec 4 13:53:40 2017 -0800

    Disable a couple of overly aggressive warnings
    
    -Wextra and -Wpedantic are creating more noise than useful warnings.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 506bcec3cd868711ff3bd2f42132416adb0a7f15
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Mon Dec 4 11:30:45 2017 -0800

    Add configure flag to explicitly enable BLE support
    
    This way BLE dive computers that are otherwise conditional on USBHID will be
    built on platforms that support them but don't have USBHID (like iOS).
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 77f87bebe381961db71c995abba52cc9d87bdcfb
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Dec 4 10:43:20 2017 -0800

    EON Steel: remove a few unused variables
    
    Most of the new warnings due to compiler flags are just unnecessary
    noise, but let's clean up at least the obvious and unquestionably valid
    ones.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 8c443c5abcdf69e650593ecf65b77b36255e737f
Author: Jan Mulder <jlmulder@xs4all.nl>
Date:   Mon Dec 4 02:12:13 2017 +0100

    build: ignore the build from git
    
    Now as a submodule, the change in libdivecomputer created by the
    build process is annoying. Just ignore it.
    
    Signed-off-by: Jan Mulder <jlmulder@xs4all.nl>

commit 42f8e012b74007c3c889e1bbfcc2c4d1e4be3ebc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 30 22:47:12 2017 +0100

    Don't accept a NULL pointer as parameter
    
    Immediately return an error instead of trying to pass the NULL pointer
    to the underlying open system call.

commit f87720dff9e04dbe03b668a85335012c4eb16f41
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 27 21:58:24 2017 +0100

    Add support for semi-closed circuit diving
    
    Add a new type to distinguish between closed circuit (CCR) and
    semi-closed circuit (SCR) diving. Some dive computers from HW and
    DiveSystem/Ratio support this.
    
    Because the CCR/SCR abbreviations are more commonly used, let's take the
    opportunity to also rename the existing DC_DIVEMODE_CC. To preserve
    backwards compatibility, a macro is added to map the old name to the new
    one.
    
    Reported-by: Jan Mulder <jlmulder@xs4all.nl>

commit 76187c550a806fe422920eb8795fa687244513f1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 23 21:39:53 2017 +0100

    Detect dives with invalid profile data
    
    The OSTC3 stores the dive headers and profile data in two separate
    memory areas. There is a header area with fixed positions and a profile
    area which is used as a ring buffer. Each dive header stores the
    position of the profile data in the ring buffer.
    
    Now, once there are more dive headers then room for the profiles, the
    oldest profiles (but not the headers) are overwritten with new data.
    Because the dive headers are not updated when their profile data gets
    overwritten, they will now point to data that is no longer available.
    The internal logbook detects this situation and does not display the
    profile. But during the download, there is no such check, and the OSTC
    will send invalid profile data.
    
    This invalid profile data should be dropped on the receiver side.
    Unfortunately implementing the exact same check as is done by the OSTC
    itself isn't possible, because the OSTC doesn't send the 6 byte internal
    header on which the check is based. As a workaround, the two byte
    end-of-profile marker and the length field in the profile header is used
    to detect overwritten profiles.

commit e22ba69819a42c596e3bcb46a533124f5e71afda
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 5 08:48:15 2017 +0200

    Implement the serial communication functions as no-ops
    
    For the socket based I/O stream implementations (IrDA and bluetooth) the
    serial communication specific functions are meaningless. Implementing
    them as no-ops allows the dive computer backends the call the I/O stream
    functions unconditionally.
    
    This is important for the bluetooth implementation, because bluetooth
    enabled dive computers will be able to use both the native bluetooth
    communication and the legacy bluetooth serial port emulation.

commit 823303980ef86a0c044edaa83b6ba3b8956a43ed
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 7 22:17:03 2017 +0200

    Move the socket code to a common file
    
    A large part of the irda and bluetooth code is the Windows and BSD
    socket code. Moving this code to a common file reduces code duplication.

commit 283eaa1ca6dbce8e2ee73340fb84b70bb4f96983
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 9 21:13:18 2017 +0200

    Add support for a custom I/O implementation
    
    Wih the custom I/O implementation, an application can use its own
    low-level I/O layer instead of using one of the built-in ones. The
    application only needs to provide a set of callback functions, and
    libdivecomputer will wrap them into a I/O stream.

commit cf9626efc35456b74d2d6c16d93a224dad65ceba
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 3 23:38:17 2017 +0200

    Port the USB HID code to the new I/O interface

commit 300ef5257b4b892668b9cda193f83f45d92374b1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 3 23:12:06 2017 +0200

    Port the bluetooth code to the new I/O interface

commit 8f17055ec49791edcc83b52adb58306de09e4399
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 17 23:50:14 2016 +0100

    Port the IrDA code to the new I/O interface

commit 7cd1656d1d2090eeb9576a015b000db43c941889
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 17 21:22:15 2016 +0100

    Port the serial code to the new I/O interface

commit 3ca27995e14103f0335f1a0c07826db3694f9f69
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 11 21:22:27 2016 +0100

    Add a new abstract I/O interface
    
    The purpose of the new I/O interface is to provide a common interface
    for all existing I/O implementations (serial, IrDA, bluetooth and USB
    HID). With a common interface the dive computer backends can more easily
    use different I/O implementations at runtime, without needing
    significant code changes. For example bluetooth enabled devices can
    easily switch between native bluetooth communication and serial port
    emulation mode.
    
    The new interface is modelled after the existing serial communication
    api. Implementations where some of those functions are meaningless (e.g.
    IrDA, bluetooth and USB), can just leave those functions unimplemented
    (causing the call to fail with DC_STATUS_UNSUPPORTED), or implement it
    as a no-op (always return DC_STATUS_SUCCESS).

commit b75095cefa71064f01e31e3180d8a3107650424b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 24 23:48:55 2017 +0100

    Post release version bump to 0.7.0

commit 1195abc2f4acc7b10175d570ec73549d0938c83e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 24 23:47:58 2017 +0100

    Release version 0.6.0

commit 350893fb27719bf1779d57a645b69cca0a2bc988
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 23 21:19:13 2017 +0100

    Fix some potential buffer overflows
    
    Verify the buffer size before accessing its content!

commit 68380b2ec07b37338edf8d913c3a58a05310aee0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 24 20:58:21 2017 +0100

    Fix some casts with constant pointers
    
    Casting away the const qualifier generates a compiler warning which can
    easily be avoided by preserving the const qualifier.

commit 91f5b34ae59ff0d42b37eadf99f3d203221cbd2a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 25 14:28:56 2017 +0200

    Enable some useful compiler warnings by default
    
    Because some of those compiler warnings are GCC specific, they should
    only be enabled if the compiler actually supports them. This is take
    care of with some macros from the autoconf-archive.
    
    To avoid breaking the build on systems that don't have those macros
    installed (e.g. Mac OS X), they are included in the project.

commit cbaebc777d0c9b1d5f355e5f23e5e438b9390f03
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 22 19:49:16 2017 +0100

    Generate html documentation from the manpages

commit 238a3734a57dbc80eb282bdc5a3b5043b628a7e5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Nov 19 15:36:39 2017 -1000

    Add support for new Suunto EON Core dive computer
    
    Nick Shore reports that it seems to act exactly like an EON Steel, just
    with a different USB device ID.
    
    Acting like the EON Steel is not a surprise: it does seem to be the same
    dive computer, just in a smaller and lighter package (same screen size,
    but more compact body and without the stainless steel to make it less
    than half the weight).  Looks like the battery is smaller, but the
    electronics are likely the same.
    
    We probably really should have some way to add new device ID's without
    having to add whole new model numbers etc.  It's not the first time this
    happens (see the Scubapro Aladin Square vs the G2), and it's likely not
    the last time.
    
    Reported-by: Nick Shore <support@mac-dive.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4ccfa51faf8c01ed1ca9d096fba5f49f030f3e43
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 7 22:47:21 2017 +0100

    Fix the decoding of the ndl/deco information
    
    With the new APOS4 firmware, both the tts and the duration of the first
    deco stop are recorded while in deco. But compared with the older
    firmware, the tts field has moved to a slightly different offset. And
    contrary to the new documentation, it seems that the value for invalid
    or infinite has also changed from 0xFFFF to 0x7FFF,
    
    Note that for dives recorded with an older firmware version, the
    duration of the first deco stop isn't available, and libdivecomputer
    reports the tts instead. This is the same behaviour as before.
    
    Reported-by: Janice McLaughlin <janice@moremobilesoftware.com>

commit 93fc2f1c79246c4567605aaf122c697cd2e48c28
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 7 22:43:12 2017 +0100

    Decode the firmware version for the iDive series
    
    For the older iDive series, the firmware is stored at a slightly
    different offset.

commit 4ffd514f7682ff1ebe920be920e718748bdd0a40
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 19 12:37:39 2017 +0100

    Add support for the Suunto Eon Core
    
    The Suunto Eon Core uses a different USB PID, but otherwise it's
    compatible with the Eon Steel. It's probably an Eon Steel internally,
    but with a smaller form factor.
    
    To be able to distinguish between the two models and use the correct USB
    PID, each model is assigned a different (artificial) model number.
    
    Reported-by: Nick Shore <support@mac-dive.com>

commit 812db650d42dd57f9681469330bad7d459dca6a9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 17 23:02:46 2017 +0100

    Locate the most recent dive
    
    The Suunto Eon Steel seems to have a limit of maximum 400 dives. Once
    that limit is reached, the oldest dives get overwritten with newer
    dives. But the order in which the dive entries are downloaded isn't
    changed, and thus the most recent dive is no longer the last entry.
    
    For the first 400 dives, the order is always straightforward:
    
       D001 D002  ... D399 D400
    
    The most recent dive is always the last entry, and no special processing
    is necessary. But once the limit is reached, the next few dives will
    start to overwrite the oldest dives, but the order remains unchanged:
    
       D401 D402 ... D399 D400
    
    Thus in order to return the dives in the correct order (newest first),
    we can no longer assume the most recent dive is the last entry, and thus
    we need to locate it manually.
    
    The new algorithm is based on the assumption that the most recent dive
    will have the hightest timestamp. And to be able to walk backwards
    through all the entries, the list is assumed to be a circular list.

commit f5df2653003330a19220f74ff1f4ee8274899ea1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 20 12:42:18 2017 -0700

    Add EON Steel time sync capability
    
    The EON Steel can use the new 'timesync' interface to set the time
    automatically from the computer it is connected to.
    
    This also regularizes the EON Steel command names a bit, and adds a few
    new commands (you can also read the time etc, which this doesn't
    actually use).
    
    [Jef Driesen: Modified to follow the existing naming conventions, return
    the correct error code and avoid arithmetic operations with signed
    integers.]
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 2ced18870dbd0e8b1f290b85e96e0bbeebec6686
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 15 22:47:23 2017 +0100

    Improve the progress events
    
    At the moment the progress events are reported for each download
    operation separately. Combined with the fact that the size of the dives
    isn't known in advance, and thus the progress events are based on a
    worst case value, the user experience is far from optimal. In practice,
    the progress goes from 0 to 100% for every manifest, and it stays close
    to zero while downloading the dives.
    
    This is improved by combining the individual progress events into a
    single progress for the entire download. This global progress simply
    counts the number of individual download operations. Since each
    operation is now subdivided into a fixed number of steps, regardless of
    the size of the transfer, the perceived speed is no longer constant.

commit 2d7d5152b472f53764889f16352282465792bf3f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 15 17:42:08 2017 +0200

    Detect the model number using the hardware type
    
    The model number is stored in the final block of each dive. But for an
    efficient implementation of the fingerprint feature, the devinfo event
    should be emitted before downloading the manifests or the dives. Thus
    reporting the correct model number is problematic.
    
    Currently the model number is simply hardcoded to the value of the
    Petrel. This is sufficient for the parser, because there the model
    number is only used to distinguish the Predator from all the other
    models. Now, because the petrel backend doesn't support the Predator,
    and the predator backend (which supports both the Predator and Petrel)
    can obtain the correct model number from the final block, the hardcoded
    value works fine. Except of course for identifying the actual model!
    
    Allthough there doesn't seems to be a command to retrieve the model
    number directly, we can retrieve the hardware type and map that to the
    model number.

commit 63d6af8c4141272cd9ee6cc086437d95dc5546d7
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:40:29 2017 -0700

    Shearwater: add support for remaining gas time
    
    [Jef Driesen: Update to the latest documentation.]
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 7f22f4ac86ca70f814fa6b99c1a6332afacc20dd
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:05:53 2017 -0700

    Shearwater: extract tank sensor data for log version 7
    
    The first dive computer to support this is the Perdix AI. Interestingly,
    this keeps track of two sensors at all times. I haven't seen data with
    two sensors active, yet.
    
    [Jef Driesen: Update to the latest documentation.]
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 9f754dc563a78b9fecc6f62b26a0b97915d4eb65
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:03:13 2017 -0700

    Shearwater: extract log version from header
    
    The earliest document I have references log version 6. There are
    apparently older versions, but I don't know what the differences
    are. Before version 7, the log version wasn't always reliably
    stored, so we assume 6 is the minimum and use 7 (or later) if we
    find it.
    
    [Jef Driesen: Initialize and reset the cache correctly.]
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a2f358f0b5e618182ecd67865482e364e94c12d3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Nov 16 15:24:28 2017 -0800

    Add support for Scubapro Aladin Square
    
    It works like the G2, but has a different model number, and different USB device ID.
    
    Lots-of-testing-by: Vincent <vavincavent@gmail.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 428704b538c2ee7c7e7448e5180d4f52600d6170
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 13 09:30:41 2017 +0100

    Add support for the Scubapro Aladin Square
    
    The communication protocol is identical to the G2 protocol, but with a
    different USB VID/PID (c251:2006).
    
    Note that unlike the G2, the Aladin Square seems to support only 33 byte
    USB HID packets (1 byte report id and 32 bytes payload), even when the
    actual command is much smaller. Without padding the commands, the dive
    computer doesn't reply at all. Because the padding is already there, to
    support the Windows api, no further changes are necessary.

commit 4dce920c793e9aa0e107a7680fb9702cbcff1738
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Nov 15 08:42:35 2017 -0800

    Scubapro G2 usb: always use exactly 32-byte packets (plus report byte)
    
    It turns out that the Scubapro G2 itself does not care at all, but
    apparently some of the other dive computers that use the same protocol
    do).
    
    In particular, Vincent reports that his Scubapro Aladin Square downloads
    ok with the USB ID's switched to c251:2006, but only if we send 32-byte
    USB HID payload packets, even though the command itself is much smaller.
    Otherwise it will simply not reply at all.
    
    To actually download correctly, we'll still need to do some model-
    specific USB ID updates, and there will be some model changes for the
    Aladin Square, but this at least fixes the transport side.
    
    Jef had actually already done this because of the Windows behavior side,
    I just hadn't thought it could possibly matter. Mea Culpa.
    
    Reported-and-tested-by: Vincent <vavincavent@gmail.com>
    Cc: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>
    Cc: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 20d7d03a0d923591f012dfbfc97786074e133da7
Author: Jan Mulder <jlmulder@xs4all.nl>
Date:   Mon Nov 13 10:02:43 2017 +0100

    OSTC: initialize initial CNS from header
    
    As the OSTC does not report a CNS value on the first sample, we need to
    initialize it differently. This can be solved by using the initial CNS
    value form the dive header, and storing that value in the first sample.
    The resulting patch is very similar to 44f629f03a91a3b3.
    
    Signed-off-by: Jan Mulder <jlmulder@xs4all.nl>

commit e786b0b0b649223b1c3eb248e700b9b3c3e5a6da
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 14 12:57:00 2017 +0100

    Use an out-of-range value as undefined
    
    The main purpose of the magic value UNDEFINED, is to indicate that a
    value isn't present in the data. But since the value 0xFF can actually
    be stored in the data, we can't distinguish between those two cases.
    This ambiguity can be avoided by using a magic value that lies outside
    the valid range for 8 and 16 bit fields.
    
    Note that an initial gas mix value of 0xFF remains interpreted as
    UNDEFINED, but this is now made explicit.

commit 7de3a549ee588fef4702ee9d894e390aca43950d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Nov 3 10:58:10 2017 -0700

    EON Steel: explicitly sort the dive directory listing
    
    The code relied on the dives being ordered by date in the directory
    listing, which is normally true.  But once the dive computer fills up
    (after 400 dives or so), it starts re-using entries in the dive list,
    and the dive directory is no longer ordered by date.
    
    This matters because we want to download the latest dives first, since
    subsurface will generally stop downloading once it finds an existing
    dive.
    
    NOTE! If you screw up the date on the dive computer, the old behavior
    was possibly more to your liking, since - as long as the dive list
    hadn't filled up - it wouldn't really order by date, but by dive
    creation.
    
    However, I don't see any way to get that information once the dive list
    has filled up, so "order by dive date" is as good as it gets.
    
    If you do screw up dates, and you want to download new dives that are
    "older" than the dives you already have, you will need to basically set
    the "download all dives" flag, and then select the new dives manually.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit d0d4c7b9948bb526aeaa5a7320b227252e4cd674
Author: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>
Date:   Mon Oct 23 20:55:19 2017 +0200

    Support for the Scubapro Aladin Sport Matrix.
    
    The protocol is identical to the G2 protocol, with the exception of a
    missing handshake.
    
    Signed-off-by: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>

commit 06c34fc8b05625ee2e0ed4118e6f6fc157fd9d90
Author: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>
Date:   Wed Nov 1 10:16:51 2017 +0100

    Fix model number of the Scubapro Aladin Sport Matrix.
    
    The model number was wrong. Mea culpa.
    
    Signed-off-by: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 8a84ece7d0ef380cd228287d8a39ec16bf7c59ec
Author: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>
Date:   Mon Oct 23 20:55:19 2017 +0200

    Support for the Scubapro Aladin Sport Matrix.
    
    The protocol is identical to the G2 protocol, with the exception of a
    missing handshake.
    
    Signed-off-by: Berthold Stoeger <bstoeger@mail.tuwien.ac.at>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit a1962558412b8c89a79656992c8e7f4d001065c2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 22 22:19:45 2017 +0200

    Replace the clock calibration with a fixed epoch
    
    Currently the date/time parsing assumes the reference time (epoch) of
    the device clock is unknown. Hence we retrieve the current time of the
    device (devtime) and the host system (systime) during the download.
    Since both timestamps represent the same instant in time, but with a
    different reference time, we can calibrate the device clock as follows:
    
        ticks = parser->systime - (parser->devtime - timestamp) / 2
    
    But this produces wrong results once the device clock has been adjusted
    manually. Adjusting the device clock will suddenly increase (or
    decrease) the devtime, while the systime continues ticking forwards
    normally. Hence all dives recorded before the time adjustment will get
    an incorrect date/time value.
    
    Fortunately all devices appear to use a fixed epoch (2000-01-01 00:00:00
    UTC) and we can simply replace the calibration with a hardcoded value.
    
    Reported-By: Linus Torvalds <torvalds@linux-foundation.org>

commit f708eadcfdcbcea8a83c24ccd069b0955d5710d2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 26 22:58:59 2017 +0200

    Make the initialization thread-safe
    
    Perform the initialization inside a critical section.
    
    Unfortunately Windows critical sections, which are the simplest
    synchronization mechanism available on Windows, do not support static
    initialization. A call to InitializeCriticalSection is required.
    Therefore a simple spinlock, with an implementation based on atomic
    operations, is used as a workaround.

commit 7b920f5c426e6c1574027254d658dfb8a6798d47
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 25 23:50:55 2017 +0200

    Initialize the usb library only once
    
    Initializing the hidapi library more than once is tricky. The hid_init()
    function can be called multiple times, but the the hid_exit() function
    will free the resources unconditionally, regardless of how many times
    the hid_init() function has been called. The consequence is a premature
    termination of the library.
    
    To avoid this problem, the calls are reference counted. Note that this
    workaround can't protect against calls made outside the libdivecomputer
    code!
    
    The libusb library doesn't suffer from this problem, because each
    initialization returns a new context pointer. But for consistency, we
    now also use a single reference counted libusb context.

commit bcb64b3297b0366331de7aed12f1fdf7165ac0d6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 22 22:16:56 2017 +0200

    Workaround for a Windows libusb issue
    
    When libusb uses the Windows HID api internally, it does automatically
    prepend a zero report ID to the data for devices which support only a
    single report. But apparently it also returns a size of one byte extra!
    As a workaround, the number of bytes is limited to the actual size.
    
    See commit c9ed92d3f55c259931527a27d018eb5791a176dd for a similar issue
    in the hidapi library.

commit ddb7276bf017e60e76a8d55cc119bfa485ba4210
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 22 21:50:28 2017 +0200

    Use a fixed size packet for sending
    
    The Windows HID api always expects to receive a fixed size buffer
    (corresponding to the largest report supported by the device). But
    unlike the hidapi library, the libusb library doesn't automatically pad
    the buffer to the expected size when trying to send less bytes. Thus
    when trying to submit the transfer, the underlying Windows api call
    immediately fails with ERROR_INVALID_PARAMETER.
    
    To workaround this problem, pad the data packet with zeros manually and
    always send the entire packet (1 byte report ID and 32 bytes payload).

commit a28d2feb4f3712c13bfc7f1f89ee9f92b9679f7e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 22 21:36:39 2017 +0200

    Replace the size macro with the sizeof operator

commit 5a00224c935516b2abe71582b6026a9156d4f5b0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 27 19:53:18 2017 +0200

    Use the correct printf format for the size_t type

commit 52e03944c0a04a8fcec8a283293d08c5cc64c86f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 27 19:47:43 2017 +0200

    Move platform specific macros to a common header file

commit b683eca5c8529410c973cf0a462538a23f7657e2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 28 21:45:46 2017 +0200

    Use the correct data type for the return value

commit 87adab39d76d6cb4b116c0ed0be5c4ad22f4a1f1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 12 20:48:14 2017 +0200

    Rename the DiveSystem vendor to Ratio
    
    At the time support for the Orca and iDive series was implemented, they
    were being sold under the "DiveSystem" brand. But nowadays, the newer
    iDive and iX3M series are being sold under the "Ratio" brand. Since this
    frequently confuses end-users, let's rename the libdivecomputer vendor
    name as well.
    
    The Orca and the original iDive series remain under the DiveSystem
    brand.

commit fa53d1351b2e098add73ac0d5a47316c2e87c4d8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 12 22:16:29 2017 +0200

    Fix the Sherwood Insight temperature

commit 50c4f18cf67ef480e9a01493f02eecb0a0aa70f2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 12 20:00:41 2017 +0200

    Implement the ndl/deco sample

commit 0220782aa86d84a9f11b37f32bb0be5e3cd58ca6
Author: John Van Ostrand <john@vanostrand.com>
Date:   Wed Sep 6 16:02:04 2017 -0400

    Change communication parameter to work better with FTDI
    
    The parameters used with the FTDI USB serial port drivers didn't work
    well with directly with libftdi1. The new baud rate results in the same
    effective baud rates for both.
    
    The rbstream block size was reduced to help with the unreliability of
    the libftdi communications.

commit ca4c261f6e31b782512b4cfb670e1bda0779d129
Author: John Van Ostrand <john@vanostrand.com>
Date:   Wed Sep 6 16:02:03 2017 -0400

    Retry read operations on failure
    
    Using FTDI for custom I/O resulted in very unrealible reads. This patch
    allows more reliable use of FTDI custom I/O, like what might be needed
    when used on a mobile device like Android.
    
    [Jef Driesen: Modified to retry only for non-fatal errors. This simply
    restores the code from commit b3d2c603ddec9758fb36706bbde46ce23ca9f0ed,
    which was removed in commit 55e8f83eb5d934e65fbf587d427de267f174c651.]

commit c839134130ac7bcd5b06514bd4cdc61f73f6257f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 10 21:17:03 2017 +0200

    Add support for the Suunto D4f

commit be8b95fdf9fce93a63bbd43d5d1c7e54bbe09efb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 5 20:25:30 2017 +0200

    Implement the tank pressure
    
    With the new APOS4 firmware, the latest ix3m and idive models support a
    wireless tank sensor. For dives without a tank pressure sensor, the
    pressure field in the sample is zero. Thus the first non-zero value
    indicates the presence of a tank sensor.

commit 3602a324b821b4a9035f18d331362c6d320116dc
Author: John Van Ostrand <john@vanostrand.com>
Date:   Wed Sep 6 13:00:57 2017 -0400

    Flagged Cochran DCs for FTDI communications
    
    This with serial_ftdi.c changes and other libdivecomputer changes
    enables Cochran DCs to work with libftdi on android devices.
    
    Signed-off-by: John Van Ostrand <john@vanostrand.com>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit cb2a4f4a72367f21c7cbc708fd96c96cef62ca2a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 2 10:31:19 2017 +0200

    Use more descriptive names
    
    Those two samples are no longer unknown. The first one contains some
    freedive related data, and the second one contains some additional data
    with several sub types. At the moment only the tank and gas mix info is
    used.

commit ce590b5bc92ad4595de10d08efde299e001c45a5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 2 09:47:49 2017 +0200

    Use two passes to parse the profile data
    
    In the trimix data format, the tank and gas mix information is no longer
    stored in the header, but in a special sample. Because this sample is
    usually located at the end of the profile, the info isn't available yet
    during the first pass. Hence the need for a second pass.
    
    Without this change, the tank and gas mix samples will be missing unless
    the caller calls the dc_parser_get_field() function before calling the
    dc_parser_samples_foreach() function.

commit 6b88bc1b8b18059cd570dd023c21aec4cb48087c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 31 19:44:38 2017 +0200

    Fix the Uwatec trimix data format
    
    The trimix dive header is only 84 bytes large, instead of 0xB1 bytes.
    The difference is quite hard to notice, because compared to the normal
    Galileo data format, the majority of the fields are located at exactly
    the same offset. But there are also some subtle differences, like the
    settings field containing the freedive and gauge bits.
    
    To fix this bug, a new header table is added. The rest of the code is
    updated to use this new table instead of the old trimix flag. The only
    place where the old flag is still used is for the decoding of the tank
    and pressure sample.

commit 26f5925c05b696adeb87236c68db957340b4a730
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 25 20:20:12 2017 +0200

    Implement the ndl/deco, rbt and bookmark samples

commit d954a500f634715ab6c63cac5bfddb04f8dc9022
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 22 08:40:55 2017 +0200

    Implement the setpoint sample for the iDive and iX3M

commit aa0b522ab86f06ef72dca30d1f9dc86c93f0b15c
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Jul 19 06:24:04 2017 -0700

    Mark 3 more Shearwater dive computers as BLE
    
    Technically this is inaccurate because while some Perdix and Petrel 2
    models do in fact support dual stack, the Petrel only does BT. But
    the Petrel 2 identifies itself as Petrel via BT, so we need to flag
    them both here.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit d7503b05e2997f4b0a1842a8c50e6737c5c5be9f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Aug 20 19:16:21 2017 -0700

    Scubapro G2: add zero report type to USBHID packet write
    
    Jef reports that this is required for HIDAPI, and while I would really
    like to just make the report type part of the custom packet_io interface
    instead of making it visible here, this is the minimal fix for now.
    
    See commit d251b373becc ("Add a zero report ID to the commands"), which
    does the same thing, except for the fact that we now need to treat BLE
    and USB HID differently.
    
    I may still end up teaching the USB HID custom-IO layer to add the
    report ID byte, and just specify it at dc_usbhid_custom_io() time
    instead.  That would make the G2 code not have to care about the
    transfer protocol again.
    
    (But the other user of USB HID - the Suunto EON Steel - has much bigger
    protocol differences between USB HID and BLE, so the whole "try to be
    protocol-agnostic" hope may be just a pipe dream anyway, and it's just
    the Scubapro G2 that _could_ work that way).
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit abab44a74c8835a30e69bc1ca7e878a52111875d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 20 21:28:53 2017 +0200

    Implement the ndl/deco sample for the Aqualung i300

commit aed80fe7fd570b6a8ef1d75821a5c7ca1a32e92c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 20 12:42:18 2017 -0700

    Add EON Steel time sync capability
    
    The EON Steel can use the new 'timesync' interface to set the time
    automatically from the computer it is connected to.
    
    This also regularizes the EON Steel command names a bit, and adds a few
    new commands (you can also read the time etc, which this doesn't
    actually use).
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4aac63ea00b422cae83929a61078a2951e03f4bf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Aug 19 22:32:48 2017 +0200

    Update the msvc project file

commit 156f54302d603e6231d2c599bfedd8068d7abbe4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 25 20:32:42 2017 +0200

    Add basic timezone support
    
    Allthough most dive computers always use local time and don't support
    timezones at all, there are a few exceptions. There are two different
    sources of timezone information:
    
     - Some of the newer Uwatec/Scubapro devices use UTC internally and also
       support a timezone setting. This UTC offset is currently taken into
       account to obtain the dive date/time, but the UTC offset itself is
       lost.
    
     - Uwatec/Scubapro and Reefnet devices rely on the clock of the host
       system to synchronize the internal device clock and calculate the
       dive date/time. The consequence is that the resulting date/time is
       always in the timezone of the host system.
    
    In order to preserve this timezone information, the dc_datetime_t
    structure is extended with a new "timezone" field, containing the UTC
    offset in seconds. Devices without timezone support will set the field
    to the special value DC_TIMEZONE_NONE.
    
    The dc_datetime_localtime() and dc_datetime_gmtime() functions will
    automatically populate the new field with respectively the local
    timezone offset and zero. The dc_datetime_mktime() function will take
    into account the new timezone field for the conversion to UTC. The
    special value DC_TIMEZONE_NONE is interpreted as zero.

commit 215d1155f87c0857a6a0c4d852db3bc202aae607
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 1 13:57:52 2017 +0200

    Add time synchronization to the example application

commit 22e0ab3d2b03ef462611b7a8a193ae59876c9ba4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 1 13:28:03 2017 +0200

    Implement the new api for the HW devices
    
    The Heinrichs-Weikamp devices already supported clock synchronization by
    means of a device specific function. This is now replaced with the new
    api.

commit acb4a187fb0984d55271b8d9f8c80a70721cde33
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 1 13:28:03 2017 +0200

    Add support for synchronizing the device clock
    
    Being able to synchronize the dive computer clock with the host system
    is a very useful feature. Add the infrastructure to support this feature
    through the public api.

commit eea02126a41edc42324c5dcaa628ea4d1394441a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 21 00:48:04 2017 +0200

    Use hidapi as the default USB HID library
    
    On Windows, the hidapi library uses the standard Microsoft USB HID
    driver, while libusb requires the installation of a different driver
    (WinUSB or libusbK). But installing one of the libusb drivers breaks
    compatibility with other applications using hidapi (Scubapro LogTRAK and
    Suunto DM5) because only one driver can be active. Switching
    libdivecomputer to hidapi avoids this problem.
    
    On Linux, the hidapi library doesn't seem to offer any advantages over
    libusb. Most distributions don't even have the hidapi library installed
    by default. Because there are usually two variants of the hidapi library
    available on Linux (hidapi-libusb and hidapi-hidraw), the autotools
    build system won't be able to detect it out-of-the-box, and will
    automatically fallback to the libusb implementation.
    
    On Mac OS X, hidapi is already the default (and also the only option).

commit c9ed92d3f55c259931527a27d018eb5791a176dd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 11 11:16:15 2017 +0200

    Workaround for a Windows hidapi issue
    
    The Windows HID api always expects to receive a fixed size buffer
    (corresponding to the largest report supported by the device). Therefore
    the hidapi library internally pads the buffer with zeros to the expected
    size, but apparently it also returns the size of the padded buffer! As a
    workaround the number of bytes is limited to the actual size.

commit b82d5fcfff88c16e3057bfd48cf2c312e1460944
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 11 09:52:40 2017 +0200

    Reset the number of bytes to zero on error
    
    The hidapi read and write functions return a negative value if an error
    occurs. Those negative values should not be returned to the caller as
    the actual number of bytes (or used in the logging). The value is reset
    to zero instead.

commit d251b373beccfe01eac6ba71a7f22a0ee13b09b3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 11 00:17:36 2017 +0200

    Add a zero report ID to the commands
    
    The zero report ID byte is required when using the hidapi library. We
    just never noticed this problem before, because we use libusb by
    default, and libusb doesn't need the extra zero byte.

commit 05c858bf96028508037afdabf53303f7d2571d62
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 11 00:15:39 2017 +0200

    Fix compatibility issue with hidapi
    
    The hidapi library requires that the first byte contains the report ID.
    For devices which support only a single report, the report ID byte
    should be zero. The remaining bytes contain the actual report data.
    
    Now, when hidapi uses libusb internally, it strips the zero report ID
    byte again before passing the data to libusb. Thus in order to remain
    compatible with the hidapi based implementation, our libusb based
    implementation should do the same.

commit 854ad13f1613a0923ba374ddadae22811926221b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 16 20:38:47 2017 +0200

    Implement the salinity field

commit 722160cd48df56ac37ac26366b6a3ab31faa272b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 16 20:14:47 2017 +0200

    Fix the atmospheric pressure for the iX3M
    
    The iX3M appears to store the atmosperic pressure in units of 1/10
    millibar instead of 1 millibar.

commit 133b7394c29f3093d3761c33a065f556428f66fa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 15 21:34:51 2017 +0200

    Rename the OSTC 3+ to OSTC Plus
    
    The correct name for the OSTC 3+ is OSTC Plus nowadays. Allthough the
    exact name doesn't really matter because all OSTC3 based models are
    compatible, using the correct name should reduce confusing for
    end-users.

commit 2813d61f65561ac72cb336aab7bffd085ba5dc9c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 9 10:33:21 2017 +0200

    Locate the most recent dive using the logbook pointers
    
    I received a bug report from a device which failed to download new dives
    after a reset (probably caused by an empty battery). This reset appears
    to reset the internal dive counter back to zero, and also resets the
    write pointer back to the begin of the logbook ringbuffer, but leaves
    the existing logbook entries in place. The result is that the logic to
    find the most recent dive based on the highest internal dive counter,
    will be wrong because it finds those old entries.
    
    The discovery of the logbook (and profile) write pointers eliminates the
    need to search for the most recent logbook entry.

commit f7bcbb5828646f319487c084749cbc63f6b89ba9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 11 21:04:46 2017 +0200

    Add support for the Aqualung i200

commit cdf7e8e635bc31db4684776cf49c6d07cfb1bc70
Author: John Van Ostrand <john@vanostrand.com>
Date:   Mon Aug 14 16:37:40 2017 -0400

    Add event handling to TM model
    
    For some reason I had never added event processing to this model.

commit 3f1131f80fe67f849dd22f35104c536675a5e7c4
Author: John Van Ostrand <john@vanostrand.com>
Date:   Mon Aug 14 16:37:39 2017 -0400

    Fix profile buffer size and address size
    
    I dived the model enough to wrap the profile buffer and I was wrong
    about where the end was. Also, the buffer starts 3 bytes after where it
    could. We were treating profile pointers as 4 bytes when they are two
    bytes. This worked most of the time when short tissues were clear
    (tissue load follows the pointer).

commit adef3f67fce8a14febc9f608f22a929cf65311ac
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sun Aug 13 11:24:45 2017 -0400

    Add three event codes
    
    I found three previously undiscovered event codes.

commit fb65726a55df3509b746ddd0cc8e97ce3ace04b4
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sat Jul 15 16:39:37 2017 -0400

    Add support for the Commander TM
    
    The Cochran Commander TM appears to be a first generation Commander with
    limited storage and function compared to later models.
    
    The main differences are:
    
     - The TM doesn't support high-speed transfer so use the 0x05 read
       command and don't change to a higher baud rate. Still reset to 9600
       to wait for the heartbeat.
     - The TM has a different config command (one byte).
     - The TM has only one config page.

commit 1d8f25ba9b73e094286df4b098ab5859cf61e881
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sat Jul 15 16:39:38 2017 -0400

    Dump function no longer assumes reads begin at byte 0
    
    For previously supported Cochran computers high-speed read of log and
    profile data started at byte 0. Older models that lack the high-speed
    transfer function use the standard speed read commands and so the log
    and profile data are read at higher addresses.

commit 8b41e72cf721bfeb592288357c27460196ddf358
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sat Jul 15 16:39:36 2017 -0400

    Remove unneeded function
    
    Since moving to per-dive download of profile data (and now rbstream
    download) the data->sample_data_offset and data->sample_size variables
    aren't used so calculating them doesn't make sense.

commit 88b6e36e04c5fb0fcc527615bd6a5336ad343b0f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 31 16:50:21 2017 +0200

    Use only a single read operation
    
    The profile and throw-away data can be read all at once. This avoids the
    need for an extra memory allocation and fixes a memory leak.

commit cd5eb61e904eefb97d180959b201a7b9589b1fae
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri Jul 14 19:50:57 2017 -0400

    Make rbstream pagesize smaller and device specific
    
    The progress bar was taking 18 seconds between updates on a Commander II
    when using a 128K pagesize. Since devices differ in their baud rates, it
    makes sense to use smaller pages on slower devices. This change reduces
    it to 32K on a Commander II and to 64K on EMC devices.

commit 55e8f83eb5d934e65fbf587d427de267f174c651
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sun Jul 2 22:05:12 2017 -0400

    Use rbstream for reading profile data
    
    Per-dive reading of the DC takes too long because of latency on read
    commands. The rbstream solves this by reading ahead in large blocks.

commit 4e0c2e46501e16648f5ea74b57d76b6f4d593c3f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 1 13:12:18 2017 +0200

    Remove non-existing function from header
    
    The dc_device_version() function has been removed from the public api
    long time ago.

commit 535d612a93cf1812cee0ab7a7ea5f032d3f8fcab
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 1 21:15:36 2017 +0200

    Use the correct type in the leonardo vtable

commit eed75cb0be97d8d0fc1d66f5941a29763e8defc1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 9 14:36:05 2017 -0700

    Clean up Shearwater string handling
    
    And remove the nasty and disgusting transmitter data handling code that
    Dirk added to work around his misunderstanding of the parsing code.
    
    This code now collects the various states of the transmitter batteries
    throughout a dive and reports the most meaningful summary in the end. It
    also rewrites the rest of the string handling code to be architecturally
    cleaner.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4a3f7a7cce54b64352e487e57a77409277aafa43
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Jul 8 15:25:19 2017 -0700

    Mark DC descriptors with supported transport
    
    The syntax is trivial.
    "// FTDI" for FTDI cable support
    "// BT"   for classic Bluetooth support
    "// BLE"  for Bluetooth LE support
    
    We can then parse this information during the Subsurface build process
    and create the (hopefully correct) support matrix for dive computer
    download from the mobile apps.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8ea8cebb4e6c3d86b9ceb2291caa077dabd2a3f7
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 18:00:51 2017 -0700

    Shearwater: correctly handle the different models
    
    That weird 'petrel' argument and member variable can easily be replaced
    by looking at the model.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 6f4776d6c42fdc57361185a16d69e8e49468c1e7
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 16:33:13 2017 -0700

    Shearwater: detect the hardware type
    
    Stop pretending that all the devices since the Petrel are the same. They
    actually aren't. So let's detect them and correctly identify them.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 04073759a812d2b3b178f27f0540c743ff8ccf29
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:52:28 2017 -0700

    Shearwater: add transmitter battery information
    
    This should be a STRING callback, but those come from the header and we
    don't have the information until after we have parsed all the samples.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 84ad5aa5ad179c8f7649e995e7770c20a364ded4
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:44:36 2017 -0700

    Shearwater: report battery type for logversion >= 7
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 41417fbe59c9024302966f69a1230b42d50ad390
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:40:29 2017 -0700

    Shearwater: add support for remaining gas time
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8736a6dca1aa189d5e7d19f54da0bb59973f5b3f
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:05:53 2017 -0700

    Shearwater: extract tank sensor data for log version 7
    
    The first dive computer to support this is the Perdix AI. Interestingly,
    this keeps track of two sensors at all times. I haven't seen data with
    two sensors active, yet.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit d85481cefd455a81c3557a3caa9f4f720c1d37b6
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Jul 7 07:03:13 2017 -0700

    Shearwater: extrac log version from header
    
    The earliest document I have references log version 6. There are
    apparently older versions, but I don't know what the differences
    are. Before version 7, the log version wasn't always reliably
    stored, so we assume 6 is the minimum and use 7 (or later) if we
    find it.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit fd1557f634bfebf669ba852b5c3272ab4dcfa1b0
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sun Jul 2 22:05:11 2017 -0400

    Removed unused code

commit 2c5e787b77ddb93ea97b7366ef291e0f1a8f6960
Author: John Van Ostrand <john@vanostrand.com>
Date:   Sun Jul 2 10:07:45 2017 -0400

    Fixed duplicate gasmix event reports
    
    Newer cochran DCs record a gas change event at the begining of a
    dive. The code creates a gas change before processing samples so
    with newer DCs this resulted in duplicate events.

commit 094b635f87183f399e3ad25b499f6a1a4fe99bb2
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri Jun 30 14:12:59 2017 -0400

    Added decompression event handling for the Commander
    
    I finally found an example of decompression on a Commander II computer
    and it seems to be identical to the EMC.

commit e1b679912abd107ba39050beeba4cc7858ed5ec8
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri Jun 30 14:12:58 2017 -0400

    Fix bad profiles when profile ringbuffer wraps around
    
    The method used to calculate the data used by dives (to determine when
    we run out of ringbuffer) incorrectly didn't include surface sample
    data. Ten to twenty minute of sample data is recorded at the surface in
    case the diver re-descends, continuing the dive. The code then thought
    that older dive profiles were not yet overwritten. The improper data was
    returned to the user.

commit 9c795e6e4e9ecdfe3444c6de09451ca092ac2882
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri Jun 30 14:12:57 2017 -0400

    Changed cochran_comander_profile_size function parameters
    
    This function is much more useful if it works like a
    ringbuffer_distance() function. It assumed the wrong values when
    calculating profile size and it didn't have easy access to values it
    needed to properly calculate profile sizes.
    
    It makes sense to keep since it validates pointers.

commit 48d93e94047376a968175409e36e19c17abf97a3
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri Jun 30 14:12:56 2017 -0400

    Fixed location and encoding of Commander II pointers
    
    Commander II pointers to profile ringbuffer data was wrong. After seeing
    the Commander I encoding I realized the Commander II encoding of RB
    pointers was in a flipped word big endian format. It only appeared to be
    in normal big endian format because of an adjacent pointer that usually
    shared the same first two bytes.

commit 3545bf158a57a317bbdea51fc9271c27db5561b1
Author: John Van Ostrand <john@vanostrand.com>
Date:   Mon Jun 12 15:58:25 2017 -0400

    Use a local variable for the layout pointer

commit 3a2f2ff0c3767ecfb3d6eda2137eecb1ced4cd6f
Author: John Van Ostrand <john@vanostrand.com>
Date:   Mon Jun 12 15:58:25 2017 -0400

    Add new EMC device model string

commit 216e393f434def2361a57178c8c4487999f32095
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri Jun 2 19:51:28 2017 -0400

    Add support for Pre-21000 s/n Commander dive computers
    
    This adds support for older Cochran Commander dive computers,
    specifically Commanders with serial numbers prior to 21000.
    
    This also renames "Commander" model to "Commander II" and
    adds "Commander I" to refer to pre-21000 models.

commit 45f06056789a1986c26f8af38e1bc107eaa53c95
Author: John Van Ostrand <john@vanostrand.com>
Date:   Wed May 31 19:24:47 2017 -0400

    Fix problems with wrapped logbook ringbuffer

commit b3d2c603ddec9758fb36706bbde46ce23ca9f0ed
Author: John Van Ostrand <john@vanostrand.com>
Date:   Wed May 31 19:24:47 2017 -0400

    Retry read operations on failure
    
    [Jef Driesen: Modified to retry only for non-fatal errors.]

commit 346391ae2c6e0c42d988e7950b8dd3c0b589b50c
Author: John Van Ostrand <john@vanostrand.com>
Date:   Wed May 31 19:24:47 2017 -0400

    Change profile download to be incremental
    
    It will result in a 30 minute download for full computers but it
    significantly reduces the time to download partial dives.

commit c26755624daf363a65ea6ce234a3160094da8df2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 22 21:17:46 2017 +0200

    Fix the id string offset
    
    Since commit 344bfab229a17c7227b9bec02f616505a8d9e998 only a subset of
    the id string is used to detect the model. But because the offset was
    never updated, the model detection always fails now.

commit 7ce057d2babed0cc8ccbb810afd2d33b0c191ec2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 4 14:58:52 2017 +0200

    Fix the progress events
    
    I accidentally passed the address of the progress pointer to the
    device_event_emit() function, instead of the pointer itself. Oops.

commit 0143be549747795f8613e46b06c05850ffae9af4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jun 28 13:04:24 2017 -0700

    Fix incorrect placement of -lz (zlib) in autotools build
    
    When I added support for the new Suunto EON Steel bluetooth download, I
    needed crc32(), and instead of cooking my own (libdivecomputer does do
    its own versions of the simpler crc functions), I made libdivecomputer
    just depend on zlib instead, which provides a convenient crc32() function.
    
    But I didn't add the new linker flag (-lz) in the right place in the
    automake.  It worked fine for me on Linux, but apparently not so well on
    macos.
    
    This fixes it.
    
    Reported-and-tested-by: Benjamin <nystire@gmail.com>
    Tested-by: Axel Richter <Axel.Richter@freenet.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 3a05e0ecf022a35ff62f055e1775a80c272c7d81
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 23 06:56:48 2017 +0200

    Use the trimix data format

commit 0a5623a949eef1c12fb1ce39e4941b31f0c29eb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 23 06:55:14 2017 +0200

    Use the correct model number
    
    The model number reported by the Scubapro G2 is 0x32.

commit 7ee210f83f734c0d7dbac0df5a4ff91a5dcdba3e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 20 21:36:47 2017 +0200

    Enable more fine grained progress events
    
    At the moment, the progress reporting will jump straight from about 0%
    at the start of the download to 100% at the end of the download, without
    any updates in between. This is improved by updating after every packet.

commit 06259fed1937ac3663922c5e1eebfa118933293c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 20 21:25:36 2017 +0200

    Abort with an error if the buffer is too small
    
    Silently truncating the data packet if the buffer is too small will
    result in a corrupt data stream.

commit eae071c97d1efb9971a6d77fba52ca6bdbcd1a4b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 20 21:02:01 2017 +0200

    Use the standard libdivecomputer error codes
    
    The error code returned by the dc_usbhid_read() function should be
    returned as-is, instead of being replaced with some generic error, which
    gets translated again to DC_STATUS_IO in the caller.

commit fcfee82cc875126db069fe2644cea08e42b921d0
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 07:01:51 2017 +0900

    Scubapro G2: add missed command packet logging
    
    I did the packet logging for the received data side, but forgot to do
    the same thing on the command transfer side, which makes the debug logs
    a bit less useful.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 8c0ab03706d2f30f3f750502b6f17c9347c46075
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 06:36:57 2017 +0900

    Scubapro G2: add back the initial handshake code
    
    When doing the G2 downloader, I dropped the initial handshake as I tried
    to keep the code minimal, and the handshake didn't seem to make any
    difference what-so-ever to me.
    
    And it probably doesn't matter for anybody else either.  But the code
    isn't working for some people, and maybe it does actually matter.
    
    More importantly, Scubapro's own LogTRAK application does send those two
    initial commands, and it's probably a good idea to minimize the
    differences between the different downloaders anyway, so add the
    handshake sequence back in.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 4ef57b24bb2046b1a848d284ea0b98ceff3e5896
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 06:27:21 2017 +0900

    Scubapro G2: clean up unused field
    
    Jef Driesen correctly points out that the 'address' field is just
    leftover from the IrDA code, and is meaningless for the USB HID
    transport version of the Scubapro G2.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit f107d7c0d8242e3f07b0b8ed5c9c041cc733c8f8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 8 22:16:14 2017 -0700

    Add initial Scubapro G2 frontend
    
    The back-end parser seems to be the same as for the Uwatec Smart (aka
    Galileo Sol).  At least that's the assumption right now.
    
    The downloader just uses USB HID (very similar to EON Steel) rather than
    the horrible IrDA thing.
    
    There's also eventually a BLE thing, but that's for the future.
    
    This is an unholy mixture of the Uwatec Smart downloader logic and the
    EON Steel usbhid transfer code.  The back-end is pure Uwatec Smart
    (model 0x11, same as Galileo Sol).
    
    I'm not at all sure this gets everything right, but it downloads
    *something*.
    
    [Jef Driesen: Renamed the backend to uwatec, and made some smaller
                  cosmetic changes to match the existing coding style.]
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 208807180a6421f94cf84ebc7e52795198e48e1f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Jun 27 11:32:12 2017 -0700

    Update the operations in 'custom_io' to consistent calling conventions
    
    The serial ops used a legacy calling convention that passed in just the
    pointer to the userdata pointer (ie the first argument to the functions
    was "void **userdata").
    
    That's actually very inconvenient, because the custom IO data can not
    only contain other interesting information that was filled in by the
    custom IO provider, it also made it harder to chain these things
    together, as exemplified by the core to emulate serial over the packet
    interface in the subsurface bluetooth code.
    
    This also adds the 'dc_context_t' field that is passed to the packet
    routine open.  That can allow the open routine to override the
    'custom_io' details of the context at open time (to allow nested
    custom_io operation).
    
    Note that callers of the open function need to be aware that the
    'custom_io' can be changed by the act of opening a custom_io, and the
    value shouldn't be cached in some local variable.
    
    Finally, this adds a new user-supplied opaque pointer
    
            dc_user_device_t *user_device;
    
    to the custom_io descriptor.
    
    The 'user_device' data is filled in when registering the custom_io with
    data that the custom IO open() routines can use.  This is different from
    the existing 'userdata' in that the 'user_device' is filled in before
    dc_open_device() is called (and "open" can then use it to limit what
    kinds of devices it looks for, for example).
    
    In contrast, the existing 'userdata' field is filled in by the
    "xyz_open()" routines, and contains the data necessary for the IO
    itself.
    
    The SSRF_CUSTOM_IO define is updated to v2 to indicate the new
    interfaces.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit accc63df118ed3a47ff2ee49913823d3201f5ad6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jun 24 15:01:56 2017 -0700

    Scubapro G2: update for BLE downloading
    
    The code actually almost worked as-is, but for a tiny detail: the USBHID
    packet reception code always receives a full 64-byte packet, while BLE
    GATT will return how much it actually received.
    
    The other difference is that USB HID is so fast that it didn't make any
    difference where the progress was updated, it took about a second to
    download everything.
    
    BLE GATT is not fast to begin with, and the G2 may be particularly slow.
    
    So with the BLE backend, you really do want progress updates for each
    packet received, because the dump is going to take a while...
    
    But with the trivial packet verification change, and with the progress
    report updates, everything "JustWorks(tm)" over BLE.
    
    Of course, I haven't committed the actual Subsurface BLE transfer parts
    yet, because they are some incredibly ugly stuff with fragile bits and
    pieces.  But the fact that I can now download from two different dive
    computers does mean that I think it's getting to the point where I will
    just submit even my ugly code to Dirk.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit ca115b97e2682f3c4dc04d5333fd7262e9f02149
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jun 23 15:05:42 2017 -0700

    Complete the EON Steel HDLC encoding/decoding work
    
    The previous patch did the HDLC encoding on packet send, this does the
    HDLC decoding on the receive side.
    
    In order to properly check the data integrity, the HDLC-encoded packet
    needs to be fully received before it can be processed.  So while the HID
    downloading continues to work packet-by-packet, the HDLC encoded BLE
    GATT stream needs a temporary buffer for the data that gets filled as we
    ask for the reply header.
    
    Right now only the old USB HID path is actually tested, because I
    haven't flushed out the packet receiving side in subsurface yet.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit c863db02f01c9e2ed9ed176ed2e289f3f2772e9d
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 22 21:44:28 2017 -0700

    Teach the EON Steel about HDLC encoding of the command packets
    
    The BLE GATT transport ends up using HDLC for the stream encoding,
    unlike the USB HID side.  The EON Steel BLE GATT protocol actually does
    that for both the commands and for the replies, but this converts only
    the command side, because that's the simpler one.
    
    The reply side code will need to be re-architected a bit, because right
    now it is very much oriented towards beign able to do everything one
    single packet at a time (which is true for USB HID) rather than treating
    the packets as a stream of data (as is necessary for the CRC32
    verification and to handle the escaping of the 0x7e/0x7d bytes in the
    stream).
    
    So with this change, you can't actually do a download over BLE, but I
    was able to verify that the first command transfers correctly, and the
    EON Steel replies to it over Bluetooth LE GATT.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 70526a47eb10d35d106413c4cfcc9c052bab4445
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Jun 22 18:48:14 2017 -0700

    Bump our private version
    
    Given that this is a fairly significant change, this seems
    justified.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit b7699b6985d806a7a863649642028a11f90af649
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jun 18 15:19:22 2017 +0900

    Convert Suunto EON Steel and Scubapro G2 to dc_usbhid_custom_io helper
    
    This means that they still default to their respective USB devices, but
    you can now set custom IO structure to pass in your own data.
    
    Not only will we hopefully have some kind of BLE support, you could also
    use this to simply emulate packets from a log-file by having a packet
    replay (or by actually emulating a device).  Of course, you can already
    do this by actually emulating the device in a virtual environment, but
    it might be useful for some kind of libdivecomputer testing environment.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit e59073926023d17644ec6e3b233de23d6278ecd6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jun 18 14:57:24 2017 +0900

    usbhid: add helper function to create a usbhid 'custom_io_t'
    
    Basically, this alows us to hide the usbhid code behind the custom_io
    abstraction, so that a dive computer could either be given a supplied
    custom_io structure, of if none is given, would create one for a USBHID
    device.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 60efc308d2e2448ba8b03c167b4b4ca0beec4b54
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jun 18 13:41:08 2017 +0900

    Rename 'custom_serial' as 'custom_io' across the board
    
    The custom IO handlers will be extended to not just do serial line
    emulation (generally over Bluetooth rfcomm), but do BLE too.
    
    BLE does not look like a serial protocol at all, it's packet-based, and
    we may have to add specific routines to indicate which GATT endpoints to
    use etc.  But like the traditional custom serial code, we want to do the
    actual IO not from within libdivecomputer, but from the user of the
    library (because the BLE support will require things like the Qt
    Connectivity layer - and we do not want libdivecomputer to have to link
    against something like Qt).
    
    So this renames 'custom_serial' to 'custom_io', and instead names the
    individual member function pointers 'serial_*' to make it clear that
    those members are for serial communication.
    
    It also adds new placeholders for packet_open/close/read/write.  Note
    that while these may look similar to the serial counter-parts, they are
    not the same or even necessarily mutually exclusive.  It is possible the
    the caller fills in one or the other (or both), and they would be used
    independently.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 24621ed5196c1b74206a41929c12be21c5ec7964
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 3 10:07:14 2017 +0200

    Improve the handling of unreadable dives
    
    Dives that are reported by the dive computer as unreadable (for example
    due to a power loss during the dive) are now skipped instead of being
    reported as a fatal error. Those dives can't be retrieved, so there is
    no good reason to abort the download.

commit 3b967f9eb1296193ef154b663e59e9970bccc5ed
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 3 10:01:45 2017 +0200

    Improve the handling of devices without any dives
    
    Don't return an error if the dive computer reports there are no dives
    available!

commit 5178c0f755f9606a7c472a58d5172c89bb748d6a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 3 09:59:17 2017 +0200

    Add extra NAK error codes

commit 35d1e6ff14308e85304a6952d1d50b35a14c027d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 3 09:56:02 2017 +0200

    Propagate the error code to the caller

commit e9754bac644a9ccf6668afc4fe1c294d64ad4065
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 18:22:50 2017 +0900

    Scubapro G2: make the backend_table_t contain the right values for the G2
    
    Not that anybody should ever use that old-style family/model thing
    anyway, so I considered just removing the g2 entry instead.  But dctool
    still uses this deprecated interfsce to pick a dive computer.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 323a6066884f4c3c2fda942f47d1bb54fd67fd6b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 07:01:51 2017 +0900

    Scubapro G2: add missed command packet logging
    
    I did the packet logging for the received data side, but forgot to do
    the same thing on the command transfer side, which makes the debug logs
    a bit less useful.
    
    Of course, it turns out that a bug in subsurface means that the logging
    never gets enabled anyway even when you ask for it, so right now this
    particular misfeature didn't matter.  I'm hoping Tomaz/Dirk can fix the
    UI widget problem.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit bae506397e28c6f2434fd326e3d6b237fe4a216e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 06:36:57 2017 +0900

    Scubapro G2: add back the initial handshake code
    
    When doing the G2 downloader, I dropped the initial handshake as I tried
    to keep the code minimal, and the handshake didn't seem to make any
    difference what-so-ever to me.
    
    And it probably doesn't matter for anybody else either.  But the code
    isn't working for some people, and maybe it does actually matter.
    
    More importantly, Scubapro's own LogTRAK application does send those two
    initial commands, and it's probably a good idea to minimize the
    differences between the different downloaders anyway, so add the
    handshake sequence back in.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7f21c27b7a9289e1f73fc7dc16ad41c521dd37cc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 15 06:27:21 2017 +0900

    Scubapro G2: clean up unused field
    
    Jef Driesen correctly points out that the 'address' field is just
    leftover from the IrDA code, and is meaningless for the USB HID
    transport version of the Scubapro G2.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 31c68ba3386f4f3c2d35f68faf2589464ec68211
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 13 16:31:16 2017 +0200

    Automatically re-transmit corrupt data packets
    
    Originally packets are only retried when a valid NAK packet with the
    busy error code is received. The retrying is now enabled for other types
    of errors also, such as data packets with checksum errors.

commit df9984e1234530952069850078bce0aa37b05f8b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jun 8 22:16:14 2017 -0700

    Add initial Scubapro G2 frontend
    
    The back-end parser seems to be the same as for the Uwatec Smart (aka
    Galileo Sol).  At least that's the assumption right now.
    
    The downloader just uses USB HID (very similar to EON Steel) rather than
    the horrible IrDA thing.
    
    There's also eventually a BLE thing, but that's for the future.
    
    This is an unholy mixture of the Uwatec Smart downloader logic and the
    EON Steel usbhid transfer code.  The back-end is pure Uwatec Smart
    (model 0x11, same as Galileo Sol).
    
    I'm not at all sure this gets everything right, but it downloads
    *something*.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 37392a03f277b0299d7e3412bc4d782b5fdc867b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 25 19:19:55 2017 +0200

    Add a separate transport type for USB HID

commit 58eebf4ece2e89320927f98245b7125014b00db7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 25 10:03:52 2014 +0100

    Add a bluetooth transport type

commit 3c7bd525bb738686bc41c91dd43417aecc7ba818
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 22 07:21:46 2013 +0200

    Add support for native bluetooth communication
    
    For the time being, the bluetooth communication code is of very limited
    use. It's not used anywhere in the library, and as an internal api it's
    also not available to applications. It serves mainly as a reference
    implementation for future use.
    
    The implementation supports Windows and Linux.

commit 404cea7417ebe7ee642da736ef70f45125d2a0ca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 24 20:18:26 2017 +0200

    Move the dummy IrDA implementation
    
    The dummy IrDA implementation is integrated in the main file. The
    appropriate implementation is selected using conditional compilation
    based on the features detect by the autotools build system.

commit 0b22a2ba3311f54fae92aad289cf44c638960a95
Author: Kristaps Dzonsons <kristaps@bsd.lv>
Date:   Fri Jun 2 11:24:00 2017 +0200

    Fix the Oceanic OCS freedive mode

commit 45457307765eb77790484e70586bd8f99045125e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 27 22:15:38 2017 +0200

    Report the average ppO2 in external O2 sensor mode only
    
    Just like the ppO2 values from the O2 sensors, the average ppO2 should
    be reported in external O2 sensor mode only.

commit 344bfab229a17c7227b9bec02f616505a8d9e998
Author: John Van Ostrand <john@vanostrand.com>
Date:   Fri May 26 19:29:39 2017 -0400

    Altered model detection after seeing some bytes change after a firmware update.

commit 28947876a2bd0d30ccea0d35a9264c5fe2fb0ac3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 19 20:02:33 2017 +0200

    Add support for the new models

commit 55b9307e193d989facad7383d989ec475b5a258e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 15 22:14:47 2017 +0200

    Add support for the new iX3M APOS4 firmware
    
    The new APOS4 firmware changed the data format and communication
    protocol. The size of the samples changed from 54 to 64 bytes, and in
    order to speedup the download, a single data packet contains 3 samples
    at once. If the number of samples is not an exact multiple of three, the
    last packet appears to contain garbage data.
    
    For parsing, the firmware version is available in the dive header.
    Unfortunately it can't be used for dives that are downloaded from a
    device with the new firmware, but which have been recorded with an older
    firmware. Such dives store the old firmware version in the dive header,
    but they also use the new sample format. As a workaround, we inspect the
    size of the dive.

commit 2854453f264d6414f50f897a9f37b3a60907aa8f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 9 21:16:39 2017 +0200

    Add the firmware version to the devinfo event

commit d6806ab494459b6ffc6897bddbf2622783743bec
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 8 19:24:32 2017 +0200

    Report the ppO2 in external O2 sensor mode only
    
    The O2 sensor millivolt values are only valid if external O2 sensor
    monitoring is enabled.
    
    Note that the interpretation of the PPO2 status bit appears to be
    reversed (0=external and 1=internal).
    
    Reviewed-by: Anton Lundin <glance@acc.umu.se>

commit 7e7cbd55b1c2b619a9f39a663bccc81c688b01b3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 13 21:26:56 2017 +0200

    Replace the constant offset with a scaling factor
    
    Correcting the Predator calibration value with a scaling factor produces
    even more reasonable ppO2 values compared to using a constant offset.
    The scaling factor of 2.2 is based on a linear regression between the
    average ppO2 reported by the dive computer, and the average ppO2
    calculated over all (calibrated) sensors using the raw calibration
    value.
    
    Reviewed-by: Anton Lundin <glance@acc.umu.se>

commit fe2d128b4453903ffb61feb0c10cbc69e9f3b81e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 13 21:26:56 2017 +0200

    Apply the calibration correction only for the Predator
    
    The calibration values for the Petrel are typically in the range 1600 to
    2400, while for Predator they are much smaller, with values in the range
    800 to 1400. The consequence is that the calculated ppO2 values are too
    low for the Predator. Adding a constant offset of about 1000 changes the
    calibration value to be in approximately the same range as the Petrel,
    and hence more reasonable ppO2 values. But this correction should only
    be applied for the Predator, and not the Petrel.
    
    Reviewed-by: Anton Lundin <glance@acc.umu.se>

commit d3ca3e87bd92bce7a59818998825652e025e341f
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Oct 14 19:49:25 2015 +0200

    shearwater: Report individual sensor values
    
    This reads the reported mV values from the sensors, and based on the
    calibration values converts it into a ppo2 value to report.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 588e7e7ab459b5df181d7600b891adc7458d9902
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Feb 6 09:56:21 2015 -0800

    Predator: don't report PPO2 unless in CC mode
    
    Sending this in OC mode is redundant and might confuse applications that
    assume they only get PPO2 data in CC mode.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 415d7f22144cf4187fcbcd16270c95300f74f53b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 9 20:56:08 2017 +0200

    Fix the Sherwood Wisdom 3 memory layout
    
    The logbook ringbuffer starts at 0x03D0 instead of 0x0240.

commit 21c7c9c0091c23bbd1c6c0cabd85dbd6332a755e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 2 19:27:26 2017 +0200

    Implement the read and write functions for the OSTC3
    
    The existing infrastructure for upgrading the firmware can also be used
    to support reading and writing directly to the internal flash memory.

commit 3daba977e0b93fa6fb3736dc42e9ff3c4bc3ff20
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 29 12:21:54 2017 +0200

    Don't ignore handshaking errors

commit 9df029a704101c96134de6a9b4980d24e2531fce
Author: Jan Mulder <jlmulder@xs4all.nl>
Date:   Thu Apr 27 17:06:48 2017 +0200

    OSTC3: add battery percentage
    
    From firmware version 2.15, the battery percentage is shown on the
    unit (in the logbook that is, it was shown on the display for a very
    long time). The used byte in the OSTC3 seems to be populated since
    firmware version 2.10. The new percentage data is added to the
    "battery at end" voltage data, and a V is added to denote the unit
    of the voltage.
    
    In addition, reordered the DC_FIELD_STRINGs a little, so that the
    serial is on top.
    
    Further, changed BUFLEN to 32 (as in 84eb59c) due the the length
    of the new battery notation.
    
    Signed-off-by: Jan Mulder <jlmulder@xs4all.nl>

commit 6e9278ff24705467937d90e9c8bdc4de8994a850
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Apr 30 09:49:15 2017 +0200

    Add support for the Mares Quad

commit 44f629f03a91a3b3a94e561e85c2d951861d6f69
Author: Jan Mulder <jlmulder@xs4all.nl>
Date:   Sat Apr 29 08:15:35 2017 +0200

    OSTC3: set initial setpoint in profile data
    
    In CCR fixed setpoint mode of the OSTC3, the initial setpoint at the start
    of the dive was not set. This fix adds the initial setpoint based on
    the data in the fixed setpoint table (ie, the first fixed setpoint is
    the initial one).
    
    Signed-off-by: Jan Mulder <jlmulder@xs4all.nl>

commit bdf69ce1ecf9f8c7d1d7a39274dc66af982422b9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 21 22:27:21 2017 +0200

    Remove unused parameters

commit 468418193b5cfd17909244a2d36ca1a4cb217f66
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Apr 19 08:44:27 2017 +0200

    Cleanup the extract dives functions
    
    After being removed from the public api, these functions can be changed
    into local, static functions. And in a few cases, they are no longer
    necessary and can be removed completely.

commit c5f089b4a6502949160c1114a201a22b54623e71
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 13 13:39:30 2017 +0200

    Remove unnecessary helper functions
    
    The second variant of the open or create functions were introduced to
    maintain backwards compatibility. But after being removed from the
    public api, these functions serve no purpose anymore, and can be removed
    completely.

commit d1a06e784c80178da6d6b93c44177d44f421edba
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 25 11:26:32 2017 +0100

    Remove deprecated functions from the public api
    
    The vendor_product_parser_create() and vendor_product_device_open()
    functions should be called indirectly, through the generic
    dc_device_open() and dc_parser_new() functions. And the
    vendor_product_extract_dives() functions are internal functions that
    should never have been part of the public api in the first place.

commit 8952ad0c291d0ab687e6c561a2a01a3b0a115971
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 25 11:18:40 2017 +0100

    Remove unnecessary include statements

commit 84eb59c3ce5fbdb2a34e717079ed46f38ea516e7
Author: Jan Mulder <jlmulder@xs4all.nl>
Date:   Wed Apr 12 12:45:17 2017 +0200

    Prevent buffer overrun
    
    When compiled with older Microsoft libraries, the unsafe implemention of
    snprintf results in non-null terminated strings, causing numerous subsequent
    issues. This fix just enlarges the used buffer to accommdate longer strings.
    A more complete solution would include the use more recent Microsoft libraries in
    the build process. The larger buffer is still need then, to prevent trucated
    (but proper null terminated) strings.
    
    ref: https://github.com/Subsurface-divelog/subsurface/issues/301
    
    Signed-off-by: Jan Mulder <jlmulder@xs4all.nl>

commit 97a6023bb6c467cecd0e335ab2f31369a1748e66
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 11 20:08:29 2017 +0200

    Fix the firmware version and serial number
    
    When downloading a Shearwater Petrel using the predator backend, the
    firmware version and serial number are different compared to those
    reported by the petrel backend.
    
    This is caused by a difference in the encoding of the data. In the
    predator data format, the firmware version appears to be BCD encoded,
    and the serial number is stored as a big endian integer.

commit 9fb7a1f228f24ffc4e0b57bd14cb808ed7f5f8f2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 11 19:57:12 2017 +0200

    Add support for the Uwatec Aladin Tec 3G

commit d021bb98efea02ceb4a45cb8d1ce53a132d7992f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 1 16:16:38 2017 +0200

    Disable the deco events
    
    These deco events have already been converted to a deco sample.

commit bfd7301945f430c0ffefbf3a745bf8bb8639702b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 30 23:51:14 2017 +0200

    Replace the deco events with a deco sample

commit e2c020d4c722cf23494713c109ba9c125d8b36c2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 24 23:10:16 2017 +0100

    Report errors from the close function

commit 0609a4c80a83fd0a7a7aa80b3846b2664ff8d9d6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 28 20:45:12 2017 +0200

    Mark the private function as static

commit c5d5220e287cf55ef8b043990c9c403c04315509
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 27 19:17:29 2017 +0200

    Fix a bug in the tank pressure samples
    
    The number of tank pressure sensors is not necessary equal to the number
    of gas mixes. Take for example a dive with two gas mixes, but only a
    single tank pressure sensor attached to one of the two tanks. Because
    the tank index is shared with the gas mix index, it will refer to a
    non-existing sensor when switching to a tank without a pressure sensor
    attached.
    
    The invalid tank index should not be considered a fatal error. The tank
    pressure values should be ignored instead. The device appears to record
    zero values anyway, except for the first value immediately after the gas
    switch. I suspect that's caused by the fact that the pressure is only
    recorded every 4 samples, and therefore the last pressure value is
    reported with a small delay.

commit 640308c0763ae263f2e4231b805794de585a6fc6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 26 18:17:05 2017 +0200

    Disable freedive mode for the Uwatec Aladin Tec 2G
    
    The Uwatec Aladin Tec 2G doesn't support freedive mode. This appears to
    be a bug in SmartTrak and LogTrak. They both report gauge and air/nitrox
    dives as apnea dives.

commit b1ba3fa0c65ebb04fddfe85669f1f91ad34afd4f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 26 21:26:48 2017 +0200

    Mark the private function as static

commit c5fac27bc8a14acebe85adea47dbc92e405bee3a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 7 22:17:52 2017 +0100

    Fix some compiler warnings

commit 57ffb2ba7ae83f714fdd49c9622323c3b732d153
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 7 21:38:22 2017 +0100

    Fix some more null pointer dereferences

commit 8735071fac481b1209a74545d621cf2fbf1f73bc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 14 22:12:06 2017 +0100

    Use a more efficient download algorithm
    
    The current algorithm always downloads a full memory dump, and extracts
    the dives afterwards. For the typical scenario where only a few dives
    are being downloaded, this is inefficient because most of the data isn't
    needed. This can easily be avoided by downloading the data on the fly.

commit 2646e4df86786b0b95a9f62582930c1b8e3f288b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 8 21:24:14 2016 +0200

    Use the new ringbuffer stream
    
    All dive computer backends are updated to use the new ringbuffer stream.

commit 3f82a553bdcd85a6a759913a637105608f6cd552
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 8 21:22:30 2016 +0200

    Add a common ringbuffer reading algorithm
    
    Reading a ringbuffer backwards in order to process the most recent data
    first, is a very common operation. Nearly every dive computer backend
    has its own implementation. Thus with a common implementation, the
    amount of code duplication and complexity in the dive computer backends
    can be greatly reduced.
    
    The common algorithm is implemented as a simple ringbuffer stream, which
    takes care of all the technical details like the ringbuffer boundaries,
    alignment to the page size, using the optimal packet size and caching
    the remaining data.

commit f83d156fdbecd179cfbe0dc8b57fff976abbffbc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 14 21:41:44 2017 +0100

    Improve the robustness of the IrDA I/O code
    
    The select system call modifies the file descriptor set, and depending
    on the underlying implementation also the timeout. Therefore these
    parameters should be re-initialized before every call.
    
    The existing code also didn't handle EINTR and EAGAIN correct.

commit 24cbff9a9fab03e0d4bc1b16108b04c33a27d330
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 10 20:04:47 2017 +0100

    Fix a few null pointer dereferences

commit e96611cccd9be5b4f5f95125e87f13af81db4ce4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 10 19:42:02 2017 +0100

    Fix the number of gas mixes
    
    The Tusa Zen supports a maximum of only 2 gas mixes.

commit 3f9133def9b9e30af9b9ce98546df06910a092b5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 31 22:44:02 2017 +0100

    Always use the sample timestamp as the base value
    
    With a time based sample interval, the number of samples for a single
    timestamp should be constant. However in practice some devices
    occasionally store fewer samples. Since our sample time is based purely
    on the sample interval, it goes completely out of sync with the sample
    timestamp. To avoid this problem, the sample timestamp is used as the
    base value.
    
    For the Oceanic Pro Plus 2, this problem is very noticable. After about
    115 minutes into a dive, the sample interval appears to increase to 60
    seconds. Thus, without this fix, the resulting dive time for long dives
    is suddenly much shorter than it should be.

commit 0832f97492675b753a96047974e75c947c67ea79
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 31 22:15:53 2017 +0100

    Fix the name of the Aqualung i550
    
    The Aqualung i550 doesn't have a "T" (which probably stands for
    transmitter) in its name.

commit 9cb6856bfb34593df4ed811e3d15d6a56dbbc34a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 30 20:50:26 2017 +0100

    Fix the ndl/deco and rbt samples
    
    The Air Time Remaining (ATR) and Dive Time Remaining (DTR) fields have
    been swapped.

commit ae954af768c7b52e8348e3a5aa5456b6fe6455bc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 21 09:39:28 2017 +0100

    Parse the sample interval correctly
    
    The Cressi Drake supports a sample interval of 1, 2, 3 and 4 seconds.

commit e5805f3f7d9130812fadff51aaf87f092f4d25ab
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 13 10:42:55 2017 +0100

    Fix the Aqualung i450T time samples
    
    The Aqualung i450T appears to ignore the fixed sample rate and instead
    store a timestamp in each sample.
    
    The presence of the surface samples in combination with this timestamp
    based format is odd. Even the official Diverlog software is confused:
    the Windows versions seems to ignore them, but the Mac version takes
    them into account.

commit 8a4c1f1ef7f1a5b5371aa4b3f3974e57bd2994e5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 12 13:36:00 2017 +0100

    Split the raw data into multiple vendor samples
    
    After the previous commit, the raw data is now reported with one large
    vendor sample. Because that makes the data more difficult to interpret
    (for example during debugging), a small helper function is added to
    split the data again in multiple vendor samples.

commit 7c0f8f9b9d92c1e0e7b1c6a5fe77eeca2b1d97f1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 10 21:30:17 2017 +0100

    Output samples only once all raw data is available
    
    Originally, the time and vendor sample values are emitted immediately
    after the previous sample is complete. This is now postponed until all
    raw samples are available.
    
    This will be required for the Aqualung i450t. That model appears to
    ignore the fixed sample rate and instead store a timestamp in each
    sample. That means the timestamp is only available once the last raw
    sample data has been reached.

commit 0429ea146eaa7949b58fbc2ab25fe700eb6c173d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 17 23:02:17 2017 +0100

    Fix the length check

commit ef47084e0553a38429744fefa086ab2247d7e0d1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 17 22:57:25 2017 +0100

    Skip the extra samples one by one
    
    Skipping the extra samples by increasing the length is not always
    reliable. If there are empty samples present, they will get skipped
    instead of the real samples. And if the number of samples isn't an exact
    multiple of the samplerate, we're accessing data beyond the end of the
    dive profile.

commit ef1e64ac035f95e408adbc2fb64ca4015774a73c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 10 19:05:40 2017 +0100

    Fix the memory layout for the Hollis DG03
    
    The profile ringbuffer ends at 0xFE00 instead of 0x10000.

commit 3c17132a55c8d7816796ce75107fa55e5b11f6db
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 8 23:19:13 2017 +0100

    Implement ndl/deco for the Hollis DG03

commit 6c356604ec5511006c2767eb7032e74822c09882
Author: Kristaps Dzonsons <kristaps@bsd.lv>
Date:   Thu Jan 12 13:14:48 2017 +0100

    Document the date/time functions

commit 3f74840f4c6c3a2fb2f9b98300e0c0abefa192ce
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Jan 8 23:11:24 2017 +0100

    Fix bug in ostc deco info string parsing
    
    The code was just if instead of else if by accident.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 2e650b68ae27f7d6fbf0b50a7912b3c9f0ba750d
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Jan 8 22:27:51 2017 +0100

    Teach ostc deco model info strings about OSTC4 VPM
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 6fccf5923f3129e3fd59592bb987ad1f490a4ab9
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Jan 8 22:26:31 2017 +0100

    Correct shearwater Deco model info string
    
    The literal % where in the wrong place.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit a6421b2f7b73319c2cd780b8eea909203c361c64
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Jan 8 15:12:36 2017 +0100

    Correct firmware string for OSTC4
    
    OSTC4 stores firmware in another format than OSTC3's.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 19b560d9b2f15c321172322dd506a3a139480b3a
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Jan 8 09:18:45 2017 +0100

    Fix logging of Custom Write
    
    This way we actually trace print the written buffer, even if the caller
    doesn't care about how much data he/she actually wrote.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 77b0cebb351835dd6c525c6bb37ef5472a822752
Author: Kristaps Dzonsons <kristaps@bsd.lv>
Date:   Thu Jan 5 11:22:10 2017 +0100

    Document the public api with man pages

commit 07dcc8998ba2aefe5cd354e1f9fdb0da8a6b8b87
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 29 23:25:33 2016 +0200

    Add support for the Cressi Drake
    
    The Cressi Drake is a mainly a freedive computer. The data format is
    almost identical to the Leonardo. The main difference is that a single
    dive now contains an entire freedive session. Each freedive in the
    session is delimited with a 4 byte header containing the surface
    interval and a special marker.

commit 3dbfe9d66d10085a2859960cb82e0a18f9271072
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 29 19:16:15 2016 +0100

    Detect overwritten dive profiles
    
    The logbook entries are stored separately from the profile data. If the
    profile ringbuffer is filled faster than the logbook ringbuffer, then
    the oldest logbook entries can still point to profile data that has
    already been overwritten with newer data.
    
    To detect such overwritten profile data, we keep track of the remaining
    space in the profile ringbuffer.

commit 7c7c62dab25203dc876500540b73821503cd6913
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 12 19:30:50 2016 +0100

    Ignore tank pressure if no sensor is attached
    
    If no tank pressure sensor is attached, the extra 8 bytes with the tank
    info are still present, but the recorded tank pressure value is always
    zero.

commit f74e354d68b5db4c9392cce5d0938a231080301e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 10 22:09:34 2016 +0100

    Add support for the tank field

commit 9d95870f78b612195d1292cadeb062980fa23d15
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 10 22:08:42 2016 +0100

    Add support for the salinity field

commit 8c951805789670110219c1b2b532c35f2adc12a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 10 21:45:18 2016 +0100

    Use the sample interval from the settings
    
    The sample interval is stored in the settings, and thus there is no need
    to use a hardcoded value. In practice all dives appear to be using the
    default value (5 seconds), so this is more about being future proof.

commit 296b13947f2f002929d60aaa29b1d686fc813d55
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 4 11:46:36 2016 +0100

    Update the Aqualung i750TC parser
    
    The Aqualung i750TC data format appears identical to the Oceanic VTX
    format. Therefore the i750TC parser is updated to match with the VTX
    parser.

commit 7778533bdf985eea6cc6c6d9d968b962065ddfb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 3 19:27:28 2016 +0100

    Toggle the DTR line during setup
    
    On linux, several users are reporting download problems, while on
    windows everything works fine. Simply toggling the DTR line appears to
    fix the problem.
    
    A possible explanation is that on windows, the SetCommState() function
    not only configures the serial protocol parameters, but also initializes
    the DTR and RTS lines. In the libdivecomputer implementation the default
    state is enabled (DTR_CONTROL_ENABLE and RTS_CONTROL_ENABLE). The result
    is that the DTR line gets automatically initialized to enabled, and then
    manually disabled again.
    
    On linux, the DTR and RTS lines are not automatically initialized during
    configuration, and need to be controlled explicitely. The result is that
    the DTR line ends up disabled without being toggled.

commit c3dc368163f857361aeb4052fda8adcd28926bb3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 30 00:01:30 2016 +0200

    Implement the read function
    
    The read command appears to be limited to the range 0x1000-0x1100. That
    range seems to correspond with the first 256 bytes of the full memory
    dump. The packet size of 32 bytes is an arbitrary choice.

commit 39aa859d19dcfc46eae0fabef85fbd215ad6848d
Author: Ryan McLean <pvtryan100@gmail.com>
Date:   Mon Oct 31 03:53:58 2016 +0000

    Add doxygen documentation to the build system

commit 61f3031364c40fdbf00d207bea58ae3c0ac313c3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Oct 20 09:18:09 2016 +0200

    Add support for the Aqualung i750TC

commit 4d5bc22242aa5c41de370fe2caf8f3fb524a7748
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 6 21:15:26 2016 +0100

    Fix the Windows version resource build
    
    When building the Windows version resource, the -DHAVE_CONFIG_H option
    isn't passed to resource compiler automatically. The result is that
    development builds don't have their git revision embedded in the DLL.

commit 18995e83a88aebd751f3895af6b736003b75b338
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 4 18:13:22 2016 +0100

    Force the dive mode to gauge
    
    The Citizen Hyper Aqualand supports gauge mode only.

commit 385c1850cb660f1c0285935c4d7ed977987c6807
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 3 21:14:34 2016 +0100

    Add support for the dive mode
    
    The dive mode is stored in each sample, and can change during the dive.
    In order to report a single value for the entire dive, we assume the
    value of the first sample is representive for the entire dive. For
    example a dive started as a CC dive but with a bailout to OC during the
    dive, is still considered to be a CC dive.
    
    A warning is generated if the dive mode changes.

commit 390b5fe5536e1bd339b1c8802a4bc8f53fd497b8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 1 20:14:16 2016 +0100

    Report the initial gas mix on the first sample
    
    For dives with multiple gas mixes, an application doesn't have enough
    info to figure out which one is the initial gas mix. Usually it's the
    first gas mix, but that's not guaranteed. Reporting the intial gas mix
    on the first sample avoids this problem.

commit d0dbd1f6fd95563667e9f25e98b4db19487ea40d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 4 08:50:41 2016 +0100

    Remove the deprecated gas change events
    
    The new gas mix sample has been around for a while now, and we're not
    going to maintain the deprecated events forever.

commit 590882cd1dc64a9839a1780b52ce0b399901cc8f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 4 08:21:11 2016 +0200

    Add support for the Hollis DG02.

commit 8ad3e6322eed054b64413c45106c10b133d65ccb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 1 10:46:58 2016 +0200

    Add support for the Oceanic F10.
    
    This appears to be an Oceanic branded version of the Aeris F10.

commit 8aa8bbebd56905ee03ffcde37f60c7d5627ad0ce
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 30 21:20:06 2016 +0200

    Post release version bump to 0.6.0.

commit ba0e7224b0fd68fe319b0a0ffb4caaf721b3148b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 30 21:13:27 2016 +0200

    Release version 0.5.0.

commit 81c19446047c5b80e23487487e8c6793bae79944
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 26 20:37:25 2016 +0200

    Include the public header in the implementation file.
    
    In the public header files, all symbols are marked extern C. When using
    a C compiler, there is usually no problem if the header isn't included
    in the C file. But the msvc build system uses the C++ compiler (due to
    the use of some C99 features not supported by the msvc C compiler).

commit e7ceb96627188aaa16915786e82deb7f15284630
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 26 19:59:18 2016 +0200

    Add explicit casts for the msvc C++ compiler.

commit 53c75860a73068a4f51305aeb36762e409a1a63b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 26 19:54:42 2016 +0200

    Add some workarounds for the msvc compiler.

commit 995cfd4bbd5cc95adfc4be582b3e04f65c05d782
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 23 23:04:28 2016 +0200

    Update the msvc project file.

commit 7714a57c44c134ecda672bd6c6959ad47d6de891
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 24 14:10:24 2016 +0200

    Add missing header files to the Makefiles.
    
    To be able to generate a distribution tarball, all files need to be
    listed explicitely.

commit 3cb29abfaa90d0ebf89bb72af510a845f443e620
Author: Janice <janice@moremobilesoftware.com>
Date:   Fri Sep 23 17:27:31 2016 -0700

    Add support for the Subgear XP-Air

commit 03c252335b8312299f874f4e8eba68dd2e039f42
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 18 23:40:16 2016 +0200

    Fix the firmware version for the HW Frog.
    
    The firmware version in the dive header is stored at byte offset 32
    instead of 34.

commit 417ee6e6192ee3dbcc0c2d2bd899e41ca8e5d071
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 18 08:50:46 2016 +0200

    Use the new USB HID backend for the Eon Steel.

commit 6c6b144fe01a248c0bb848d0daa456ef06c23ba5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 30 11:19:54 2016 +0200

    Add a dummy backend for systems without USB HID support.
    
    This dummy implemantion is used when building without libusb and hidapi.

commit ed2a7c91feb7bb207db124f5b4a05917950f00c0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 18 08:25:02 2016 +0200

    Use the hidapi library on Mac OS X.
    
    On Mac OS X, libusb doesn't work for USB HID devices. We can use the
    hidapi library instead. Although the hidapi library supports Linux and
    Windows too, we keep using libusb there to avoid the extra dependency.

commit bae6cb856ea36d965813a9cc7d23336a6f92d087
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 18 08:47:57 2016 +0200

    Add a new USB HID communication backend.

commit f30e048afcb5160b984b76ff46858cb680d6fd5b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 11 16:03:57 2016 +0200

    Add a configure option to build without libusb.

commit 11fec0486558d28cb929254ac9a8494c52c1836e
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sun Sep 18 08:27:24 2016 -0700

    fix compile error
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit af84bd10fd1f33b9dcedacb6fd6bf54426072cbf
Author: Gaetan Bisson <bisson@archlinux.org>
Date:   Sat Sep 17 18:02:05 2016 -1000

    export new symbol, needed by subsurface
    
    Signed-off-by: Gaetan Bisson <bisson@archlinux.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a568c756a1f1ef134386dca4caba434316fc8ab4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 19 08:23:47 2016 +0200

    Fix the gas mix parsing for the Aladin Tec 2G.
    
    Unlike the other models, the Aladin Tec 2G uses only a single byte to
    store the oxygen percentage, and there is no need to manually re-map the
    deco mix.
    
    Normally, the oxygen percentage is stored using two bytes (little endian
    byte order). Thus for a device supporting two gas mixes, four bytes will
    be used, and the corresponding gas mix id for each byte is as follows:
    
      ID: 0 0 1 1
    
    After re-mapping the id of the deco mix, this becomes:
    
      ID: 0 0 2 2
    
    Since oxygen percentages are limited to the range 0-100%, the highest
    byte (marked with an X) should always be zero and can thus be ignored:
    
      ID: 0 X 2 X
    
    Now, because an oxygen percentage of zero indicates a disabled gas mix,
    this is equivalent to a device supporting three (or even four) gas
    mixes, each stored using only a single byte:
    
      ID: 0 1 2 3
    
    We can take advantage of this knowledge to avoid having to re-map the
    deco mix id.

commit 3ea2795bf11625ed1794bf629cabcf4ec3ebfa04
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Sep 18 08:29:02 2016 +0200

    Fix merge error of AQUAI300 memory layout
    
    This removes the additional entry for AQUAI300, as it was done in "Fix
    the memory layout for the Aqualung i300." (1e22760f9102ac).
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 89111ebb2ac9a08dfa7a17be37e0fa05995b3615
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Sep 18 08:02:52 2016 +0200

    Build example applications by default again
    
    A while back, the example applications where broken in our
    Subsurface-branch, and got disabled by default. This re-enables them to
    sync better with upstream.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a6538ae7da2980904c9f0bc6e16caa11c414bb22
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Sep 18 08:20:31 2016 +0200

    Set error status if transfer fails in close
    
    This fixes whats probably was a merge error. This is a resync with
    upstream.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f7d2086675f3479bbdedade6cc9b176a78352b1d
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Sep 18 08:17:25 2016 +0200

    Don't overwrite status
    
    This removes whats probably a merge error, that overwrites the return
    status.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4c5b51f851604ccd64832e882f5bd7a250ee7df0
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Sep 18 08:10:31 2016 +0200

    Add blank row to match upstream
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 20d268acdbc6a1be49445d80cbd2d19d161875e7
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Sep 18 08:01:13 2016 +0200

    Remove last traces of our old custom serial code
    
    This is just to make future merges easier.
    
    There were nothing left of Claudiu's code in those files, so thats why i
    removed the copyright lines.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit ec473feabff7b25d4d206f474209080041a4f5a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 7 15:53:07 2016 +0200

    Restore the sample events.
    
    In commit 864b46603963ea2f70f5166bb7a738a12fc280fc, the sample events
    have been removed because we need to parse the enum string descriptor
    instead of the numeric value.

commit 94e7a77d01b4af26934a943877b0f832dd88dad8
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sat Sep 17 15:20:07 2016 +0200

    Re-implement custom serial in a new way
    
    This re-implements the custom serial concept in a new way. This way
    doesn't touch any of the backend code, it just introduces a optional
    redirection layer in the existing serial backends.
    
    This implementation supports more serial operations to, so we can
    support more backends this way.
    
    Hooking into the existing serial backends might look ugly but its
    probably the best way to make sure this patch conflicts as little as
    possible with upstream.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 7e086f697d740c00ca747dc2195e2a61fcb67c9f
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sat Sep 17 15:19:47 2016 +0200

    Remove the old custom serial code
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 5e8b4dd6dccde5b57f293dd2b147d06b5d8cc6a6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 29 15:03:02 2016 -0700

    Suunto EON Steel: initialize the tank 'gasmix' index
    
    The gasmix query interface considers cylinders and gas mixes independent
    things, so the tank data structure has a pointer to the gasmix index.
    
    But the EON Steel treats cylinders as just having a gasmix (and so does
    subsurface, for that matter), so the gasmix index for the tank is just
    the same as the tank index.
    
    But we never filled it in, so you'd always see a "gas index" of zero,
    and subsurface would end up warning each time about how the gasmix index
    doesn't match the cylinder index (but because subsurface actually agreed
    with EON Steel, it worked despite the warning).
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 40bc67d8ffc50446f9e0d81cfd7cd355dbce281e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Aug 28 12:56:09 2016 -0700

    Suunto EON Steel: do the proper enum lookup for a few more cases
    
    Instead of hardcoding the enum values for setpoint type and gas type,
    use "lookup_enum()" to actually parse the enum data and use that.
    
    I don't think this matters right now, since the numeric translations
    haven't changed, but it is the RigthThing(tm) to do.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 6352b90a34703be057e808696fd0e776085ea25b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 23 15:32:50 2016 +0900

    Suunto EON Steel: fix the event begin/end flag
    
    This fixes a bug where the begin/end marker was mistakenly added as the
    value instead of as flag.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 2b57b1181dc1e97918072dec7fa400c982ae26a5
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 19:39:51 2016 +0900

    Suunto EON Steel: split out gas info parsing
    
    The dive gas parsing cases can be split out into a helper function to
    keep things more manageable.  Especially since there will be a couple
    more cases coming up.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 864b46603963ea2f70f5166bb7a738a12fc280fc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 20 15:12:46 2016 +0900

    EON Steel: look up enum descriptor strings
    
    It turns out you can't hardcode the enum numbers either, since they
    change from dive to dive (or possibly firmware version to firmware
    version).
    
    So do it right, and actually parse the string descriptor for the enum.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a1947f3fb0f937cd31cd4dcb6c9c12a84e5755d8
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 20 11:58:00 2016 +0900

    EON Steel: pass in the type descriptor to samples that need it
    
    The samples that take 'enum' types need the type descriptor to parse
    what the enum type means.
    
    This doesn't actually use the data yet, I need to add parsing of the
    enum descriptor string.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8ade60304de874c2456ab808a7d25a84311b84bd
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 17 09:08:04 2016 +0900

    EON Steel: mark tank cache initialized when filling it in
    
    The previous commit fixed the cache initialization testing, and
    uncovered the fact that the tank size cache initialization didn't set
    the initialized bit correctly.  That oversight had been hidden by the
    fact that we then tested the bit wrongly, so not setting it right didn't
    use to matter as long as there were other higher cache bits that were
    set.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 42601825aa24ff75dee8796b5ad7d4a7e8ba4d1a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 16 15:39:19 2016 +0900

    EON Steel: fix uninitialized field cache entries
    
    The check for whether we had initialized a field in the EON Steel cache
    data structure was wrong, causing some entries to be returned
    successfully even if their field had never been initialized.
    
    In most cases, it didn't matter, since the cache data was initialized to
    zero (which is a fine default for uninitialized data), so most of the
    time it didn't matter.
    
    But for the recently added dive mode field, this caused OC dives to be
    returned as freedives, for example.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit c6b681a75398adfee04ffecec15a01002f782aec
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 20 22:51:52 2016 -0700

    Initial Suunto EON Steel CCR support
    
    This does the basic divemode and setpoint parsing for the EON Steel, and
    gets the CCR download right in the big picture.
    
    The cylinder information is still confusing and incorrect, but this is a
    big step in the right direction.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 84111fe6061591ae023e5fcb95a9c687a28f589a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 20 22:04:27 2016 -0700

    Suunto EON Steel: add descriptor debugging output
    
    .. every time I look for a new feature I add debug code to print out all
    the descriptors.  So let's just do it once and for all.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit eb61dc4c75e72839520f63854e840c705bb6b1a0
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Oct 13 19:21:56 2015 -0700

    Add tank size reporting for Suunto EON Steel
    
    Sadly the data we get from the EON Steel is a bit of a mess.
    It doesn't really tell us if the data is metric or imperial (it always sends
    both wet volume and working pressure). And in imperial mode the Suunto
    engineers seem a bit confused. The pressure given (entered on the dive computer
    in psi) is sent to us not in bar, not in atm... it's "something". As far as I
    can tell it's a constant factor of 1.00069182389937 different from bar.
    And the wet sizes are a bit to small to get the cuft size the user entered.
    But instead of trying to guess and fix the mess, we just pass it through...
    
    So this is somewhat useful, but not really what most users will want.
    
    Linus started this commit with a few lines that parsed the right values out of
    the data stream from the Suunto EON Steel. I then added the implementation of
    the infrastructure to convert the raw data and report it back to the caller.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit decfa24f92d14810c86aaa962f782aeed530b27b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 19 08:23:47 2016 +0200

    Fix the gas mix parsing for the Aladin Tec 2G.
    
    Unlike the other models, the Aladin Tec 2G uses only a single byte to
    store the oxygen percentage, and there is no need to manually re-map the
    deco mix.
    
    Normally, the oxygen percentage is stored using two bytes (little endian
    byte order). Thus for a device supporting two gas mixes, four bytes will
    be used, and the corresponding gas mix id for each byte is as follows:
    
      ID: 0 0 1 1
    
    After re-mapping the id of the deco mix, this becomes:
    
      ID: 0 0 2 2
    
    Since oxygen percentages are limited to the range 0-100%, the highest
    byte (marked with an X) should always be zero and can thus be ignored:
    
      ID: 0 X 2 X
    
    Now, because an oxygen percentage of zero indicates a disabled gas mix,
    this is equivalent to a device supporting three (or even four) gas
    mixes, each stored using only a single byte:
    
      ID: 0 1 2 3
    
    We can take advantage of this knowledge to avoid having to re-map the
    deco mix id.

commit ed8b8f1221345ee2488b48904b60a2af2e635f2e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 29 15:03:02 2016 -0700

    Suunto EON Steel: extend our string space
    
    We only used to save 16 extended strings per dive from the EON Steel
    download, which is _plenty_: it's not like we actually generate that
    many strings.  Firmware version, battery status, transmitter info -
    there's just not that many strings.
    
    Oops.
    
    Except if you have lots of transmitters.  Then each wireless transmitter
    will have three strings each, for transmitter ID and beginning/ending
    battery status.
    
    I only have one, but Andreas Klein has four.  And it took me
    embarrassingly long to realize that he really did have them on the
    dives, because after the first two transmitter IDs got recorded, the
    string space filled up and we silently dropped the rest.
    
    But I have learnt my lesson.  Future generations will talk about how I
    said "32 strings will be enough for anybody".
    
    But at least it should be enough for a few more transmitters.  Somebody
    should extend this some better way, but I'm still chasing other issues.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 6fa9f1566fbcfa7b52bb347e2e1174cbd898bd5c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Aug 29 15:03:02 2016 -0700

    Suunto EON Steel: initialize the tank 'gasmix' index
    
    The gasmix query interface considers cylinders and gas mixes independent
    things, so the tank data structure has a pointer to the gasmix index.
    
    But the EON Steel treats cylinders as just having a gasmix (and so does
    subsurface, for that matter), so the gasmix index for the tank is just
    the same as the tank index.
    
    But we never filled it in, so you'd always see a "gas index" of zero,
    and subsurface would end up warning each time about how the gasmix index
    doesn't match the cylinder index (but because subsurface actually agreed
    with EON Steel, it worked despite the warning).
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit d11d30999bcfd2d592ff809841f164b2938f44f7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Aug 28 12:56:09 2016 -0700

    Suunto EON Steel: do the proper enum lookup for a few more cases
    
    Instead of hardcoding the enum values for setpoint type and gas type,
    use "lookup_enum()" to actually parse the enum data and use that.
    
    I don't think this matters right now, since the numeric translations
    haven't changed, but it is the RigthThing(tm) to do.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 3b179e705856e3e494115f013beb1d81397c831e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 19 15:10:58 2016 +0200

    Add support for the Sherwood Vision.

commit c506be93f94eb40d7b6802685074c496d546c202
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Aug 22 20:58:37 2016 +0200

    Fix the decoding of the maximum depth.
    
    Several devices (e.g. Oceanic Geo, Oceanic Veo 2.0 and Tusa Zen) report
    a maximum depth that is clearly too large. The problem is easily fixed
    by ignoring the higher bits. The exact bit mask is an educated guess. A
    12 bit value is plausible because it's also used for the sample depths.

commit 3b18d4a448c6b35d3dcebd7af9c66ce54170d93d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 21 12:20:25 2016 +0200

    Improve the default layout detection.
    
    Select the default memory layout for unsupported devices based on the
    amount of memory indicated in the version string. This allows to
    download a full memory dump.

commit 6d3fbb7e6d954a8c44627893abf704408d0b9940
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 21 11:33:15 2016 +0200

    Add a warning for unsupported devices.

commit dfa191c9bcdb356a327fc9896a5db1214b11e0c5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 19 19:49:13 2016 +0200

    Fix the temperature for the Tusa Zen Air.

commit f666cb8cb363f20c39d139c52eabcf5c52d1ed20
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 14 10:31:12 2016 +0200

    Add support for the Aqualung i550T.

commit cba786df2fbb68ae80aed87a4ce9418b8249c264
Author: Anton Lundin <glance@acc.umu.se>
Date:   Fri Aug 19 23:21:39 2016 +0200

    Fix deco model strings in hw parser
    
    The new version of the log book format broke the string handling.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4527c77a6bfa0d65bf49f90547e7e32a0ae6364a
Author: Anton Lundin <glance@acc.umu.se>
Date:   Fri Aug 19 23:21:40 2016 +0200

    Add strings as extradata in xml
    
    This teaches the dctool about the subsurface special field strings, and
    saves them in the xml output in a way which is compatible with
    subsurface.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0ab2d8ccda12bd410a88520a15d63573234eef51
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Aug 15 10:56:04 2016 +0200

    Use the new settings field for the salinity.
    
    Since the salinity bit is stored in the settings, there is no need for a
    separate salinity entry in the header tables.

commit bfcd707889c5ba9a19d1f99d586a68937db42fb0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 25 10:26:26 2016 +0200

    Fix the parsing of freedives.
    
    In freedive mode the sample rate is only 1 second instead of 4 seconds.
    The tank pressure fields appear to be re-used for some other (unknown)
    purposes, and should be ignored.

commit 8b0a04817568602970e58e8d191e68e1295471b8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Aug 15 10:46:32 2016 +0200

    Detect the gauge and freedive mode correctly.
    
    The gauge and freedive mode bits are stored in the settings field. The
    location of the gauge bit appears to be the same for all models. For the
    freedive bit it depends on the model, and also not all models support
    it.

commit 1226b47c6d3ead53c2cf97303398dcc70f37043b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Aug 15 08:30:43 2016 +0200

    Add the salinity field for the Aladin Tec.

commit 769d90aca272aba030c7d55abb38c0b1e979479c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 14 10:07:45 2016 +0200

    Add support for the Scubapro Mantis 2.

commit af7e7aed198ffa290ef093faaf6ff052c7bc44be
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 12 11:47:41 2016 +0200

    Fix the decoding of the dive time.
    
    The dive time is stored in two separate bytes: one for the number of
    minutes, and another one for the hours. Since we only took into account
    the first byte containing the minutes, the divetime for dives longer
    than one hour was always too short.

commit ae93a6ab085d35194e519e9ee15239e1f7cd91d7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 24 11:13:52 2016 +0200

    Add support for the Scubapro Mantis.
    
    The Scubapro Mantis uses the same model number as the Meridian, and
    works out of the box.

commit 9e585a9525c65e9c7bb3e3467cf94a6845c72268
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 7 21:30:40 2016 +0200

    Fix the Aeris 500AI serial number.
    
    The Aeris 500AI serial number appears to be located at a slightly
    different offset, and with an unusual encoding. It's a BCD encoded
    number, but with the digits of each byte swapped.

commit 00c2705786aeb82064121618cf64d87aa8a376ac
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 7 21:29:06 2016 +0200

    Add the serial number encoding to the layout.
    
    At the moment, the encoding of the serial number is tied to the global
    pointer mode. To support devices where this is no longer the case, a new
    entry for the serial number encoding is added.

commit 0a769cdd57b0eb8da864bcb65997a938d8eaf67c
Author: Thomas Gschwind <th.gschwind@gmail.com>
Date:   Fri Aug 5 22:46:18 2016 +0200

    Add salinity and timezone fields to Aladin Tec 2G

commit e99b8ac8371b3ef324e124a5c6c4ee88eeae800d
Author: Janice <janice@moremobilesoftware.com>
Date:   Sun Jul 31 09:44:43 2016 -0700

    Add NDL and RBT for the ATOM31 and I450T

commit b4dc2532e82cf4a8a91419266de19a2edd1fa9e2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 21 22:26:48 2016 +0200

    Add support for the new extended hardware descriptor.
    
    The latest v2.09 (hwOS) and v1.1.0 (hwOS4) firmware introduced a new
    variant of the hardware descriptor command. This extended command
    returns:
    
     - a 16 bit hardware descriptor
     - a 16 bit feature descriptor
     - an 8 bit model descriptor
    
    The hardware descriptor is backwards compatible with the existing one
    (upper bits are all zero for now). For the OSTC4, the feature descriptor
    is currently used to indicated the Bonex scooter version (0x01), and the
    model descriptor is 0x43. For all other models, the feature and model
    descriptors are always zero for now.
    
    For older firmware versions, which do not support the new extended
    descriptor yet, there is an automatic fallback to the previous
    descriptor.

commit 9ef840fc96368b7dec6dd9419b31eb43a0ff50e5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 13 19:10:54 2016 +0200

    Update the OSTC device descriptors.
    
    There are a few new hardware variants since the last update.

commit b896847e141e110627720fcc620a5f001769713c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 12 22:30:43 2016 +0200

    Add a workaround for an OSTC4 firmware bug.
    
    Due to a firmware bug, the deco/ndl info is incorrect for all OSTC4
    dives with a firmware older than version 1.0.8. Since it's not possible
    to correct the info again, it's ignored and not returned to the
    application.

commit ff15b865b2e35d38f0ee394c3a0d0218a763d5af
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 12 22:16:21 2016 +0200

    Fix the decoding of the OSTC4 firmware version.
    
    The OSTC4 firmware version uses four digits for the firmware version
    (X.Y.Z.Beta), while all other hwOS models use two digits (X.Y). To
    preserve backwards compatibility with the existing two byte data format,
    the OSTC4 firmware version is packed into a 16 bit integer as follows:
    
       XXXX XYYY YYZZ ZZZB
    
    and stored with little endian byte order.

commit 2829f7ebf9902170bf653d67dbe412a0a4f140cf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 12 19:54:58 2016 +0200

    Add an ostc3 specific function with the model number.
    
    To be able to pass the OSTC 3 model number to the parser, and preserve
    backwards compatibility, we need a new function. The new function should
    also be used for the Frog, by passing zero as the model number.
    
    Using the hw_ostc_parser_create() function with the hwos parameter set
    to one, is now deprecated but will remain supported for backwards
    compatibility.

commit 29caab0673ead635ab623c9ee4d04d27326fef0b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 12 19:42:18 2016 +0200

    Rename the frog parameter and field to hwos.
    
    The frog parameter and field are not only used for the Frog, but also
    for all hwOS based models. Therefore, using the more generic hwos as the
    name is more meaningful.

commit 406dbf3daee76b1d1fc49a9d028a2d9ff0934022
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 23 15:32:50 2016 +0900

    Add severity indication to the event flags for the Suunto EON Steel
    
    This way Subsurface can show different icons depending on what kind of
    event we report.
    
    This also fixes a bug where the begin/end marker was mistakenly added as
    the value instead of as flag.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit ad2257569c1b4b06d2ab1bf2ad958df633f9dfb4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 22 20:17:03 2016 +0200

    Add a new dc_parser_new2 convenience function.
    
    For applications supporting offline parsing (like libdivecomputer's own
    dctool application), some device specific knowledge is still required in
    order to map a particular model to the corresponding backend. The new
    convenience function will take care of that internally.
    
    The already existing dc_parser_new() function does the same, but
    requires an open device handle, which makes it unsuitable for offline
    parsing.

commit 8fb4018db3cb43571e20e1e7075c1f196973cee3
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 19:43:27 2016 +0900

    Suunto EON Steel: add transmitter battery state reporting
    
    I'm not sure how reliable it is, and older wireless tank pods had a bug
    in the reporting (looks like the battery voltage range calibration was
    done incorrectly, and it reports 0% battery for new batteries).
    
    But depending on how well it actually works when the batteries start
    getting weak, the transmitter battery reporting is potentially *very*
    useful.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8eb1c1232ef588fc0b7439dc5ae8850b8547c120
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 19:42:14 2016 +0900

    Suunto EON Steel: add surface time reporting
    
    For some reason I hadn't reported surface time.  It's trivial to do
    especially now that we have the varargs string adding function.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 7fe87f36b536ca0b44c2204dbfc57d66bf11e877
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 19:39:51 2016 +0900

    Suunto EON Steel: split out gas info parsing
    
    The dive gas parsing cases can be split out into a helper function to
    keep things more manageable.  Especially since there will be a couple
    more cases coming up.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 459940507849e05f320d22d827f892ddea7ac881
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 19:36:51 2016 +0900

    Suunto EON Steel: add 'varargs' version of 'add_string()' function
    
    .. and use it for the cases that used to do this by hand (Personal
    Adjustment and Desaturation Time).
    
    There will be more users coming up.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 69d26e00b09a0cc0e62194d8d0081c536f8989db
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 09:17:34 2016 +0900

    Suunto EON Steel: add desaturation time reporting
    
    The EON Steel reports it in seconds remaining after the dive.  That's a
    bit excessive, but I guess SI units is where it's at.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5d4e1f97dbbcec5cac7b3771a57b0c139d3feda1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu Jul 21 08:45:37 2016 +0900

    Suunto EON Steel: add dive state event reporting
    
    Now that we support string events and don't need to try to figure out
    some libdivecomputer event number that doesn't exist, it's easy to add
    the proper support for the dive state reporting that the EON Steel has.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 3547c7211145b6f0e78b7f1a3693570e4bf91f1e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 20 15:12:46 2016 +0900

    EON Steel: look up enum descriptor strings
    
    It turns out you can't hardcode the enum numbers either, since they
    change from dive to dive (or possibly firmware version to firmware
    version).
    
    So do it right, and actually parse the string descriptor for the enum.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 1b5ccf59833d4f98ddfff4da909a0e2ad6c59ca6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 20 11:58:00 2016 +0900

    EON Steel: pass in the type descriptor to samples that need it
    
    The samples that take 'enum' types need the type descriptor to parse
    what the enum type means.
    
    This doesn't actually use the data yet, I need to add parsing of the
    enum descriptor string.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 79e2e3b0b5c122d057b5be91969371b1a5f1278e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 20 11:46:44 2016 +0900

    Add 'string' event type
    
    The event numbers are an indecipherable mess, and Suunto EON Steel has
    notifications, events and warnings that just don't fit.  Plus they
    really come as strings from the EON Steel anyway.
    
    So add a "SAMPLE_EVENT_STRING" type, and for that type the event has a
    "const char *name" instead of the odd and meaningless flags/value pair.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 2e26ae47087eef59ad954660e5de0a0af9da1e52
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jul 18 15:54:53 2016 +0900

    Make the tank "type" field more useful
    
    Right now it only has an indication of whether the cylinder size is
    imperial or metric, which is frankly quite useless.
    
    Turn it into a bitmask instead, where we keep the imperial/metric data
    for compatibility, but add another two bits that say that it's a CC
    cylinder, and whether it's the oxygen or diluent cylinder.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f38e8fe9ee78565d125100dc34b5881717e0b66e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jul 17 09:08:04 2016 +0900

    EON Steel: mark tank cache initialized when filling it in
    
    The previous commit fixed the cache initialization testing, and
    uncovered the fact that the tank size cache initialization didn't set
    the initialized bit correctly.  That oversight had been hidden by the
    fact that we then tested the bit wrongly, so not setting it right didn't
    use to matter as long as there were other higher cache bits that were
    set.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0aeae321dc1a4ba12574e39811db01f7287fd0bc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jul 16 15:39:19 2016 +0900

    EON Steel: fix uninitialized field cache entries
    
    The check for whether we had initialized a field in the EON Steel cache
    data structure was wrong, causing some entries to be returned
    successfully even if their field had never been initialized.
    
    In most cases, it didn't matter, since the cache data was initialized to
    zero (which is a fine default for uninitialized data), so most of the
    time it didn't matter.
    
    But for the recently added dive mode field, this caused OC dives to be
    returned as freedives, for example.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit c8b2d89354f5bbb18dec40bd829fd83199828583
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 3 16:19:58 2016 +0200

    Set the default model number.
    
    When the device family is provided without an explicit model number, we
    simply choose the first available model. But since new models are being
    added all the time, this default model is not guaranteed to remain the
    same. That's not desirable because it can alter the behaviour of the
    application.
    
    The introduction of the Aeris 500AI is an example of this problem. The
    default model in the vtpro family used to be the Oceanic Versa Pro. But
    because the Aeris 500AI has a lower model number, it automatically
    became the new default model. Since both use a different protocol
    variant (MOD vs INTR) they are not interchangable.
    
    The default model is now hardcoded. The best option is of course to
    provide the model number explicitly!

commit 92f84b59458fcdbaa5de643e031d0a76eb6f774c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 11 23:41:35 2016 +0200

    Refactor the oceanic download function.
    
    The large and complex oceanic_common_device_foreach() function is
    refactored into two independent helper functions. One for reading the
    entries in the logbook ringbuffer, and another for reading the profile
    data.

commit aaa7fbe08dadcd66a7bc3257a2d6e53025df4286
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 15 21:38:01 2015 +0200

    Add support for the Aeris 500AI.
    
    The Aeris 500AI is quite different from the other vtpro compatible
    models. First, it uses the INTR protocol variant. Next, it doesn't
    appear to have a logbook ringbuffer. Instead it supports a new read
    logbook index command (0x52) that returns the logbook entries. This
    requires a custom implementation of the logbook function.

commit 9c251b68142e3b863bec6d7751ce358356ff28e7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 29 20:11:03 2016 +0200

    Ignore samples with all 0xFF bytes.

commit 5824254cf58f8d2a572aebb7e5b6d627a4d2f7a5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 22 21:34:13 2016 +0200

    Add support for the INTR protocol variant.
    
    There are two variants of the vtpro communication protocol: the existing
    MOD variant and the new INTR variant. The main difference is in the
    initialization sequence, with two completely different response packets:
    
       MOD--OK_V2.00
       INTR-OK_V1.11
    
    The INTR variant does not appear to return useful information in the
    version packet.

commit b41ecd0c15872e3ed3ea62e8b15c9dd714bef48c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 21 19:31:48 2016 +0200

    Add a parameter with the model number.

commit 9bae07551fb7858f450d7501c19adff42f62b244
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 19 22:35:31 2016 +0200

    Allow custom logbook and profile functions.
    
    By adding the logbook and profile functions to the vtable, a dive
    computer backend can now easily replace the default implementation with
    a custom one, without having to duplicate the common code.

commit 4ba92e24ef0401f520d2de90255511672f0bfdc6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 28 20:29:08 2016 +0200

    Fix a crash when no dives are present.
    
    To guard applications from divisions by zero, the progress event code
    asserts the maximum value should always be non-zero. The eonsteel does
    trigger this assert when there are no dives present.

commit 1e22760f9102ac491da9baa3ce8a2c981960ab53
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 22 18:25:13 2016 +0200

    Fix the memory layout for the Aqualung i300.
    
    The profile ringbuffer ends at 0xFE00 instead of 0x10000.

commit de7ed23bec371f8402584e41c0c0631851176f98
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 20 22:51:52 2016 -0700

    Initial Suunto EON Steel CCR support
    
    This does the basic divemode and setpoint parsing for the EON Steel, and
    gets the CCR download right in the big picture.
    
    The cylinder information is still confusing and incorrect, but this is a
    big step in the right direction.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 341b7c2dad2515c93583dae9569ffd3adc80f2da
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 20 22:04:27 2016 -0700

    Suunto EON Steel: add descriptor debugging output
    
    .. every time I look for a new feature I add debug code to print out all
    the descriptors.  So let's just do it once and for all.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 47037286a24eb6db2ae9e08eda0a3396754a4124
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jun 12 15:17:28 2016 +0200

    Fix the sample rate for the Aqualung i450t.

commit 5361bc06bdd37b4dbcd89edaa3d4dcaed93eefde
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 11 10:49:15 2016 +0200

    Fix the nitrox gas mix parsing.
    
    Mares Darwin compatible devices support a nitrox mode. The nitrogen
    percentage should only be taken into account when the dive mode is set
    to nitrox, because the last used value remains in place for air dives.

commit 87facc940b677e312b391f8091db03a4dc437ef7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 2 23:40:17 2016 +0200

    Add support for the dive mode field.

commit bdc1c1349ec7baa433c541e0e1c2961f82815a52
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 1 19:25:24 2016 +0200

    Fix the length of the Vyper Novo gas change event.
    
    Just like the Suunto DX, the Vyper Novo uses 5 bytes for the 0x06 gas
    change event.

commit f67bdcd0800654b04c16e12a2b71d1bd30abe7af
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 11 08:30:41 2016 +0200

    Add support for the Aqualung i300.

commit 375fe2f6a7eed1937470beadb9d30b118202e9cf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 11 10:49:15 2016 +0200

    Fix the nitrox gas mix parsing.
    
    Mares Darwin compatible devices support a nitrox mode. The nitrogen
    percentage should only be taken into account when the dive mode is set
    to nitrox, because the last used value remains in place for air dives.

commit cb3b372b5b4bbde253814f4f2aaa5bcdef961d35
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 2 23:40:17 2016 +0200

    Add support for the dive mode field.

commit 73a06407b8d2e5cf8a283da40fb01b8dab8e7ff8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 1 19:25:24 2016 +0200

    Fix the length of the Vyper Novo gas change event.
    
    Just like the Suunto DX, the Vyper Novo uses 5 bytes for the 0x06 gas
    change event.

commit 8f776cc55e720883bb92caf17c9c5d30898d53c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 11 08:30:41 2016 +0200

    Add support for the Aqualung i300.

commit f8417037c67bbc5bb67e181f7f20440259960e31
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 8 21:20:11 2016 +0100

    Convert operating system errors.
    
    Errors reported by system calls are now converted to the corresponding
    libdivecomputer status code. This results in a more descriptive and
    meaningfull return value.

commit 4fd0118d4e5a8a356f156108d3447afb01d68849
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 6 09:37:41 2015 +0100

    Add support for 1.5 stopbits.

commit 72bd82f0a3862a27008987532b798876c96d79e6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 6 09:30:11 2015 +0100

    Add support for space and mark parity.

commit 84563c6303a4ab263ea19c973d3f0bbfe6fc0955
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 13 11:19:14 2015 +0200

    Refactor the internal serial and IrDA api.
    
    The low level serial and IrDA functions are modified to:
    
     - Use the libdivecomputer namespace prefix.
    
     - Return a more detailed status code instead of the zero on success and
       negative on error return value. This will allow to return more
       fine-grained error codes.
    
     - The read and write functions have an additional output parameter to
       return the actual number of bytes transferred. Since these functions
       are not atomic, some data might still be transferred successfully if
       an error occurs.
    
    The dive computer backends are updated to use the new api.

commit dbba7f32726687b504133a63aefb9ef32ba63ef8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Apr 27 08:56:51 2016 +0200

    Fix the date for the Sherwood Insight 2.

commit 33f5206f79e4b96aa7767f182792ffb6a0167622
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 26 21:06:45 2016 +0200

    Add support for the Beuchat Mundial 2 and 3.
    
    These two models use the same memory layout and data format as the
    Oceanic F10.
    
    Reported-By: Nick Shore <support@mac-dive.com>

commit d40cdb4755ee478530a09f297836f310d7423678
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Apr 24 19:14:52 2016 +0200

    Add the devinfo event.
    
    The devinfo event with the device serial number is required for the
    fingerprint feature. Without this event, applications won't be able to
    load (or save) the correct fingerprint. All necessary information is
    already available in the initial handshake packet.

commit 76c52b582a6298b66bdba742eae987b27dca0e40
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 23 22:52:31 2016 +0100

    Add support for the fingerprint feature.

commit ce82829284ea0888008c89ce082c7512c8d663ee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 23 22:13:25 2016 +0100

    Fix a memory leak.
    
    A new buffer is allocated for each dive, but only the last one is freed.
    Since the code is already prepared to simply re-use the same buffer,
    there is no need to allocate those extra buffers.

commit 480e54ace7ed695e96a3576fa0013fa742a7357f
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Apr 19 17:37:25 2016 -0700

    Fix OSTC3 merge errors
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0899486378f35c5fe6fc6469327a5d218f696ecd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 15 13:59:53 2016 +0200

    Add support for the new DX data format.
    
    Just like the D4i and D6i, the new header is a few bytes larger. The
    correct variant can again be detected by means of the logbook id tag at
    the start of the header.

commit ecebda3b19b4780dda31b34c30281c0a6e89726a
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Mon Apr 18 05:55:12 2016 -0700

    Fix Shearwater breakage caused by bad merging
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 6c6752d87e4eaaf8c64b1c51de416cadc4722f01
Author: Miika Turkia <miika.turkia@gmail.com>
Date:   Sat Apr 16 07:46:17 2016 +0300

    Add dummy serial number usage to dctool
    
    After adding support for serial number on dc parsers on
    libdivecomputer's Subsurface branch, we need to add the serial parameter
    to parser calls as well. Just using 0...
    
    Signed-off-by: Miika Turkia <miika.turkia@gmail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 018c27d7b307b2ff6f499ee00a99d8519e5d279a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 26 22:41:57 2016 +0100

    Add support for the Aqualung i450T.

commit 515dc17914447e7df8a4b495d6762a1f84305c4f
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Mar 30 19:51:25 2016 -0500

    Fix merge error that causes double free when downloading from EON Steel
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f3fb2391f91424f0ecbcf8d2eb5e2683cd40a53d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 27 23:29:24 2016 +0200

    Add support for the Cressi Newton.
    
    The Cressi Newton appears to be compatible with the Leonardo and Giotto.

commit 469717a2a1104eab76a72526eb9e01ef554183c5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 27 11:02:53 2016 +0200

    Add support for imperial units in the xml output.
    
    Libdivecomputer always uses metric units internally. But when reverse
    engineering a device that stores everything using imperial units, it's
    very convenient to be able to switch the output to imperial units too.

commit 8ab3fb05423450acc12267cac9b907a10013beb7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 27 11:37:05 2016 +0200

    Always close the xml tags.
    
    The dive and sample xml tags were not closed properly if an error
    occurred during parsing.

commit cb0584adc1126ed5edcd3f89834e2269fd8d4729
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 22 21:15:03 2016 +0100

    Get the gas mixes from the sample data.
    
    The Shearwater devices support adding, removing or editing gas mixes
    during the dive. The pre-defined gas mixes available in the opening and
    closing block are only a snapshot of the configuration at the start and
    at the end of the dive. Thus by editing the gas mixes during the dive
    it's possible to switch to a gas mix that is not present in the opening
    (or even the closing block). The parser doesn't support that.
    
    To avoid this problem, we now collect the available gas mixes from the
    sample data. As a side effect we only return those gas mixes that are
    effectively used during the dive.

commit f37b4b06db22c74cf2248f44402eaf092715847d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 22 20:42:58 2016 +0100

    Cache the dive mode internally.
    
    This simply moves the code to the get the dive mode from its own
    function into the existing caching function.

commit aa2f670224f4759ef636df23e09b017917f1ffb8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 17 21:16:26 2016 +0100

    Add support for the Shearwater Perdix.

commit af30fbb3f8fad19d415b96abd95cfcb8ae0773f0
Author: John Van Ostrand <john@vanostrand.com>
Date:   Tue Oct 7 12:09:31 2014 -0400

    Add support for the Cochran Commander and EMC.

commit b13d8da426844d5f3910a4c1b3311f10eb812573
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Mar 22 10:35:04 2016 -0700

    Don't build examples by default
    
    They are broken in this branch.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 7f6348b0663160401e746eac73067c27ae56b5cf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 16 18:16:52 2016 +0100

    Add support for the Uwatec Aladin Sport.
    
    The Aladin Sport appears to be compatible with the Aladin 2G.

commit 95d69ea30d620ac962e2d82b8d6f27b50f6472aa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 10 20:46:10 2016 +0100

    Add support for the Suunto Zoop/Vyper Novo.
    
    The Zoop Novo and Vyper Novo are compatible with respectively the D4i
    and D6i.

commit cc12560b299e45fed2ae5293c948a3c3732c08db
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 10 20:11:47 2016 +0100

    The new D6i data format support 3 gas mixes.

commit 784844d8dda52b4bafc96a501007af4fd282ce89
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 8 20:01:20 2016 +0100

    Add support for the new D4i and D6i data format.
    
    One of the newer D4i and D6i firmware versions (for example v1.5.9),
    introduces a new variant of the data format. The new dive header is 8
    bytes larger. The correct variant can be detected by means of the
    logbook id tag at the start of the header.

commit 2fc31b72e7d8a243b8e4f48289ccd3ea77ca4457
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 4 21:40:17 2016 +0100

    Add support for the HW OSTC 4.
    
    Except for the firmware update and a few other minor differences, the
    new OSTC4 is backwards compatible with the OSTC3.

commit 2e0db552adaa9bda55a4ef2e12bb35df70344ed6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 23 08:23:26 2016 +0100

    Read and cache the hardware descriptor.
    
    By reading the hardware descriptor immediately after entering download
    or service mode, we can identify the specific model and adapt to minor
    differences in the communication protocol.

commit 6bb60bba3199018ca082baf981a65468013f1b63
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 23 08:16:26 2016 +0100

    Pass an array to the checksum function.

commit c8b166dadbf961e17a9bd1cc28db3d92832ddf72
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 22 21:15:03 2016 +0100

    Get the gas mixes from the sample data.
    
    The Shearwater devices support adding, removing or editing gas mixes
    during the dive. The pre-defined gas mixes available in the opening and
    closing block are only a snapshot of the configuration at the start and
    at the end of the dive. Thus by editing the gas mixes during the dive
    it's possible to switch to a gas mix that is not present in the opening
    (or even the closing block). The parser doesn't support that.
    
    To avoid this problem, we now collect the available gas mixes from the
    sample data. As a side effect we only return those gas mixes that are
    effectively used during the dive.

commit c964fa5ad9a4ff5138f5612ac2d3d1cc20eb16f9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 22 20:42:58 2016 +0100

    Cache the dive mode internally.
    
    This simply moves the code to the get the dive mode from its own
    function into the existing caching function.

commit 0bb3f7ebd15ee5e86da61770cbfd479c2ab0a9ed
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 17 21:16:26 2016 +0100

    Add support for the Shearwater Perdix.

commit 9a4e2b75a54fc174bdb691b6298e3ca0e691c4f2
Author: John Van Ostrand <john@vanostrand.com>
Date:   Tue Oct 7 12:09:31 2014 -0400

    Add support for the Cochran Commander and EMC.

commit 280f1871f07dab9dcc36f9bf2a07f5ed62e1e0e5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 16 18:16:52 2016 +0100

    Add support for the Uwatec Aladin Sport.
    
    The Aladin Sport appears to be compatible with the Aladin 2G.

commit 50ba063a460bd870486a4edd050a6387828c0307
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 10 20:46:10 2016 +0100

    Add support for the Suunto Zoop/Vyper Novo.
    
    The Zoop Novo and Vyper Novo are compatible with respectively the D4i
    and D6i.

commit 63dcee9eaaad8036d782db8d3e93887356e6ac9b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 10 20:11:47 2016 +0100

    The new D6i data format support 3 gas mixes.

commit 2e64d47dffe226773f4546718da88b24b223fb5f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 8 20:01:20 2016 +0100

    Add support for the new D4i and D6i data format.
    
    One of the newer D4i and D6i firmware versions (for example v1.5.9),
    introduces a new variant of the data format. The new dive header is 8
    bytes larger. The correct variant can be detected by means of the
    logbook id tag at the start of the header.

commit 28f8cf6e1955ea39f09389c0beb0363b54072089
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sun Mar 6 10:05:45 2016 -0800

    Add configure option to disable checking for libusb and hidapi
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit dbd604abb0aa6634163fecc69d88331f976af409
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 4 21:40:17 2016 +0100

    Add support for the HW OSTC 4.
    
    Except for the firmware update and a few other minor differences, the
    new OSTC4 is backwards compatible with the OSTC3.

commit f0c442751d5d25891a9b540a7c264a076a41c171
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 23 08:23:26 2016 +0100

    Read and cache the hardware descriptor.
    
    By reading the hardware descriptor immediately after entering download
    or service mode, we can identify the specific model and adapt to minor
    differences in the communication protocol.

commit 6ce83347f0f69dd32176275d327a1c489cf2ce6b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 23 08:16:26 2016 +0100

    Pass an array to the checksum function.

commit 55a44a73bb608b221c9652513aa5186a7b530a0a
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sun Feb 28 06:34:57 2016 +0100

    One more merge fix
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 90cf480c259be0537892df4faafd70b5616f4035
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 23 22:57:52 2016 +0100

    Fix the OSTC3 missing initial gas mix detection.
    
    For the OSTC3 compatible devices, a missing initial gas mix (e.g. no gas
    marked as the first gas) leaves the initial gas mix index at its default
    value of zero. This is different from the OSTC2 compatible devices,
    where a missing initial gas is stored as the value 0xFF.
    
    By initializing the index with the value 0xFF, the existing detection
    works for both variants.

commit 83e54d84a212298b73d9a4db701462c2ca71a27c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Feb 7 21:29:27 2016 +0100

    Add support for the parse command.

commit e8b9e881714b62e57c35320b3d58beb8b0914de8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 6 15:58:23 2016 +0100

    Integrate the new output formats.
    
    The existing output code is removed and replaced with the new XML and
    RAW output formats. The desired output format can be selected with a new
    command-line option. The XML format remains the default output format.

commit 5d9ddafc41a7889119953ecba810c227f72c65f5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 6 15:37:27 2016 +0100

    Add support for the raw output format.
    
    The RAW output format exports each dive to a raw (binary) file. To
    output multiple files, the filename is interpreted as a template and
    should contain one or more placeholders.

commit e35f0a3ff45dde9114bba1c896b64c226c065a78
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 6 15:35:08 2016 +0100

    Add support for the xml output format.
    
    The XML output format exports all dives to a single xml file.

commit 195702046c9f2a1d6a1445c2735a634227838043
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 6 15:27:40 2016 +0100

    Add a new abstract output interface.
    
    The new output interface provides the necessary infrastructure to add
    support for multiple output formats. Due to the abstract interface, each
    new format will require only minimal changes in the application itself.

commit 4765f7bc500d0caf22cadd7df81a356313762d7a
Author: Janice <janice@moremobilesoftware.com>
Date:   Fri Feb 19 10:25:57 2016 -0800

    Fix year decoding for Sherwood Amphos Air

commit aafdbe8baadf5eeacc7a47f5b5cb301a2b6f99c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 16 20:34:01 2016 +0100

    Fix the date for the Oceanic Datamask.

commit d2e150319b96049516e69ad3ba87cf4cd254e095
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 4 08:31:44 2016 +0100

    Fix the decoding of negative temperatures.
    
    Due to a firmware bug, negative temperatures are stored incorrectly and
    a workaround is necessary to recover the correct value.

commit 67a3697a4d90233cad53d2770b2204e8f39e1668
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 27 23:49:13 2016 +0100

    Disable the getopt argument permutation on BSD systems.
    
    On BSD based operating systems (which includes Mac OS X), the getopt()
    function is posix compliant and thus the option processing stops when
    the first non-option is found. But the getopt_long() function permutes
    the argument vector, just like the GNU implementation.
    
    Using a leading '+' character in the option string disables the
    permutation again.

commit 5add68b2d5d60d623ad6fb40d1e63b1bdd2da632
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 27 23:41:51 2016 +0100

    Use the optreset variable on BSD systems.
    
    On BSD based operating systems the optreset variable should be used to
    reset the internal getopt state. Setting optind to zero is a GNU
    extension.

commit ade8619ea65e415394f648a44b8350de40a17951
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 26 19:33:46 2016 +0100

    Don't assume malloc sets errno to ENOMEM.
    
    Although many implementations (including glibc) set errno on failure,
    this is not required by the C standard.

commit 4228899f59f27002e36051ed4f5ac9c22690be47
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 21 20:20:31 2016 +0100

    Reduce the conditional compilation for Windows.
    
    With a few compatibility macros and helper variables, the amount of
    conditional compilation can be greatly reduced.

commit 4475d698142712dcdeb8c40526ed411003b1c2a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 21 20:05:42 2016 +0100

    Use the error code returned by the WSAStartup function.
    
    Unlike the other socket functions, the WSAStartup() function returns the
    extended error code directly. A call to the WSAGetLastError() function
    is not needed and should not be used.

commit 6b3874121d189e4a672bc0915e890dc5e12690d9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 16 17:03:06 2016 +0100

    Don't ignore zero depth samples in freedive mode.
    
    In freedive mode, samples are only 2 or 4 bytes large, thus a sample
    containing all 0x00 bytes represents a zero depth value and not some
    invalid data that should be ignored.

commit 789fdb4d9afb79230acedb7d4a347ec7e6af0ca3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 16 08:47:09 2016 +0100

    Remove the footer sample for the F10 and F11.
    
    The F10 and F11 don't seem to have a special footer sample after the
    profile data. Those 8 bytes appear to be valid sample data.

commit ca032783a283d798ce4603ae527b379f5964f934
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 14 10:50:08 2016 +0100

    Fix the decoding of the dive time.
    
    I originally assumed the second byte contains the hour, but that turns
    out to be wrong. At least some of the bits have a different meaning.
    With only seconds and minutes, the maximum divetime is limited to at
    most 99 minutes and 59 seconds. That shouldn't be a problem for
    freedives.

commit 49af321bc5cff5cd3b0dc0b08ebf52e37801f85e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 12 22:37:46 2016 +0100

    Use the correct sample rate from the header.
    
    The Oceanic and Aeris F11 have a configurable sample rate. The possible
    sample intervals are 2, 1, 0.5 and 0.25 seconds. Since our smallest unit
    of time is one second, we can't represent the last two, and the extra
    samples will get dropped for now.

commit 9d856e5a369b3044211e4e1d8db3a11074057e20
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 11 11:11:26 2016 +0100

    Fix the memory layout for the Oceanic F11.

commit 9520ecddbc2a13504421de77bbcf9eae6f56c23d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 10 22:07:42 2016 +0100

    Add support for the Oceanic F11.
    
    This appears to be an Oceanic branded version of the Aeris F11.

commit 0afa60bd977ecfe78ad156407e7828e86a34f8dd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 7 22:02:12 2016 +0100

    Return a more appropriate error code.
    
    The DC_STATUS_IO code is intended for reporting low-level I/O errors.
    That's not the case here, and there are more appropriate error codes
    available.

commit ff29d218bbc4b47f3560b444287a6681aa0ae65b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 14 12:05:43 2015 +0100

    Use helper functions to allocate and free objects.
    
    Both the allocation and initialization of the object data structure is
    now moved to a single function. The corresponding deallocation function
    is intended to free objects that have been allocated, but are not fully
    initialized yet. The public cleanup function shouldn't be used in such
    case, because it may try to release resources that haven't been
    initialized yet.

commit 9bc14dca10e02f6862ad0131dabda5aed99ba56f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 14 11:33:46 2015 +0100

    Remove some boilerplate code from the cleanup functions.
    
    Instead of freeing the object data structure in the backend specific
    cleanup function, the memory is now freed automatically in the base
    class function. This reduces the amount of boilerplate code in the
    backends. Backends that don't allocate any additional resources, do no
    longer require a cleanup function at all.

commit f1c024905359cc6d6d24f79f40b65d519d96b126
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 12 19:51:52 2015 +0200

    Simplify the error handling in the close function.
    
    When the close function returns, all resources should be freed,
    regardless of whether an error has occured or not. The error code is
    purely informative.
    
    However, in order to return the first error code, which is usually the
    most interesting one, the current implementation is unnecessary
    complicated. If an error occurs, there is no need to exit immediately.
    Simply store the error code unless there is already a previous one, and
    then continue.

commit 18d4d5dcc02f5fcd297f9ffaa057c2ecc386ece9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 12 19:46:00 2015 +0200

    Switch to goto style error handling.
    
    With the goto error handling, all cleanup code can be moved to a central
    location and no longer needs to be duplicated multiple times.

commit 013882f3f20c5659f46f57dbd069b0915dce6176
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 20:28:22 2015 +0100

    Add the fwupdate command.

commit ce472ffa19fcdd5fbbe6f86170e4d54b518fade2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 19:46:48 2015 +0100

    Add the read and write commands.

commit 195c4c7a7e240ad820b3d9c7b1f8cd402d1c8f68
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 19:19:34 2015 +0100

    Add the download command.

commit bfbb56c781f209694b51904572888132faeeef63
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 19:08:57 2015 +0100

    Add the dump command.

commit ff7c3f6901655416389aaa995bbc40c4042465d6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 19:06:34 2015 +0100

    Add the list command.

commit 4dee95d352a3767d75fc1def0b25c1ae8d72bd33
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 17:36:32 2015 +0100

    Add the version command.

commit 38c9ebc74e704167ca83bed8c718a626aaac622f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 15:36:29 2015 +0100

    Add the help command.

commit 57a54f824c460d224ab451893863df0fddda5111
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 14:24:40 2015 +0100

    Add helper functions for converting hexadecimal data.

commit 8f61648a39f8341bbc9e4980d2ebd0c8349c770a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 09:00:06 2015 +0100

    Add helper functions for reading/writing binary files.

commit 5188f5c25f88136625326d10847e18b5feff8ee6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 08:55:04 2015 +0100

    Add a helper function for translating status codes.

commit 655e9ad312ac68521dc219145b38825ca6a6f027
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 08:48:02 2015 +0100

    Add a default event handler.

commit 28d87592945acf85e03ffeb948728773b9ea2d6d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 08:21:34 2015 +0100

    Setup the cancel signal handler.

commit f0e5edc50b042019d05849725c1a10946b1367ed
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 07:51:17 2015 +0100

    Setup the device descriptor.

commit 3c57060d95523347cfe5a6f70b01a50058b892d2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 07:46:52 2015 +0100

    Setup the library context.

commit 689e1f1f5584467465b5c16610bec6bbf59df9a7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 07:30:48 2015 +0100

    Change the format for error and warning messages.
    
    Use the same format as used for printing the error and warning messages
    from libdivecomputer itself.

commit b5503e53fd7555cfbc5da6a582d8e60b5e10eef8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 07:26:07 2015 +0100

    Add a more modular example application.
    
    The universal application works well, but is quite difficult to extend
    with more functionality. Therefore a new and more modular application is
    needed. The new dctool application will support multiple sub-commands,
    to carry out specific actions. Extending the application will be as easy
    as adding new commands.

commit dd779d531a19efbae21db5f21edc77a8f9bb4370
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 3 20:35:57 2016 +0100

    Fix the date parsing for several models.
    
    To store the day (range 1 to 31) as a binary encoded value, only 5 bits
    are required. The extra 6th bit is part of the year. The year is also
    not BCD encoded. This happened to work by accident, because for a single
    nibble, the current implementation of the bcd2dec() function returns the
    binary value.

commit 06e0de67120635ff8e7b4e383b748c9a0e978b13
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 4 08:56:10 2015 +0100

    Add a new sample with the active gas mix.
    
    The new gasmix sample contains the index of the active gas mix.
    
    This new sample is intended as a replacement for the existing gas change
    events (SAMPLE_EVENT_GASCHANGE and SAMPLE_EVENT_GASCHANGE2). To maintain
    backwards compatibility, the legacy events are marked as deprecated but
    not removed yet.

commit d8398529538c0fb011e56090d7002aef2736eb9a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 21 09:34:44 2015 +0100

    Parse the profile to retrieve the bailout gas mixes.
    
    In CC mode, only the diluents are stored in the header. The list with
    the OC gas mixes, which are used for bailout, are not stored in the
    header. In order to retrieve the bailout mixes too, we need to parse the
    profile and add them to the manual gas mixes.

commit 5c6c4cccc7702bdda47caccab32fd866b380f1dd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 8 20:18:16 2015 +0100

    Add support for the DiveSystem iX3M series.
    
    The protocol of the iX3M series is almost identical to the protocol of
    the iDive series. The main difference is that the command bytes and the
    size of the response packets have been changed. In order to be able to
    communicate with the correct set of commands, the user needs to supply
    the correct number now. To maintain backwards compatibility, a new
    variant of the open function is added.

commit d516376ce768dd66433c919c9c97b5cde1c3221a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 9 20:07:22 2015 +0100

    Improve the support for pseudo terminals.
    
    Apparantly Fedora applies a custom patch to glibc's tcsetattr()
    function, which adds an extra check to verify the PARENB/CREAD/CSIZE
    bits in the termios c_cflag field.
    
    However, in commit 197b9f09421111e03588c94d55a72aa6ec624c63 we already
    discovered that for pty's, some of the termios settings make no sense at
    all, and therefore the Linux kernel always does:
    
        tty->termios.c_cflag &= ~(CSIZE | PARENB);
        tty->termios.c_cflag |= (CS8 | CREAD);
    
    Thus, instead of ignoring such nonsense termios settings, the kernel
    changes the termios structure to reflect what pty's actually do. The
    consequence is that these settings will not stick, and cause the extra
    check in the Fedora specific patch to fail.
    
    To workaround this problem, we ignore the error when building
    libdivecomputer with pty support enabled.

commit 07c9cf89509350b1c0bff79af78acbba1c179328
Author: Gilbert J. M. Forkel <gilbert@erlangen.ccc.de>
Date:   Sun Dec 6 18:32:52 2015 +0100

    Correctly detect a device without any dives.
    
    If the dive computer has not recorded any dives yet, the profile pointer
    isn't valid and contains the default value 0xFFFFFFFF. There is no need
    to return an error in this case.

commit a4838e7cfcd22e75f2a8c483c529512ba7e7ce2d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 3 21:24:47 2015 +0100

    Fix the layout for the Oceanic Atom 1.0.
    
    The profile ringbuffer starts already at address 0x0440 instead of
    0x0A40. The logbook ringbuffer is therefore a bit smaller too.

commit a155fb717b1edc6068af974771603561d0258d5a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 27 19:34:06 2015 +0100

    Add extra debug information to the error messages.
    
    With the extra debug information it's easier to investigate the
    underlying problem, without needing a debugger.

commit 9ee3a103905e066978ba54a2e18d910288769300
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 17 20:48:39 2015 +0100

    Add a workaround for a missing initial gas mix.
    
    In some rare cases, the initial gas mix contains the value 0xFF. This
    value is obviously outside the expected range (1-5), and therefore
    causes the parsing to fail. It's not really clear how this can happen.
    
    As a workaround for the fatal error, we now ignore the invalid value and
    simply proceed without a gas mix.

commit 842c4ca466ec56aaff70e7a774a45dde1c95e2d4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 9 20:42:13 2015 +0100

    Fix the salt water conversion.
    
    The dive computer records the raw absolute pressure. To convert this
    pressure value into a depth, we need to divide by the salinity factor,
    not multiply!

commit 4552558e87f01ae944ee9c36111c92f6ee8256c9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 8 21:38:56 2015 +0100

    Use an output parameter for the number of bytes.
    
    With the number of bytes returned separately from the error code, we can
    immediately return the correct error code.

commit fb5f7ad971ea9b7cc92cc43c03973c318b716f6d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 4 19:42:17 2015 +0100

    Use the GCC printf format attribute.
    
    This enables the compiler to check the arguments against a printf style
    format string in all calls to the logging functions.

commit 0a20eae342ec9890a7a7f017847d9487e2f0dd66
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 4 19:36:03 2015 +0100

    Prefer the C99 identifier for the function name.
    
    The GCC 5 compiler with -Wpedantic enabled generates warnings for the
    non-standard predefined identifier __FUNCTION___. These warnings can be
    avoided by using the C99 identifier __func__ instead.

commit 84d67c554446ca9af0096da3b3d9f432fbfd448c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 28 19:21:45 2015 +0100

    Add support for the new OSTC logbook format.
    
    With the new logbook format version 0x24, the OSTC no longer stores the
    date/time at the end of the dive, but at the start of the dive.

commit ae70d1efba1da8ac1fd75ec688ac98432978b2c6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 28 19:10:12 2015 +0100

    Fix the dive mode for the Galileo Trimix.
    
    Parsing the gas mixes has been implemented a while ago, so this check is
    no longer neccessary.

commit aa2499ef0f74c3973e71c371191a3e0dcd91fb89
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 26 19:16:19 2015 +0100

    Implement gas switches for the Hollis TX1.

commit 99300d4e37bc035b52cebebfc40d6743e4dfe787
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 26 19:08:02 2015 +0100

    Implement ndl/deco support for the Hollis TX1.

commit 3b0e36ccbfb83a10ea12b39935501037c0391b5e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 21 20:49:51 2015 +0200

    Implement ndl/deco support for the Tusa Zen.

commit 7341403f73e967f97227f8ec7cff877c4fc73b0f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 21 20:39:34 2015 +0200

    Fix the temperature for the Tusa Zen.

commit 95aa477129988fcec3d39cb2c7418b02cb044ba1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 20 18:12:58 2015 +0200

    Cache the parser data internally.

commit 6f89e445e31f8a090c0d323b30c5309145687c19
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 20 20:30:37 2015 +0100

    Convert the internal tank id to an index.
    
    The internal Uwatec tank id should be converted to the libdivecomputer
    tank index. If there is no corresponding tank, the tank pressure samples
    are dropped for the following reasons:
    
    Some models appear to record an absolute tank pressure sample, even if
    there is no pressure sensor attached to the corresponding tank. In this
    case only the tank index changes. The sample value simply retains the
    last pressure of the previous tank. Since we don't have any real
    pressure data, dropping those samples is fine.

commit a21f60e0bcdd7dccd198d2b16c7e7fe17774873e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 13 20:35:35 2015 +0200

    Handle a libusb timeout as a non fatal error.
    
    Dives are downloaded using bulk transfers with an 8K buffer. Normally
    the 2 second timeout is more than sufficient, and the timeout should
    never expire, unless there is some serious communcation problem. But
    nevertheless, users are reporting timeouts for dives having a length
    that is an exact multiple of the USB packet size (64 bytes). In that
    case, libusb reports a timeout with an non-zero amount of bytes
    received. Despite the timeout, the received data contains a complete
    dive.
    
    I suspect libusb is somehow unable to determine whether the transfer is
    complete and therefore waits until the timeout expires. For transfers
    that are not a multiple of the USB packet size, the end of the transfer
    is indicated by the last incomplete packet. This is not the case if the
    length is an exact multiple of the USB packet size. This problem is
    usually solved by sending a zero-length packet. Maybe the USB stack of
    the Cobalt is not sending such a zero-length packet?
    
    Atomics will address the problem with a Coblat 2 firmware upgrade, that
    will simply append two zero bytes if the length is a multiple of 64
    bytes. As a workaround for older firmware versions, we ignore the
    timeout and process all received data. This shouldn't have any
    disadvantages. An incomplete dive, for example due to a real timeout,
    will now be detected by means of the minimum length and/or the checksum.

commit 92a1919cf57bb1dc76ad134a13a2698ee216ae03
Author: Robert C. Helling <helling@atdotde.de>
Date:   Fri Oct 16 14:24:42 2015 +0200

    Mention Shearwater Nerd alongside with Petrel 2
    
    Signed-off-by: Robert C. Helling <helling@atdotde.de>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 2106cb2dabe58741e32572055276259b8ae9eb95
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Oct 13 19:21:56 2015 -0700

    Add tank size reporting for Suunto EON Steel
    
    Sadly the data we get from the EON Steel is a bit of a mess.
    It doesn't really tell us if the data is metric or imperial (it always sends
    both wet volume and working pressure). And in imperial mode the Suunto
    engineers seem a bit confused. The pressure given (entered on the dive computer
    in psi) is sent to us not in bar, not in atm... it's "something". As far as I
    can tell it's a constant factor of 1.00069182389937 different from bar.
    And the wet sizes are a bit to small to get the cuft size the user entered.
    But instead of trying to guess and fix the mess, we just pass it through...
    
    So this is somewhat useful, but not really what most users will want.
    
    Linus started this commit with a few lines that parsed the right values out of
    the data stream from the Suunto EON Steel. I then added the implementation of
    the infrastructure to convert the raw data and report it back to the caller.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 854f58fa32011cd32adba64d8f132cd0ae7a3044
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Oct 14 20:10:29 2015 +0200

    Cleanup and correct CCR detection
    
    == has precedence over & and would have needed some parenthesis.
    
    Instead of that, this moves that code into the block below which
    already contains a correct CCR check.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 058538e62820a3405d53a60541a645bcd2b901a8
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Oct 17 17:41:36 2015 -0700

    Use hidapi for Suunto EON Steel on Mac
    
    libusb on Mac doesn't support HID devices.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 00e0cfa0ab2ac75178eca45b30f9fe202348e4d5
Author: Robert C. Helling <helling@atdotde.de>
Date:   Fri Oct 16 14:24:42 2015 +0200

    Mention Shearwater Nerd alongside with Petrel 2
    
    Signed-off-by: Robert C. Helling <helling@atdotde.de>

commit 138fd856bdd0f90b3755b715264fcb4b030a52e5
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Oct 14 08:34:37 2015 +0200

    Add deco model info strings to shearwater parser
    
    This adds two strings describing the deco model information of the dive.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0efa420b716fb35f15362935579cc50fc13c37ac
Author: Janice <janice@moremobilesoftware.com>
Date:   Wed Oct 14 09:11:47 2015 +0200

    Convert ndl/deco time to seconds.

commit 95bdea93cd532d184c20c7320f8dde31dac5cfb7
Author: Giorgio Marzano <marzano.giorgio@gmail.com>
Date:   Mon Oct 5 11:05:09 2015 +0200

    Use the correct memory layout and packet size.

commit cb06adef35a26fcaab464a82b395fc81fe08f98d
Author: Giorgio Marzano <marzano.giorgio@gmail.com>
Date:   Wed Sep 9 09:56:56 2015 +0200

    Add support for the Mares Smart Apnea.
    
    The Mares Smart Apnea uses a different data format than the regular
    Smart, because it records not only a summary of each freedive in the
    session, but also a full depth profile.
    
    Because both the regular Smart and the Smart Apnea have the same model
    number (0x10), another way to distinguish the two variants is needed.
    Therefore, the Smart Apnea gets a modified model number, with one of the
    higher bit set. The actual type is detected from the contents of the
    version packet.
    
    The new Smart Apnea is also capable of recording multiple samples per
    second (e.g. 2, 4 or 8). But since our smallest unit of time is one
    second, we can't represent this, and the extra samples will get dropped
    for now.

commit 3fa606a8a292c26dcb76250a87c05e7186ad6528
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 15 21:43:50 2015 +0200

    Fix the gas switches for Galileo Trimix.
    
    The Galileo Trimix supports up to 10 tanks and gas mixes. However, the
    existing alarm based gas switch events have only 2 bits available, and
    can support at most 4 gas mixes. Therefore, the trimix variant stores
    another 4 bit value in the second alarm byte.
    
    For the first three gas mixes (and possibly also the fourth), both alarm
    bytes appear to be always set to the same value. For the higher mixes,
    the value in the first alarm byte is always zero. This doesn't cause any
    problems, because in the data stream the second alarm byte is stored
    after the first one, and our final value is always the last one.
    
    The non-trimix variant also has the second alarm byte, but the gas mix
    bits appear to be always zero. In order to avoid taking this zero as the
    final value, a separate table is used for the trimix variant.

commit 52453f080db584445847c9e5a449346b730caf8a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 10 11:48:20 2015 +0200

    Add support for the tank field.
    
    The air integrated uwatec aladin models do record the total consumption,
    and not the begin/end pressure. Returning the total consumption as the
    begin pressure, combined with a zero end pressure is strictly speaking
    not correct, but it still provides useful information.

commit ddbcdeecbb803ba7ed33cf58dc03bae25207f706
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 4 08:32:52 2015 +0200

    Ignore disconnected O2 sensors.
    
    Even if there are no O2 sensors connected (for example in auto or fixed
    setpoint mode), the device records a ppO2 sample with all three values
    set to zero. Such samples are now ignored, as if there was no ppO2
    sample present.
    
    Reported-by: Anton Lundin <glance@acc.umu.se>

commit c72bdfe4e4175cb7ad2eb3dc4caa0e9fd9c12962
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 7 22:51:44 2015 +0200

    Add support for logging I/O operations.
    
    The Atomics Cobalt backend uses libusb directly, without going through
    an internal I/O layer that support logging. Therefore the logging needs
    to be done in the backend itself.

commit 8932b2a936a237284e0bffcea562c406551ab433
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Mon Sep 7 00:54:31 2015 +0300

    Fix dc_serial_native_open return check for Shearwater family
    
    The dc_serial_native_open method doesn't return -1 on failures.
    The failure errors can be DC_STATUS_INVALIDARGS, DC_STATUS_NOMEMORY,
    DC_STATUS_IO.
    
    Therefore we should check if the returned value is equal to
    DC_STATUS_SUCCESS and pass it further.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 9c7d1102d4c9da5d4db899e5425d149e171e22fe
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Sep 4 10:43:37 2015 -0700

    Fix compile errors on Mac
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 55afe711f75e6d7c51e7eb9d656759f811ddff3f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 27 09:14:17 2015 +0200

    Fix the layout for the Oceanic Pro Plus 3.
    
    The logbook ringbuffer starts at address 0x03E0 instead of 0x240. Since
    none of the other models uses the same address, a completely new layout
    structure is necessary.

commit 3ff890b3e23b78038dc05d6933488097268dc7eb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 26 07:51:53 2015 +0200

    Improve the detection of unused tanks.
    
    The begin/end pressure for unused tanks is normally zero. But I noticed
    that in some cases both pressure values are stored as 0xFFFF. Since that
    corresponds to a pressure of 511.99 bar, this is most likely some
    special magic value, and not a valid pressure.
    
    Tanks where either the begin or end pressure is 0xFFFF are now ignored
    too.

commit ad4bcffa2326b8b72f35107fe8723a1dcdd564f8
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Thu Aug 13 01:40:32 2015 +0300

    Use custom set_timeout callback for Shearwater family
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f103553df174d46721bd2dbcdff26c92558b6c46
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Thu Aug 13 01:39:14 2015 +0300

    Use the custom set_timeout callback for HW_OSTC 3 family
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a6274a3a55e034eb8f1332663ad752a4ab1b889f
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Thu Aug 13 01:38:03 2015 +0300

    Add set_timeout callback for serial custom implementation
    
    The new callback will be usefull when we will implement the support
    for Windows. The implementation of native serial set_timeout method
    uses a HANDLER on Windows and we will use the WinSock2 API which has
    a socket descriptor.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit adfff2d4a79caf1f613a71a5d7b46cfec60e8a6a
Author: Gaetan Bisson <bisson@archlinux.org>
Date:   Wed Jul 8 07:14:50 2015 -1000

    Add new functions to list of exported symbols
    
    This is required in order to build those new public functions into the
    shared library.
    
    Signed-off-by: Gaetan Bisson <bisson@archlinux.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f0e695b0891ccf9ebf039ed5fa5482ebcea1170a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 3 17:09:45 2015 -0800

    EON Steel: expose the gas switch cylinder in the "flags" field
    
    This seems to be the simplest extension to the SAMPLE_EVENT_GASCHANGE2
    format: the "value" remains the oddly encoded gas mix, but the "flags"
    value (if non-zero) now contains the actual cylinder number we switch
    to.
    
    This will need a trivial patch to subsurface to take advantage of the
    new data too.  But then we can actually distinguish between cylinders
    that have the same gas mix.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit fe2448e34fb4d58f167ede6ef54da22c3c58d13a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 3 17:07:38 2015 -0800

    Add EON Steel personal adjustment parsing
    
    Suunto calls it "Conservatism" in the dump, but "Personal adjustment" in
    at least some of the documentation. That's what we expose it as.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 7fd201a4004ecad8a53e7743b36ad1870fb4814c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 3 14:43:46 2015 -0800

    Add EON Steel dive mode and transmitter ID information
    
    This adds the divemode name (Nitrox, Trimix, Gauge, or whatever custon
    name) and the transmitter ID as extra string information when
    downloading from the EON Steel.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit c39dda89bcd3074e59013549e75656ec501a546b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 27 17:19:48 2014 -0700

    Suunto EON Steel: populate various string data
    
    The EON Steel saves the dive computer firmware versions etc per dive,
    which is really nice for upgrades: old dives done with older firmware
    still show the firmware at the time of the dive.  That, in turn, is nice
    because we can use it for a reliable dive ID - dive time with serial
    number etc.
    
    This uses the new DC_FIELD_STRING model to feed the hw/sw information to
    the application, since we need the parser to access it.  It also returns
    battery state and deco model information.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0c8886ce70101701d321e38f0a3dac9a56fbcba3
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Mon Jun 29 00:08:20 2015 +0300

    Implement custom open device method for SHEARWATER family
    
    Create a custom open method for SHEARWATER family.
    This method can be used to pass a reference to a dc_serial_t
    structure. In this way the applications can implement their
    own implementation for a serial communication and set their
    callbacks for the basic serial functions.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 53ccc4f43ba119cd990aca328abcc91c103785cb
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Sun Jun 28 23:46:56 2015 +0300

    Use the dc_serial_t structure in SHEARWATER family
    
    Use the new structure in the SHEARWATER family implementation.
    This patch opens a native serial device and use it
    for the serial communication.
    
    Also the patch uses the set of callback functions saved in the
    dc_serial_t structure.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8c3e44aa0c64f32931bad4386b38d6357ee53feb
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Sat Jun 27 15:22:04 2015 +0300

    Implement custom device open method
    
    This method can be used by external applications to open a
    device and to pass their custom implementation for the
    serial communication.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5dbaa7a0538d8194704591be6372343928b35346
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Sat Jun 27 15:21:19 2015 +0300

    Implement custom open method for HW OSTC 3 family
    
    Create a custom open method for HW OSTC3 family.
    This method can be used to pass a reference to a dc_serial_t
    structure. In this way the applications can implement their
    own implementation for a serial communication and set their
    callbacks for the basic serial functions.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 69bd993233ba10b464962945070f7173b6d03b10
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Sat Jun 27 15:18:01 2015 +0300

    Use the dc_serial_t structure in HW OSTC family 3
    
    Open a native serial device and use it in the HW OSTC3
    implementation.
    
    This patch replaces the old serial structure with the
    new one, which can be used for custom serial implementations.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a50a1e0688597f7b91e43ee75064beb690293db2
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Sat Jun 27 15:14:16 2015 +0300

    Create a generic way to represent any type of serial communication
    
    Add a structure which holds references to basic operations
    on a serial communication. This can be used to pass a set
    of function pointer callbacks in order to create a custom
    implementation for serial communication.
    
    Add a generic structure to represent the needed information
    for a serial communication.
    
    Implement the initialization method where the user can
    pass a set of function pointer callbacks and set some
    custom data for the serial device.
    
    Create open method for the native serial implementation.
    
    Signed-off-by: Claudiu Olteanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit b9e3f40d59022071a603f7bfe6bfc19e092bf17d
Author: Claudiu Olteanu <olteanu.claudiu@ymail.com>
Date:   Sat Jun 27 15:11:15 2015 +0300

    Extend the transport enum descriptor for serial communication
    
    Add a new transport type which can be used to identify
    Bluetooth serial communication.
    
    Signed-off-by Claudiu Oleanu <olteanu.claudiu@ymail.com>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f184b45e0953e502857cdc0da3b1b039f81e4892
Author: Anton Lundin <glance@acc.umu.se>
Date:   Tue Feb 10 07:39:56 2015 +0100

    Correct firmware version string from OSTC's
    
    The format string was incorrect, producing firmware numbers as 3.2
    instead of 3.02 as is the current OSTC firmware version.
    
    This was reported via hw's forum:
    http://forum.heinrichsweikamp.com/read.php?2,14550,14552
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0ff1dd15f59a560296bbb289c00cb8c94b5061d3
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Feb 6 09:56:21 2015 -0800

    Predator: don't report PPO2 unless in CC mode
    
    Sending this in OC mode is redundant and might confuse applications that
    assume they only get PPO2 data in CC mode.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit fb15ef18f674ccb18eb852f6018d091c62e07653
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Mon Feb 2 07:31:33 2015 -0800

    Don't report errors if we can't set serial mode
    
    That's just silly and breaks using the simulator.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 3a17156be6908331fa4b44b9aa64448b11dcfc14
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Jan 21 08:42:00 2015 +0100

    Add deco model info strings to hw parser
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 1f24f675654df2d207bb92b3fafda0d480e9e09e
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Jul 7 10:48:44 2015 -0700

    Make it easier to detect our branch of libdivecomputer
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5ecc65799c7fc540396279c2769e4f2ff77f9936
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Dec 12 11:47:52 2014 -0800

    Mark a library built from our branch as such
    
    This way it will be obvious when people report their libdivecomputer
    version that they are using our branch
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit ddfdb6c306cfaf8f5745d7e070212664650a1b03
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Nov 24 11:08:59 2014 -0800

    Fix suunto serial numbers
    
    libdivecomputer has already done the "byte to decimal" conversion.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit b85f2333bee4f50f3af0c0fc461fb78f3a4b14ab
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Nov 21 14:29:53 2014 -0800

    Support serial number for Suuntu Vyper2 family of devices
    
    We have the correct firmware in the devinfo, but that's the firmware the
    dive computer is on NOW, not necessarily the firmware it was using when
    recording the dive.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 06426af6564c09d7c2e8833bcd76883e87d4e436
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Nov 21 13:56:43 2014 -0800

    Support firmware and serial number for Shearwater Petrel
    
    This should work with the Predator as well.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f459155b54ab9a667f4d687cad3f93fb8ae3c93c
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Nov 21 13:24:34 2014 -0800

    Support serial number as DC_FIELD_STRING on atom2 backend
    
    This has been verified with a few of the models, it needs much more
    testing to make sure this is generally correct.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit ebe670474708b59b292e435e5433684f352ec64e
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Nov 21 13:00:12 2014 -0800

    Add support to return serial number to OSTC devices
    
    This data isn't per dive, but it makes sense to return it here as a
    string (we already return it as unsigned int in the devinfo event after
    opening the device).
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5f762499230aa17276551dcecb25339666eab060
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Nov 21 12:55:11 2014 -0800

    Pass the serial number from the devinfo to the OSTC parsers
    
    This way we can analyze the data in the parser and return it to the
    application.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0ddec2b50fca8990547d36d09cb4ab0ea04849cc
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Nov 20 18:17:47 2014 -0800

    Support FW Version on OSTC devices
    
    And add battery voltage and desat for the Frog.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8f4038d4cd81ce8158ccae5fbf0e1bc30956c935
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Nov 8 18:08:58 2014 -0800

    Add DC_FIELD_STRING support to OSTC parser
    
    Just support a few of the most useful values. There are several more we
    could and should add.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit d90417da38d6a6fd87ddf1930f44b8c4ee753d23
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Nov 8 18:08:25 2014 -0800

    Add DC_FIELD_STRING support to Shearwater Petrel parser
    
    Just support a few of the most useful values. There are several more we
    could and should add.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f902f5882c4c8c2b201151c31f030a67bd16fb8a
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Nov 8 17:10:14 2014 -0800

    Add DC_FIELD_STRING support to Atomics Aquatics Cobalt parser
    
    Just support a few of the most useful values. There are several more we
    could and should add.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit eac8e98ee7bfcd06ac5c2b874ec4567734e166b9
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Oct 22 11:23:09 2014 -0700

    parser: add DC_FIELD_STRING field type for parse-time information
    
    This can be used to return almost arbitrary information to the dive log
    application at dive parse time, by returning a number of strings (with a
    descriptor) for dive state.
    
    NOTE! The strings are supposed to be human-readable, so that the dive
    log application can just show them unedited - and without understanding
    them - to the user, together with the description.  So if your dive
    computer supports returning a battery voltage, for example, you can
    return it as a
    
      { "Voltage", "4.449V" }
    
    descriptor/value string pair, and the application could then put these
    string pairs together and show (somewhere) an informational line like
    "Voltage: 4.449V" along with the other information you return.
    
    Some dive log applications migth recognize particular descriptor strings
    and use them specially to fill in other information (ie serial numbers,
    weight and suit information etc), but in general the interface is very
    much meant to be informational free-form for a human user.
    
    So do *not* use this interface to encode things that are not human-
    readable.  Serial numbers or version information that is meaningful to
    humans are fine. But random encoded data structures are not.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 5381714d0862f9818f098f9cd78d3759bbd8b438
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 20 09:08:56 2015 +0200

    Fix a bug in the tank id.
    
    Due to a bitshift with the wrong number of bits, the tank id was always
    zero for the Uwatec trimix firmware.

commit 922d219bdc01eba71941dcc3d3f325b31cdd3b33
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 4 22:45:46 2015 +0200

    Add support for the tank field.

commit 2fafcc7ae241005c9a59b1f27c682ff2ec005c4c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 5 15:02:19 2015 +0200

    Disable all gas mixes in gauge/freedive mode.

commit 04ffc894c935da74ca5e85ef8b8f856f33e08fea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 8 08:40:34 2015 +0200

    Add support for ppO2 samples.
    
    When the PPO2 sample was introduced, we didn't take into account the
    fact that rebreathers usually support multiple O2 sensors. The HW OSTC
    supports for example three sensors. In order to support multiple values,
    without having to introduce a new data structure with an additional
    sensor id field, we simply relax the assumption of allowing only one
    DC_SAMPLE_PPO2 value per sample. Applications that are not prepared for
    multiple values, will automatically use only one of them (probably the
    last one).

commit a8f06c5c3cf6e8edae03feaefc3725a922f9ae52
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 2 20:45:44 2015 +0200

    Add support for the new compact logbook headers.
    
    With firmware version 1.84 (beta), a more compact logbook header is
    introduced. Due to their smaller size (16 vs 256 bytes), the total
    amount of data that needs to be transferred is much smaller (4K vs 64K).
    Therefore, downloading these compact headers is roughly 16 times faster
    then downloading the full headers.
    
    For backwards compatibility with older firmware versions, there is an
    automatic fallback to the full logbook headers.

commit 0d04ad58a3607978395c247038e613b56d72b27c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 5 16:11:59 2015 +0100

    Add support for setpoint samples.
    
    The setpoint samples are only enabled for closed circuit dives.

commit 1a8e757daf8d014bd3e5ada3fee614753a7a58a3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 12 23:43:37 2015 +0200

    Add support for the dive mode.
    
    The Shearwaters store the current dive mode for each sample, and not one
    single value for each dive. Therfore we need to process all samples. If
    there is at least one sample marked as closed circuit, we classify the
    dive as a closed circuit dive. Otherwise we default to open circuit.

commit af3b38d6f4b3c2c96485bea7c19b01550b446f17
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 12 23:29:28 2015 +0200

    Cache the sample and header/footer size.

commit 4795e1b6ce8a957bde70f5ca41d7e347f2c24743
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 12 22:13:22 2015 +0200

    Prevent a zero length memory allocation.
    
    In theory this shouldn't be possible, but it doesn't hurt to check the
    length explicitely.

commit 76bd9783d4e5ae6030bd7685efc9ac36f394f8e7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 12 22:04:44 2015 +0200

    Add an exception for devices without a logbook ringbuffer.
    
    For devices without a logbook ringbuffer, such as the Oceanic Veo 1.0
    and the Aeris XR-1 NX, the ringbuffer begin and end are identical. In
    this case, the changes in the previous commit will always result in a
    fatal error due to an invalid ringbuffer pointer. To avoid the error, we
    exit before trying to use the pointers.

commit cfc1a68b0d01b4e61a2c828a2a8149ee3c5cbfb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 12 21:19:28 2015 +0200

    Handle invalid logbook pointers as a fatal error.
    
    Until now, an invalid logbook pointer was silently ignored and handled
    as an empty ringbuffer. But this hides real errors, which is worse than
    failing if no dives are present. Trying to download dives from an empty
    device should be a rather uncommon scenario anyway.

commit f8d25fc49f2ed52e780865a929f4cf294aa9f49d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 9 23:43:34 2015 +0200

    Remove the event bytes from the vendor sample.
    
    Now that we are able to parse the event bytes properly, there is no need
    to pass the raw event bytes to the application.
    
    In the current implementation, the vendor event was broken for devices
    with multiple event bytes anyway. Because we deliver all event bytes at
    once, the application doesn't know which bytes contain a valid value
    (originating from the profile data) or just a dummy zero value.

commit efe7e52bbe5e1b68940aa130e9af9079cc3d4075
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 9 20:13:25 2015 +0200

    Add support for parsing the event bytes.
    
    Right now only gas switch and bookmark events are supported, because
    none of the other uwatec events can easily be mapped onto the existing
    libdivecomputer events. But the basic infrastructure for supporting more
    events is in place now.

commit 0158739bcff3c4c3f8944e6e06932d836821cf28
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 9 23:45:31 2015 +0200

    Use the static libgcc option only for Windows.
    
    For obvious reasons, the -static-libgcc linker option is not supported
    by non gcc compilers, like clang. Since we only need this option when
    building Windows DLL's, we can easily avoid the problem with a
    conditional on the mingw compiler.

commit b7c358260422db9c8e44658e0f7e526916777eb7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 6 15:00:22 2015 +0200

    Fix the temperature for the Aeris Manta.
    
    The Aeris Manta does not store the temperature as a delta value, but as
    an absolute value (at offset 6).

commit 37c00ce4f7a358e1af4c18f1d8734f126f15c588
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 5 20:52:30 2015 +0200

    Add support for the Shearwater Petrel 2.
    
    The Shearwater Petrel 2 uses exactly the same communication protocol as
    the original Petrel. Therefore the new model has always been supported
    out, and we only need to add the new model to the list of supported
    devices.

commit 701b93d86568c2fb1e9a389cb8a906241f5534bb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jun 7 10:28:04 2015 +0200

    Add support for the Galileo Trimix.
    
    For the trimix version, the gasmix and tank information is no longer
    stored in the header. It's now stored in a special sample at the end of
    the dive.

commit 7f3cea691dc64ec3d95fce8440114598d3afcce6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 4 22:24:29 2015 +0200

    Use a fixed id for the uwatec deco mix.
    
    The id of the uwatec deco mix is always 2, even for devices which
    support maximum two gas mixes. Strictly speaking, this change is more
    correct than commit 4fd825cdac341a2d4a1366c6deb7d4a71bbdf94d, allthough
    in practice they are equivalent.

commit 82c1a55a13780aadf7d08e1f5a0d5d6994eaef35
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 4 21:07:13 2015 +0200

    Fix the gas switches for galileo devices.
    
    The bitmask for the gas mix bits was wrong. With the new mask we also no
    longer have to disable the alarm based gas switches for the Meridian and
    Chromis.

commit b17f432635f883dcd35ae04c46c2d6eaa008c31f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 4 14:31:45 2015 +0200

    Fix the logic to skip disabled gas mixes.
    
    Originally I assumed it's not possible to enable a gas mix if the
    previous gas mix has already been disabled. However, this assumption
    turns out to be wrong.  For devices with support for 3 gas mixes, it's
    possible to enable only the first and the third gas mix, and leave the
    second gas mix disabled.
    
    This is fixed by checking all gas mixes, instead of aborting once the
    first disabled gas mix has been found. Due to this change the uwatec gas
    mix id's are no longer sequential and need to remapped to the
    corresponding internal array index.

commit 90a19dd154b38521a99259a50b7ce7199533941a
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jun 14 18:56:16 2015 -1000

    EON Steel: don't report airtime remaining as a libdivecomputer event
    
    It looks like the SAMPLE_EVENT_AIRTIME is actually meant for just
    airtime warnings (as in the dive computer warning about low air).
    
    If we ever care, I think we'd need to add a new interface for this.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a16f8ec47094a99cc45ea2f6a698c8341a4e69b1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sun Jun 14 14:20:05 2015 -1000

    EON Steel: fix up missing gastime/ventilation parsing
    
    Now that I actually have dives with the new format and with air
    integration, I could test it all out and noticed some missing pieces.
    
    This adds parsing for gastime and ventilation events (although we don't
    *do* anything with the ventilation data, I have no idea what the number
    means).
    
    Also, this fixes an annoying warning message problem, which caused these
    missing events to cause a SIGSEGV rather than just a bening warning.
    Stupid bug, and only went unnoticed because libdivecomputer isn't built
    with format string warnings.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit edbdea04727ee6f1d841dd94e21ccda0c00437df
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 8 15:21:02 2015 -0700

    EON Steel: convert to dynamic sample parsing
    
    This gets rid of the fixed sample indexes and the hardcoded grouping
    code, and replaces them with proper parsing of the type descriptions.
    
    This should mean that the new Suunto firmware v1.1.15 is now fully
    supported by libdivecomputer.
    
    There are still parts of the event description that we should really
    parse better, notably the 'enum' descriptions of what the different
    enumerated types mean, because it looks like those will change too.  But
    that is not nearly as important as getting the basic infrastructure done
    for the core sample types.
    
    Almost accidentally, this also ends up now parsing the compass heading
    event.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit af3e099c55e25920c98ad467169ca92bc766d682
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Jun 8 09:30:57 2015 -0700

    EON Steel: start moving away from "fixed" fields
    
    I was initially fooled into thinking that the field type numbers have
    some meaning: the types didn't change if the upper byte of the type
    number was zero.  So I assumed that meant "fixed".
    
    But the most recent firmware update made clear that no, they aren't
    fixed, and the upper byte of the type must be some other thing.
    
    This moves some more of the parsing over to comparing the strings,
    rather than looking at the type index.  It still leaves the sample data
    alone, and I really want to do something more efficient than comparing
    the type descriptor string for that, but at least the dive header fields
    are now just comparing strings.
    
    The actual marshalling that Suunto uses also describes the encoding, and
    it's all ignoring that for now.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit a701cc9309ad10cdd3550c86255463838f88577c
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jun 6 17:14:25 2015 -0700

    EON Steel: empty descriptor lines are ok
    
    Suunto's new v1.1.15 firmware ends up terminating some final descriptor
    lines with a newline, rather than just using newlines as separators.  So
    the last newline may not be followed by further data, but simple be the
    end of the string.  Accept that case.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit bdae4286392bd87a789f257834ec454f881790cc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 27 17:19:48 2014 -0700

    Suunto EON Steel: populate dive surface pressure
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 9eef4d6cec97af8528d1b1cf8cbe1ede99f4f9ba
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 21 14:20:16 2015 -0700

    suunto eon steel: clean up size limits and error reporting
    
    This is some small cleanup after the whole reply size rewrite.  It
    further improves on the error log reporting a bit, and it undoes the
    "read exact size" thing introduced in "suunto eon steel: fix file
    reading special case", because it is no longer necessary.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit e73dcdacaeb5fc4db3bf8b837ff9476e2dcf18cc
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Thu May 21 11:02:11 2015 -0700

    suunto eon steel: be more explicit about transfer sizes
    
    When reading data from the EON Steel, we'd generally continue reading
    until we saw that a response was done by seeing a packet that wasn't
    full.
    
    That broke for the case of the data boundary matching the packet
    boundary, fixed by the commit "suunto eon steel: fix file reading
    special case".
    
    However, that commit only fixed it for the case of reading a file, where
    the result has a size that is known up-front.  And most other situations
    really don't matter, because the result size is fixed and fits in a
    single packet, so it all works.
    
    However, there are still a few cases that could trigger the problem,
    notably reading the directory contents.
    
    So change the send_receive() logic to actually read the expected size
    from the receive header in the first packet of the reply.  This means
    that we need to re-organize the packet reception code a bit, but the end
    result is that we are much more careful about data sizes,
    
    This also changes the packet logging to be much more readable, by
    logging just the actual data, and not the (uninteresting) per-packet
    header, or the stale data at the end of the packet.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 8e3cb0542f478ee94f49ac6abe25c50a0c63efac
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed May 20 14:16:56 2015 -0700

    suunto eon steel: fix file reading special case
    
    The "receive_data()" function would continue to try to read packets as
    long as the previous packet was full-sized, but with just the right size
    of file and the right chunking, the file might end at a packet boundary.
    Then receive_data() would try to read more data, which fails - there are
    no more packets, despite the last packet being full.
    
    This never triggered for me, but Robert Helling forwarded a data dump of
    a filure to read a dive due to this.
    
    Since I don't trigger this case, I can't really test it, but I did check
    that the new "stop early" logic works for me (ie never triggers ;).
    
    Reported-by: Robert C. Helling <helling@atdotde.de>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 58f7235bb9062f50cd28354b43400d0f45b174e7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 15 20:55:02 2015 +0200

    Update the symbols file.

commit 98bd0d2d21d3fe76905ebb7aed9f28c06611c426
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 15 20:27:04 2015 +0200

    Update the msvc project file.

commit bd2b132d7f3c92aa434c4d799e8cc5358bc1baef
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 1 23:21:58 2015 +0200

    Avoid a run-time dependency on the libgcc dlls.
    
    When compiling a 32bit dll with the mingw-w64 compiler, some 64bit
    integer arithmetic operations are implemented using functions from
    libgcc (e.g. __divdi3 and __moddi3 from libgcc_s_sjlj-1.dll). This
    unexpected dependency is inconvenient for applications.
    
    The run-time dependency can be avoid by linking statically.

commit ab92043dc329c60ceba3339a1db021a52aa51773
Author: Anton Lundin <glance@acc.umu.se>
Date:   Thu Jun 18 20:11:32 2015 +0200

    Remove removed function from public header
    
    reefnet_sensusultra_device_set_maxretries was killed off back in v0.3,
    but was still lying around in the public header.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit a72c03188d5d710574717c2262b241a3c50645cb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 13 22:02:59 2015 +0200

    Use the correct layout for the Oceanic Geo.
    
    At least one Oceanic Geo is unable to download the last memory page.
    However, another device with an older firmware version (version 1D
    instead of 2B), does not have this problem. So in theory the correct
    layout depends on the firmware version.
    
    But since the profile ringbuffer also appears to end at the address
    0xFE00 instead of 0x10000, we'll never need to download that last page
    in practice. Thus we can be lazy and simply use a single layout for all
    firmware versions. The only drawback is that the last page might be
    missing when downloading a full memory dump.

commit e7d142e5ebeda07411b23c86c0b42e92b7189226
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 13 12:43:53 2015 +0200

    Fix the ringbuffer start address for the Aeris F10.

commit c647a27c27530980e9f9ae49e56ecbbeaea19642
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 13 12:16:25 2015 +0200

    Implement tank pressure samples for the Nemo Air.
    
    The tank pressure is stored every third sample as a delta value.

commit bfd91a733cd21c88e2bcf1990476eee8c950977b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 13 12:06:35 2015 +0200

    Implement the tank field for the Nemo and Puck Air.

commit e6f51ea30232e4b7e91454b3bb306c57c731fed3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 31 21:36:49 2015 +0200

    Emit the devinfo event before using the fingerprint.
    
    Applications are supposed to lookup the fingerprint when the devinfo
    event is emitted. For the Uwatec Smart devices, the fingerprint is the
    raw device timestamp. But because this timestamp was already used to
    initialize the command before emitting the event, an outdated value
    (typically the default value of zero) was used instead of the correct
    one set by the application.

commit f720aa2fc8b9b41c2e25ec879a34420ae839e596
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 17 09:42:55 2015 +0200

    Use the UTC offset of the device.
    
    For devices with timezone support, use the UTC offset stored by the
    device, instead of the current timezone of the host system.

commit 74fcd11d2bc492c066da4bd097d455c281c42b81
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 16 22:57:09 2015 +0200

    Add support for the salinity field.

commit 5ca1ef40c146f50941bb0e9566db751e024572af
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 16 22:47:43 2015 +0200

    Adjust the depth for salt water dives.
    
    The Uwatec dive computers report the depth based on fresh water. Salt
    water dives need a correction to take into account the salinity. There
    is only a fresh/salt water flag present in the data, but Uwatec appears
    to assume a salinity factor of 1.025.

commit f59bad5260021e01d26158d5d682c22b99a03b85
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 21 09:56:23 2015 +0100

    Add support for the new tank fields.

commit 50c8b46c961d2fcb81754e20e2cabcb96c6c5508
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 11 21:30:03 2015 +0200

    Fix the size of the dive header.
    
    The size of the dive header is one byte smaller: 0x32 instead of 0x33
    bytes. Because we were expecting a larger packet, this bug caused the
    downloading of the dive headers to fail. I'm surprised no one noticed
    this mistake before.

commit 568365397d923aaeac6aa77772ccfa4dcc40c5b5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 8 09:37:39 2015 +0200

    Fix the CNS sample value.
    
    The CNS value in the public api is reported as a fraction, and not a
    percentage.

commit e810232a6d2babeab246f3e9d620c0e072064ceb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 8 09:25:19 2015 +0200

    Add support for CNS samples.

commit d5eaa979d02be9fd39b952e006b0eea17329bc61
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 8 09:21:07 2015 +0200

    Convert the CNS value to a percentage.

commit 106abe2dba7d5050fa97d16afc14cfec607a95a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 3 20:35:48 2015 +0200

    Remove the temperature and pressure samples.
    
    With the new temperature and pressure field, artificially injecting the
    temperature and pressure info from the header into the samples is no
    longer necessary. Applications will typically expect a real temperature
    or pressure profile, and not a few discrete points.
    
    The two surface samples (with zero depth) at the begin and end of the
    dive are kept for now, to support events that occur at the surface.

commit 7278a70afe8e61ad3beaebeb179b1c9966f0e991
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 3 20:13:04 2015 +0200

    Implement the tank and temperature fields.

commit 5a61ffcc2f3e2f520be526f7ff1c368bcfa2a8a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 3 20:09:43 2015 +0200

    Use a variable for gauge mode.
    
    This makes the code a little bit more readable, without needing any
    comments.

commit e1f939c131abe81e8e63281250a0c0a84679223d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 3 20:06:27 2015 +0200

    Move all caching code to a common function.

commit 02e812f88b196620a67834aa1b58c0c4a94abc17
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 5 20:23:47 2015 +0200

    Apply the ghost event fix for the Suunto Solution.
    
    I forgot to include the Suunto Solution part in the previous commit.
    
    In theory the Suunto Solution (and Eon) can't be affected by the ghost
    event bug. All possible events bytes are already exhausted, and
    therefore unknown events are impossible. But applying the fix anyway
    doesn't hurt and keeps the code consistent with the other backends.

commit 23acddbe08a607bf224032433650128eb6b9ca14
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 3 22:41:15 2015 +0200

    Eliminate ghost events caused by unknown events.
    
    The newest Suunto models (e.g. D4i, D6i, D9tx and DX) support a few
    additional events (type 0x15 and higher), which are not supported yet
    because their interpretation isn't known.
    
    Due to a nasty bug, these unkown events result in "ghost" events. When
    such an unknown event is encountered, the sample type field isn't set
    explicitely. Therefore it simply retains the value from the previous
    sample, whatever that might be. If the previous sample happens to be an
    event as well, then the unknown event will show up as a duplicate event.
    But if the previous sample is not an event, then the resulting event
    type is undefined.
    
    This is fixed by always resetting the event type explicitely. Those
    unknown events are also suppressed now and no longer delivered to the
    application.
    
    Allthough I haven't observed this bug with the Suunto Eon and Vyper,
    they could be affected too.

commit f24b93cd826b24b42952077bd921b155027c6116
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Apr 29 14:53:00 2015 +0200

    Parse the profile to retrieve the manual gas mixes.
    
    The DC_FIELD_GASMIX api doesn't support the 6th manual gas very well.
    Manual gas mixes are either not taken into account at all (OSTC3), or
    only the last value is returned (OSTC2).
    
    We now parse the profile data in order to retrieve all the manual gas
    mixes too. Note that manual gas mixes are only included when they are
    actively used during the dive. This is a small change in behaviour for
    the OSTC2.
    
    To simplify the implementation, there is an upper limit of 10 manual gas
    mixes (or 15 gas mixes in total). This is an arbitrary choice, which
    should be more than sufficient in practice. If it turns out to be too
    small, we can always increase the number, or even make it truely
    unlimited.

commit ac48210f4a847f84c615063eaf74ccd63f34dafe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 21 20:11:29 2015 +0200

    Cache the fixed gas mixes too.

commit 391de65d16675da0467e2bd46da203c44d6ffb63
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 21 20:03:22 2015 +0200

    Cache the header data internally.

commit b832f4cf1b907c0c6d63e0a41bd86cfae6e1c90d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 16 21:42:05 2015 +0100

    Cache the header and footer size internally.

commit 8eba3cae3ab69887c66d6d63304434f7682044e7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 8 10:12:26 2014 +0200

    Cache the gas mixes internally.

commit ad1c17b39d3247cc2d62cc1fb2b8acd595c35fdb
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sat Apr 25 18:33:28 2015 +0200

    Dump function for the OSTC3
    
    This adds a dump function for the ostc3 series computers. This function
    dumps the whole external eprom, that contains the dive-headers and the
    dive data.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit d7c89bbc39acc378987570bffbc505bdc46a375c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 18 21:39:12 2015 +0200

    Add support for the temperature field.

commit 47874037ea6b5242db62e8bd8393083d90c74594
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 18 20:17:52 2015 +0200

    Disable gas change events except for the intial mix.
    
    For the IQ-700, the existing code for the active gas mix always results
    in an out-of-range gas mix index. The index of the active gas mix is
    probably stored in another bit. As a temporary workaround, we simply
    assume the active gas mix is always the first gas mix. This should
    already produce correct results for dives with only single gas mix.

commit 311bc856454391a8a02d2d44aa9141e41e800108
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 22:48:48 2015 +0200

    Add support for the Tusa IQ-700.
    
    The Tusa IQ-700 is very similar to the other Seiko based models. The
    most important change is that due the smaller amount of memory (8K vs
    32K), the logbook entries are only 1 byte large instead of two bytes.

commit f0974ed6bcc8922fed6aabeb75e69128e50f00a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 22 22:26:39 2015 +0100

    Replace hardcoded constants with a layout descriptor.

commit 9ae985a4990f51ca0d54571736e6723fa10c5977
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 21 10:29:40 2015 +0100

    Fix the ringbuffer start address.
    
    Currently the profile ringbuffer starts at the base address 0x4000, but
    I believe the real start is one 0x20 byte page earlier, at 0x3FE0. I
    have two reasons for this:
    
    1. To locate the start of a dive, we always have to substract one page
    from the pointers in the logbook ringbuffer. With the new base address,
    they would point directly to the start of the dive, which makes a lot
    more sense.
    
    2. When comparing the divetime as stored in the header with the one
    obtained by counting the number of samples, they always match except for
    dives that span the ringbuffer wrap point. If those extra 0x20 bytes are
    included, the counts do match again.
    
    Unfortunately, this change breaks the assumption that the ringbuffer is
    aligned to packet boundaries. As a workaround, we define a virtual
    ringbuffer that is slightly larger than the actual ringbuffer, but
    properly aligned. Data outside the real ringbuffer is downloaded and
    then immediately dropped.

commit ad6ec1e7f50ea41a0b67ba94e787039ab4ce39ae
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 19 21:57:34 2015 +0100

    Align all read operations to packet boundaries.
    
    Packets have a fixed size of 0x80 bytes, while a single page is only
    0x20 bytes long. Thus each read operation always returns 4 pages at
    once. Now, if the end-of-profile pointer is not nicely aligned on a
    packet boundary, then the download algorithm won't arrive exactly at the
    start address of the ringbuffer, because the ringbuffer is properly
    aligned. The consequence is that we won't even notice we reached the
    ringbuffer boundary and happily continue reading outside the ringbuffer.
    Oops!
    
    This is fixed by aligning the end-of-profile pointer, which guarantees
    that all read operations are now nicely aligned to packet boundaries.

commit c4233c091d6b24ec75c30c9ef38676cdbc9f1dfe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 19 20:23:47 2015 +0100

    Send the command and read the echo byte by byte.
    
    When trying to send a command, the first attempt always fails. We
    receive the echo, but no data packet. A second attempt usually works,
    but we always get back the same data packet. That's cleary wrong.
    
    Now, when comparing the data packets with those of the Tusa application,
    I noticed something very interesting. When we request the first packet
    (page 0x0000), we get:
    
      W: 520000
      R: 520000
      R: 00880124056202000250002890470824...19202720002000200020002000204145
    
    The Tusa application also request this page, but the response is
    completely different:
    
      W: 520000
      R: 520000
      R: 22182224222322092203220522112210...0000000000f021fc0000000000000045
    
    The response we get is identical to the response that the Tusa
    application gets for page 0x0052:
    
      W: 520052
      R: 520052
      R: 00880124056202000250002890470824...19202720002000200020002000204145
    
    The only difference here is the echo of the command. But the echo should
    be ignored, because it's generated by the pc interface, and not send by
    the dive computer. This is easily verified by the fact that we always
    receive an echo, even without a dive computer connected (e.g. only the
    pc interface).
    
    Notice how the command type (first byte) and page number (last byte) are
    identical (0x52) for this request! I suspect that somehow the command
    type ends up being interpreted as the page number. That would explain
    why we're always getting the same response: as far as the device is
    concerned we're always requesting page 0x52. This is probably also
    related to the fact that the device doesn't respond after the first
    request. It's not impossible that if the first command wasn't received
    correctly and we resend the command, the device receives something that
    contains parts of both attempts.
    
    By sending the command and reading the echo byte by byte instead of all
    at once, the above problem disappears.

commit edd777dbd3080490dcd0797843f4f001a9d57a50
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 19 20:17:31 2015 +0100

    Wait after changing the serial line settings.
    
    Without the delay, the communication immediately fails. We receive the
    command echo, but not the actual data packet. I suspect the device is
    still be busy with the initialization and needs a bit more time before
    it's ready to accept a request.

commit c4cbd19d5b439551b44e94443c7728e95f3d4896
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 17 21:25:19 2015 +0100

    Resend the command on failures.

commit 3a6206e72c6a23053c181f7745dabb94b5936b9b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 22:31:29 2015 +0200

    Relax the detection of the last dive.
    
    We received data from a Mares Smart where the existing heuristics to
    detect the last dive are not sufficient. The very last check, where the
    calculated and stored are compared results in a fatal error.

commit 4797ad8d9e2819c2e70007145a1af40259034252
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 29 08:35:22 2015 +0200

    Add support for the Mares Smart.
    
    The Mares Smart supports not only scuba diving, but also freediving.
    Because the freedive data format is fundamentally different from the
    regular dives, being able to detect the type of dive in advance is very
    important. For that reason, Mares moved the 4 bytes containing the dive
    mode and number of samples from the beginning of the header to the end.
    Except for this 4 byte shift, there are no changes for regular dives.
    
    For the freedives, there is no real profile available, only a summary of
    the entire freedive session. In an attempt to workaround this
    limitation, we generate a pseudo profile in exactly the same (but ugly)
    way as is done in the Mares Nemo backend.

commit e838aebc87777a560ffd7696a95640d2c2aff2f0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 24 21:16:07 2015 +0100

    Add some additional DiveSystem iDive models.
    
    These are all the models listed in the official documentation from
    DiveSystem. They all share the same communication protocol and data
    format.

commit a67e21dc2f42f745aeb291a67bec639cf61e443b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 18 06:29:48 2015 +0100

    Add support for two new OSTC3 variants.
    
    The new OSTC3 (model 0x1A) is identical to the existing OSTC3, except
    that the usb interface has been replaced with a bluetooth interface.
    
    The new OSTC2 (model 0x1A) will retain the look and feel of the OSTC 2C
    (e.g. plastic housing, piezo buttons and rechargable battery), but under
    the hood it will use the same firmware as the OSTC3. It will also have a
    bluetooth interface.

commit 42808873e469a80915ad382205dca53c9f7ffd42
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 17 19:57:06 2015 +0100

    Disable alarm based gas switches for the Meridian.
    
    The gas mix index stored in the alarm bytes is occasionally out of range
    (larger than the number of available gas mixes). The index refers to one
    of the disabled gas mixes. Since those are excluded now, this results in
    a fatal error instead of a switch to a nonsense gas mix.
    
    To workaround this problem, the alarm based gas switches are disabled
    until we figure out how to parse them correctly.
    
    The Chromis is almost identical to the Meridian, and will probably need
    the same workaround. Although I don't have any data to confirm this,
    let's just keep the two in sync.

commit c135eb75de747500a9aef06f3b4323f7b94d59df
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 9 10:42:16 2015 +0100

    Implement the dive mode field.
    
    Dives with all gas mixes disabled are flagged as gauge dives in the
    Uwatec application.

commit 76f93d3fe53127157223574db7456f65b4bde418
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 7 23:30:02 2015 +0100

    Ignore disabled gas mixes.
    
    Gas mixes are disabled by setting their oxygen percentage byte to 0x00.
    This is clearly an invalid gas mix, and it makes no sense to return it
    back to the application.
    
    It seems the device doesn't allow you to enable a gas mix if the
    previous gas mix has already been disabled. Therefore we can simply stop
    parsing the gas mixes once the first disabled gas mix has been found.

commit 4fd825cdac341a2d4a1366c6deb7d4a71bbdf94d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 7 23:27:26 2015 +0100

    Uwatec Aladin Tec 2G supports maximum 2 gas mixes.
    
    According to the technical specifications, the Uwatec Aladin Tec 2G
    supports maximum two gas mixes. The data appears to confirm this,
    because the extra third gas mix always contains unrealistic oxygen
    percentages.
    
    However, I came across some data containing gas switches to the third
    gas mix. The interesting part is that according to the Uwatec
    application, this is actually a switch to the second gas mix in the
    header. One possible explanation is that for models with up to 3 gas
    mixes, they are labelled respectively "bottom", "travel" and "deco" mix.
    But the documentation for the Aladin Tec 2G only refers to the bottom
    and deco mix. So it might be that internally the index of the deco mix
    is always the 3th mix, regardless of whether a travel mix is supported
    or not.
    
    If the only allowed values for the gas mix index are 0 (for the bottom
    mix) or 2 (for the deco mix), then manually remapping the deco mix is
    equivalent with ignoring the lowest bit. This has the advantage that the
    required bitmasks and shifts are no longer different from those for the
    other models.

commit 8b64ce0edccae9099480a190e8daeb199db424d4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 7 11:50:24 2015 +0100

    Cache the parser data internally.

commit fb417ee5b5c090203810a63ae9753464f753829e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 7 10:58:37 2015 +0100

    No gas mix support for the Galileo Trimix yet.
    
    For the Galileo Trimix we don't know yet where and how the gas mixes are
    stored. Right now, we just pretend there are no gas mixes available,
    which is misleading.

commit bcb2925a258d7ed86fd77d9d0888c9a06e9ed673
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 7 10:07:35 2015 +0100

    Fix the Galileo trimix detection.
    
    Originally, I assumed that the trimix firmware update changed the model
    number from 0x11 (Galileo) to 0x19 (Galileo Trimix). But that assumption
    appears to be wrong because I received data from a Galileo with model
    number 0x11, but with the trimix data format. Another explanation might
    be that the trimix data format is not specific to the trimix firmware.
    
    Anyway, this is easily fixed by treating both models identically.

commit 5a1f1293d20b9c824bda54f0f316a93532faa093
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 6 09:36:14 2015 +0100

    Disable tank pressure samples for the Aeris Manta.
    
    The Aeris Manta is yet another non-air integrated model that doesn't set
    the initial tank pressure to the magic value 10000.

commit 3b264d9cfd41324262f296f2d537aaeb4855609e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 3 19:20:36 2015 +0100

    Add support for the new hardware descriptor.
    
    The latest firmware v1.75 introduced a new hardware descriptor byte to
    identify the different models based on their hardware features. This new
    hardware descriptor is now used as the libdivecomputer model number. For
    older firmware versions, which do not support the descriptor yet, there
    is an automatic fallback to the previous method based on the serial
    number.

commit bdbe95f221b788c754933f6e49c4292bf4c40e18
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 3 21:33:32 2015 +0100

    Detect and report unsupported commands.
    
    When trying to send an unsupported command, the ostc will simply ignore
    the command. Instead of echoing the command byte back, the ostc will
    immediately send the ready byte, to indicate it's ready to receive the
    next command. We can use this to detect unsupported commands, because
    the ready byte is a reserved value and guaranteed to never be a valid
    command byte.
    
    Normally we don't send invalid commands. But newer firmware version can
    always introduce new commands to support new features. To maintain
    backwards compatibility with older firmware versions, it's important to
    be able to detect unsupported commands and provide a fallback.

commit c7d2bfc9a0fcac644cf07f0b72a3ff4c95d0072f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 08:57:16 2015 +0100

    Add support for the Sherwood Amphos Air.

commit da96f0211acf775cf73827bcc6a5557c65a965f1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 3 14:44:01 2015 +0100

    Fix the freedive mode for the DG03 and VT3.
    
    The freedive/gauge bits for the Hollis DG03 and Oceanic VT3 are stored
    at another location than our initial assumption.

commit 41834a31c7db703702f9486712a918279d84da6d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 22:49:09 2015 +0100

    Fix the freedive mode for the Oceanic Veo 2 and 3.
    
    In freedive mode, the Oceanic Veo 2.0 and 3.0 have samples that are only
    4 bytes long, instead of the normal 8 bytes.
    
    The Oceanic VT3 and Hollis DG03 use the same logbook layout, and
    although I haven't been able to confirm this with real data, it's very
    likely they need the same fix.

commit 488c396656cfe5d6a91a731a88f1d5c31637d29a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 22:37:24 2015 +0100

    Fix the hour for the Oceanic Veo 2 and 3.
    
    For BCD encoding the hour in a 12 hour clock system, only 5 bits are
    required. The extra two bits are used for storing the freedive/gauge
    mode.

commit bad4dd43426ff4ecbfad77ecbe263a84466609d4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 24 09:06:35 2014 +0100

    Add support for the Oceanic VTX.
    
    The Oceanic VTX is very similar to the Aeris A300 CS. The main
    difference is the higher baudrate (115200 vs 38400). This is annoying
    because without the correct baudrate, no communication is possible and
    thus the existing autodetection based on the version packet doesn't
    work. As a workaround, we now rely on the model number from the device
    descriptor. The consequence is that the user must select the correct
    model now (or at least a model with the same baudrate).

commit 4dfca21a2bd9f95ff417a58312c8f1e1ed88eb9a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 19 10:37:05 2015 +0100

    Pass the model number to the open function.
    
    This change will be necessary for the Oceanic VTX, because it uses a
    higher baudrate.
    
    To maintain backwards compatibility, the existing function remains
    unchanged and a new function is introduced instead.

commit f5d96a081c09d2fc515caaf99a299270cfb59ac6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 16 21:46:21 2015 +0100

    Extend the retry logic to corrupt data packets.
    
    At the moment, there is only retry logic for the ACK/NAK byte. Corrupt
    data packets (e.g. wrong checksum, unexpected length, etc) are treated
    as a fatal error. By reading the entire packet inside the retry loop,
    all non-fatal errors are automatically taken care off.
    
    This change is necessary for the Oceanic VTX. For some unknown reason,
    the device always responds with an invalid data packet when sending the
    version command for the first time:
    
      W: 84 00
      R: 5A 4F ?? 45 41 4E 56 54 58 20 31 42 20 32 30 34 38 E9
    
    There is always one byte missing (marked with question marks), resulting
    in a timeout. However, when re-sending the command again, we receive a
    valid data packet:
    
      W: 84 00
      R: 5A 4F 43 45 41 4E 56 54 58 20 31 42 20 32 30 34 38 E9
    
    This might be a firmware bug, because we're observing the exact same
    behaviour with the official Oceanlog application.

commit 11d9256e43c83cd051aedf599c36b5dda9502afe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 19 09:12:35 2015 +0100

    Use symbolic constants for the commands.

commit 4671a31853f8650be5e722277d22d02f0dabb45f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 13 09:27:30 2015 +0100

    Disable gas mixes in freedive mode.

commit d2fce4ac3b385fe30f4065a83d853f7a6fad8f3e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 13 09:24:32 2015 +0100

    Implement the dive mode field.

commit 6f14e996d7bb5bab5d4fd59365e38567b50b762b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 10 23:02:39 2015 +0100

    Fix the freedive mode for the Aeris Elite T3.
    
    In freedive mode, the Aeris Elite T3 has samples that are only 2 bytes
    long, instead of the normal 8 bytes.
    
    Since there are many other models which support a freedive mode, the new
    implemention provides the necessary infrastructure to easily integrate
    those other models too.

commit 6f23ab9ed7afcd87d3cd70672bfe0966c55d33e1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 10 21:11:12 2015 +0100

    Fix the depth for the Aeris F11.
    
    Since the size of a sample is only 2 bytes, we were actually reading the
    depth value from the next sample.

commit b781fcf73d436b9b1037fc2cc1bbb0e790ee560f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 26 10:50:06 2015 +0100

    Add support for the HW OSTC cR.
    
    The OSTC cR is new model for closed circuit (CCR) diving. Under the hood
    it's identical to the OSTC 3, but with an S8 connector to interface with
    an external oxygen sensor. Since the data format already supports oxygen
    sensors, the OSTC cR can be added to the list of supported devices
    without any further changes.

commit 1d5863d827effacf81400d91ad63e45ac590e428
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Jan 21 08:38:59 2015 +0100

    Add average depth from OSTC/OSTC3 logbook
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit b6a3c9b2372180fd7401749ea24ad79d9d59c01c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 8 08:26:30 2015 +0100

    Add support for the Scubapro Chromis.

commit 6ad341d0c73d9da6de051e6c068b61f55976c133
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 2 09:05:33 2015 +0100

    Disable tank pressure samples for the Oceanic Geo 2.0.
    
    The Oceanic Geo 2.0 is a non-air integrated model that doesn't seem to
    set the initial tank pressure to the magic value 10000.

commit cfd4f4ce174374abe5c62793f86d4819ca46a1da
Author: Anton Lundin <glance@acc.umu.se>
Date:   Tue Jan 6 22:33:52 2015 +0100

    Have make be more silent by default
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 97a8d41089a0c613cb8f62d8c3d4013bc97585ca
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 3 16:25:19 2015 -0800

    Add EON Steel bookmarks, warnings and alarm events
    
    I'd missed these because I'm blind. But mostly because they aren't as
    common.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 92371935fc50182ffa741db261807f8a865e9d52
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Jan 3 15:23:35 2015 -0800

    Parse EON Steel notification and state changes
    
    The EON Steel notifications and states match the libdivecomputer ones
    very badly, but this tries to make sense of the ones that match.  And
    puts the infrastructure in to do others in the future.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-fouindation.org>

commit 7a7418421c1a3fc482dcf97d9533aa3dcb8d09a1
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Fri Jan 2 22:23:40 2015 -0800

    Add EON Steel gas change event parsing
    
    The really sad part is that the EON Steel handles gas change events
    correctly, by actually saying which cylinder it switches to.  But the
    libdivecomputer interfaces are broken, and only contain the gas *mix*
    you switch to, which is ambiguous since you could have the same mix in
    multiple cylinders.
    
    Maybe we could put the one-based cylinder index into the "flags" field?
    With zero meaning "unknown". That would be a straightforward extension.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 87e6940572176904c5c9f15048b136ec10daa6a5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 21:36:22 2014 +0200

    Add support for the DiveSystem iDive and Orca.

commit 396b867119e15a1def8f6621f69da471a5df3f81
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 21 12:57:10 2014 +0100

    Reserve one byte extra for the null character.
    
    The OSTC3 can display a status message of up to 16 characters large.
    Since this does not include the terminating null character, the buffer
    needs to be one byte larger.

commit e2589c0756ff0bbe7f1ec55928ef370dac688ec1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 19 09:56:35 2014 +0100

    Replace the code for handling line endings.
    
    The new implementation is similar to the already existing code for
    reading Intel HEX files. It can handle arbitrary line endings, and not
    just CRLF or LF.

commit 2d4f76ab519da5c7b40182dc747adf091bfcd519
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sat Dec 20 11:56:03 2014 +0100

    Simplify state switching and checking for OSTC3
    
    This simplifies the code to check and handle state switching for the
    OSTC3.
    
    Suggested-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 7c447c5c16c7a7c6962fc6f56afa6eb6f79586da
Author: Anton Lundin <glance@acc.umu.se>
Date:   Tue Dec 16 22:29:55 2014 +0100

    Remove unused imports
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 57701ba0b0445b26ede28dccb399e6cc679ae6c5
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Dec 17 21:17:25 2014 +0100

    Add Anton to copyright notice.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit c6486444d377e0f4ae02ea6323bca0b3a07b3b48
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 20:45:49 2014 +0100

    Teach examples/ostc-fwupdate about OSTC3
    
    This teaches the example firmware upgrader about how to upgrade the
    OSTC3's.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 02d8c0f04a7691b3368109634a3ac48c7cae0f97
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 20:44:41 2014 +0100

    Firmware upgrade for OSTC3
    
    This connects the bits and implements firmware upgrade for the OSTC3.
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 2733a9dc53f9081e05c4e8ee26735c956ac9c3a7
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 19:47:10 2014 +0100

    Add code to send upgrade firmware command to OSTC3
    
    This function triggers a reboot into the bootloader which flashes the
    new firmware to Prom.
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 543ddca8a2d59320f44a9135ced59cfbaf0aaffe
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 19:44:10 2014 +0100

    Add code to write rom of the OSTC3
    
    This is how you transfer a new firmware to the OSTC3.
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 6322e96268e1c41734e407bc1ab0ccbb0bb4b621
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 19:42:41 2014 +0100

    Add function to read the rom from the OSTC3
    
    This is necessary to verify that the memory written got transfered
    correctly.
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 5c71ff34c4b1a3cc5eacb1e18f8b29a80c3d504d
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 19:41:30 2014 +0100

    Add a function to erase the memory of the OSTC3
    
    This is the fist step in the firmware upgrade process.
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 08dda98c290958ff688fdfb17059f483ed8ffc73
Author: Anton Lundin <glance@acc.umu.se>
Date:   Thu Nov 13 00:04:20 2014 +0100

    Add utility functions to convert uints to bytes
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 1d8337c570bfbf013d6ead8c910c5d13b9ea7a5a
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 19:38:08 2014 +0100

    Add a helper to put the OSTC3 into servicemode
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit d8f11810e1e7ca7a0cc3c07d67ec5e41d7c81d6d
Author: Anton Lundin <glance@acc.umu.se>
Date:   Thu Nov 20 00:11:54 2014 +0100

    Lift the OSTC3 INIT out of open
    
    This lifts the OSTC3 INIT command out from the open function and does
    that separately. This is refactoring to be able to enter service mode so
    we can access service mode commands.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit b1c12b597baf17fae722ec603c86b0c234ac88c5
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 00:15:24 2014 +0100

    Add code to read and decrypt OSTC3 firmware files
    
    This code is inspired by JeanDo ostc-companion.
    
    Reviewed-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 954cae1a0e87be4b1028f1704f7355858a8ab2e4
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Dec 17 21:31:08 2014 +0100

    Workaround msvc lack of a stdint.h
    
    Suggested-by: Jef Driesen <jef@libdivecomputer.org>
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 5820ac01e3c0adba4ee523ea599c176cc45dca3e
Author: Anton Lundin <glance@acc.umu.se>
Date:   Wed Dec 17 00:27:20 2014 +0100

    Port TinyAES-128 to be thread safe.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 52bc5ab7a0535e9fd5c881a215660472a3362b4d
Author: Anton Lundin <glance@acc.umu.se>
Date:   Sun Nov 9 00:13:11 2014 +0100

    Import Tiny AES128
    
    This imports Tiny AES128 from https://github.com/kokke/tiny-AES128-C for
    use in the decoding of OSTC3 firmwares.
    
    This aes-code is released into the public domain.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 4b61434587495d92fcb13d20e6c9a0fdb337e508
Author: Janice <janice@moremobilesoftware.com>
Date:   Sat Nov 29 17:47:46 2014 -0800

    Also cache the number of mixes and the mix values
    
    At least one dive computer in the Suunto Vyper family, the Vytec DS, is
    capable of recording gas mix switches, and therefore supports more than
    one mix. When going through the dive profile caching process, also look
    for gas changes and record how many mixes were used in the dive. Mix 1
    is always the main tank and it’s O2 value can be found in the dive
    header, but the other tank O2 values are not available ahead of time. By
    reviewing the dive profile ahead of time, the entire list of mixes can
    be returned to the application at the beginning of the dive as per
    usual.

commit 3bf73253bc497fd22c3907e1c28105016409f11b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 3 19:24:07 2014 +0100

    Cache the parser data internally.
    
    The code to calculate parameters like maximum depth and divetime is
    duplicated in multiple places. Move this code to a single place, and
    cache the data in the parser instead.

commit 134da18190b5ea1581d789564979e3e4c73cd243
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 30 21:00:54 2014 +0100

    Fix the temperature for the Sherwood Amphos.
    
    The sign bit is stored at a different offset.

commit 598377ec446e02e25d4acb0cbbb9429bd6991072
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 4 19:11:01 2014 +0200

    Add support for the Citizen Hyper Aqualand.

commit 21f3dbcb04a6903e8a248381fa49768632bf08d6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 20 21:11:29 2014 +0100

    Add a default case to the switch statement.
    
    This is only the silence the "enumeration value not handled in switch"
    compiler warning. There is already a check earlier on to take care of
    unsupported fields, but the default case is a good practice anyway.

commit 0ed5e6d6531e98028159cce2b9deae7e40eafb9f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 12 12:55:51 2014 +0100

    Fix another memory leak.
    
    The array with type descriptors is populated with dynamically allocated
    strings, but they are never freed anywhere. To be able to free those
    strings easily, they are now initialized with NULL pointers instead of
    zero length strings.

commit d1121d174c2bb612ca8a07d601975c38ad98c399
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 22:09:28 2014 +0100

    Fix a few memory leaks.

commit 6df4f0082289934a10ad0c79387558794eb42317
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 22:04:55 2014 +0100

    Fix a NULL pointer dereference.

commit 0b0acf7336e7170d393098a976538d6538fabdce
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 21:38:02 2014 +0100

    Use the non-standard _snprintf() function for msvc.

commit dbcaa6946acf378ca90528ad30651bb015927020
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 21:07:14 2014 +0100

    Add explicit casts for the msvc C++ compiler.

commit f228a5f9fceefde5a6d5ee2c59e5eee236cb441c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 21:02:35 2014 +0100

    Replace string literals with arrays.
    
    This avoids some more compiler warnings regarding incompatible pointer
    types (e.g. signed vs unsigned char pointers). Arrays have the
    additional advantage of the sizeof operator. This eliminates an
    unnecessary strlen() call, and the strcpy() call can be replaced with
    memcpy().

commit d5933d59fbf43b7f4c4474cd6a5bc1f9021681ae
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 19:30:48 2014 +0100

    Replace zero length strings with NULL pointers.
    
    This avoids some compiler warnings. The type of the string literal is a
    const char pointer, while the send_cmd() function expects an unsigned
    char pointer.

commit 4120b2f0e9f0a51850c791430079b398e682d3d7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 19:00:18 2014 +0100

    Replace void pointers with unsigned char pointers.
    
    Since we're dealing with byte arrays, there's no need to use void
    pointers. Using unsigned char pointers also eliminates some compiler
    warnings for pointer arithmetic on void pointers.

commit e8c2e879191ebcbf88d01e04eb9b5d1746214535
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 9 19:37:17 2014 +0100

    Remove the custom logging functions.
    
    There is no need for custom logging functions, because libdivecomputer
    already has an extensive logging infrastructure, featuring conditional
    compilation, multiple loglevels, customization by the application, etc.

commit 33682940183b8cf00a314b3c565d47b14469c273
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 9 19:31:21 2014 +0100

    Don't terminate the application on error.
    
    Terminating the application on error, by calling exit, is not
    appropriate in a library. An error code should be returned instead.

commit 1fa054b409b00ae9bc0015ccd79d1ededd14cb7b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 22:40:34 2014 +0100

    Use the libusb autodetach functionality only if available.
    
    The libusb autodetach kernel driver functionality is only available in
    recent versions.

commit 6bc6e58d3b3e09beadb39922aff18726bba9ebfe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 22:34:45 2014 +0100

    Fix a redefinition warning for the ERROR macro.
    
    See commit 113d2e4706698f7086e5499282ec958aa2de044f for more details.

commit 686500d51bce2bcc9c8bc2bf810ea0712fe6ae79
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 22:10:39 2014 +0100

    Follow the libdivecomputer naming conventions.
    
    All entry point functions (e.g. public functions or functions called
    through the vtable) use the backend name as the prefix. The same applies
    to the main device and parser structures.

commit 5c967f3382ef863f55cdc68accfa551319cc610e
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Oct 20 10:34:37 2014 -0700

    Suunto EON Steel: support downloading of core dive profile data
    
    Basic Suunto EON Steel downloading copied from my test application.
    This parses all the core dive data, including sample data (time, depth,
    cylinder pressure, deco information etc).
    
    The deco information returns ceiling and TTS rather than ceiling and
    "time at ceiling", because that's what the dive computer has, and I
    don't see any other way to return the information.
    
    We don't report any events yet, though.
    
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit b2bc231cb472cb5eb409abb9ce493130b00e9526
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 11 08:48:38 2014 +0100

    Convert imperial tank volume to the metric system.
    
    There are two different ways to specify the volume of a tank. In the
    metric system, the tank volume is specified as the water capacity, while
    in the imperial system the tank volume is specified as the air capacity
    at the surface (1 ATM) when the tank is filled at its working pressure.
    
    To avoid mistakes, the tank volume is now always returned as the metric
    volume. For imperial tanks, the tank volume is converted to the metric
    representation.

commit 71fe6839220f6b100b9bd8e33f064fe58f3fa3e0
Author: Janice <janice@moremobilesoftware.com>
Date:   Sat Nov 8 18:16:43 2014 -0800

    Don't look for tank pressure information from a GEO

commit 5e88cf749475377fe21d2dd2b4d60fce6542127c
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Nov 8 16:07:36 2014 -0800

    Add missing break in Cobalt support for divemode
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4a1632732208d417f160d0c50ec01e53db508623
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 9 09:20:16 2014 +0100

    Fix the tank working pressure for the Cobalt.
    
    The difference between CUFT@PSI and CUFT@BAR is only for the Cobalt user
    interface, to allow the user to enter the tank volume independent of the
    units configured in the main preferences. Internally the working
    pressure is always stored in psi.

commit 52a9dc39473e98dec9c3bec132390a1b2bd80c47
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 21 09:28:43 2014 +0200

    Add support for the Mares Airlab.
    
    The Mares Airlab is actually the same device as the Darwin Air.

commit 88159c6fe4bac07a526e62b3c7cb83930243ec67
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 27 09:38:14 2014 +0100

    Implement the dive mode for several devices.
    
    The new dive mode field is now supported by devices from these
    manufacturers:
    
     * Atomic Aquatics
     * Heinrichs Weikamp
     * Mares
     * Reefnet
     * Suunto

commit c95ab19e6a4151f307a3db9bcda78e5c08fff3e2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 5 10:08:47 2014 +0100

    Use symbolic constants for the dive mode.

commit 651123de537b4b866d5b6b9e8314ccd2e37f53df
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 27 09:37:45 2014 +0100

    Add support for parsing the dive mode.

commit 25411672dc1395d614d78477cdb653f62ecb921d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 7 21:18:11 2014 +0100

    Implement tank support for the Mares Darwin Air.

commit 11cafbaf5f7efa3bca01d8b5d28b57514904b917
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 21 21:10:40 2014 +0200

    Implement tank support for the Atomic Cobalt.

commit 8f9878a1c08c8776d9c4287aec51ed74d375b8a0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 21 21:05:41 2014 +0200

    Add support for parsing tank data in the dive header.

commit 52cac91b18e23489a6d840e0d974f22a2ac04faa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 21 21:21:46 2014 +0200

    Implement the temperature support for several devices.
    
    The new temperature fields are now supported by devices from these
    manufacturers:
    
     * Atomic Aquatics
     * Heinrichs Weikamp
     * Mares
     * Suunto
     * Uwatec

commit 693a452250c7c9df17c94fbec26d62369cc42ee9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 20 22:12:58 2014 +0200

    Extend temperature with surface, min and max values.

commit a4e5d4234c4d3e410ab6fdd1e3eee1b9a6726bee
Author: Calle Gunnarsson <calle.gunnarsson@gmail.com>
Date:   Fri Aug 22 12:11:05 2014 +0200

    Cressi Leonardo now reports temperature from dive header
    
    Signed-off-by: Calle Gunnarsson <calle.gunnarsson@gmail.com>

commit cdbc0cd9bd1b29b23cd08ffa844be074300d6c6b
Author: Calle Gunnarsson <calle.gunnarsson@gmail.com>
Date:   Fri Aug 22 12:06:24 2014 +0200

    Added support for parsing temperature in the dive header
    
    Devices that only reports a single temperature in the header
    will now be able to report it as well when they implement this.
    
    Signed-off-by: Calle Gunnarsson <calle.gunnarsson@gmail.com>

commit 60665ec633f57c8aa2ba3836e4451c08c508a401
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 3 15:53:04 2014 +0100

    Disable exclusive access mode during close.
    
    When closing the slave side of a pseudo terminal, the exclusive access
    mode will persists on the master side. The result is that re-opening the
    slave side will fail with EBUSY, unless the process has root priviliges.
    To workaround this problem, we already introduced an option that enables
    better compatibility with pseudo terminals. See commmit
    fab606b00a44ea2114a4029ad09b70c66c3049f7 for details.
    
    In my development environment, I always have this option enabled. But
    occasionally I also need to test release builds. And then I usually end
    up with inaccessible pty's again, because the pty support is disabled by
    default for release build.
    
    This problem can easily be avoided by disabling the exclusive access
    mode, just before closing the file descriptor.

commit d2eacc5c01d3ddaf01fb3e9899e209309e531914
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Oct 28 20:55:21 2014 -0700

    Fix temperature parsing for Sherwood Wisdom 3
    
    Adds the new model and treats it like a Wisdom 2 (and many other, similar
    versions of the Oceanic Atom2 style dive computers).
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 69fec57ed7d361d5312c5b0f40a859e8d8fa3861
Author: Janice McLaughlin <janice@moremobilesoftware.com>
Date:   Tue Oct 28 09:14:25 2014 +0100

    Fix the gas mixes for the Aeris A300AI.
    
    The Aeris A300AI supports 4 instead of 3 gas mixes. The offset where the
    gas mixes are stored was wrong too.

commit 1d2ebd7af11881cd02fc5a337e8a27f265e5fb09
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 28 09:00:45 2014 +0100

    Fix the header size for the Oceanic VT4 and VT4.1.
    
    This change was already present in the oceanic_atom2_parser_get_field()
    function, but not in the oceanic_atom2_parser_samples_foreach()
    function. These two should always be kept in sync.
    
    This fixes a bug in the tank pressure detection.

commit 853477b3b1470241dee56627ec78b6fe24a207a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 13 00:06:44 2014 +0200

    Add support for the Aeris F11.
    
    Most of the changes needed for the F11 are the standard model specific
    tweaks. But the F11 also has another interesting "feature". If you try
    to download a full memory dump using the standard B1 read command, then
    the data starts to repeat after the first 64K. It seems that somehow,
    the B1 command can only address the first 64K of the memory. To avoid
    this problem, the newer B4 read command needs to be used instead.
    
    This might be a firmware bug, or maybe internally they store the address
    in a 12bit variable, which causes the upper bits to get lost? That would
    explain the repeating data.

commit a1ff11e08e184f38efbcb60e2b00a279ea3a9726
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 26 17:29:58 2014 +0100

    Cache the last page to reduce the number of I/O operations.
    
    In bigpage mode, we always read large pages, regardless of the amount of
    bytes requested by the caller. Excess bytes are simply discarded. This
    is inefficient because the same large page will be downloaded multiple
    times, when requesting more than one 16 byte page from the same large
    page. By caching the pages internally, we can greatly reduce the amount
    of I/O operations.
    
    In practice, applications and also libdivecomputer's internal algorithm
    for downloading the dives will typically request contiguous pages, so we
    only need to cache the last page.
    
    This implementation is based on ideas and code contributed by Dirk
    Hohndel.

commit 0bcee519e0463b877efc5b69bc19697080d8646c
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Thu Oct 2 10:47:57 2014 -0700

    Aeris A300CS: detect the number of cylinders used
    
    The A300CS actually tells us how many of the cylinders it considers "in
    use".
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 7a108f555bc541a5343bbf6635c0181a208930ef
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Oct 1 15:28:37 2014 -0700

    Aeris A300CS: add reporting of water type (fresh/salt)
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 16fb1c18695acbd3ee442cbba1f7ab44a236a975
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Sep 30 12:35:04 2014 -0700

    Aeris A300CS: add support for NDL / deco data
    
    Encoded in every sample. The depth is in multiples of 10 feet which gives
    somewhat odd metric stop depth - but rounding to full meters would take
    care of that.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit d89dd952c9f601ce1be2b93bbad250e72506fea7
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Sep 24 21:39:28 2014 -0700

    Add initial support for the Aeris A300CS
    
    This is ignoring a ton of data that the dive computer provides. But it
    gives profile, tank pressure and temperatures - so it's a start.
    
    This patch adds a set_dtr and set_rts call to the serial interface prior
    to interacting with the device. This change is required for the A300CS to
    talk to the computer.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 4fa0f4cc59c59a56ed390080dc236b38adb346cc
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Wed Sep 24 21:26:32 2014 -0700

    Prepare Oceanic infrastructure for multi page reads
    
    Some new Oceanic dive computers like the Aeris A300CS support a new read
    command that always reads 256 byte pages instead of 16 byte pages, other
    versions support reading 128 byte pages.
    
    This patch adds a field to the oceanic_atom2_device_t structure to
    indicate which type of device this is. If bigpage mode is enabled, the
    algorithm will always request larger, aligned reads and fall back to
    standard 16 byte reads otherwise.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit abe2eab9760c974fb146ae8cea28ebe7da191ee6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 25 21:21:43 2014 +0200

    Fix the date/time for the Oceanic Pro Plus 3.
    
    The day is stored as a binary value, not a BCD encoded value.

commit 8853a1ccd422fb662aea674265abc7ccc6525872
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 10 20:29:17 2014 +0200

    Associate the pressure samples with the primary tank.
    
    The primary tank, which is the tank connected to the hose and thus the
    tank pressure sensor, it not necessary the first tank. The correct tank
    index can be found by searching the array for a gas mix with a sensor id
    equal to one.

commit 9db9e970cfc227f4d8c3e97518b659095352bbb4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 24 19:47:09 2014 +0200

    Convert the gasmix id into an array index.
    
    The gasmix value in the sample data is the id of the gasmix. Depending
    how the user manipulated the gasmix settings, this id is not necessary
    identical to the index into the gasmix array.  The array index can be
    found by searching the array for a mix with the correct id.

commit 8edc765e6b14becf1faca70ebe6a411928c1c57b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 20 10:45:33 2014 +0200

    Add some more error messages.

commit 693bfa391605346013f4b6d0ad134ee48506c61b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 13 13:20:16 2014 +0200

    Fix the Tusa Zen header size and pressure.
    
    For the Tusa Zen, the header is 16 bytes smaller. With this change, the
    gasmixes and the intial temperature are now parsed correctly.
    
    The tank pressure samples have also been disabled manually, because this
    is a non-air integrated model that doesn't seem to set the initial tank
    pressure to the magic value 10000.

commit 5f765f91430f16932d96b3777404420aa2dd4c7c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 26 21:58:26 2014 +0200

    Add support for the Subgear XP-3G.

commit e79bd02f0a534117fe76827b0b615ac3ed8f813b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 26 18:44:44 2014 +0200

    Fix a buffer overflow.
    
    The 6 byte logbook entry gets prepended to the profile data. We need to
    take this into account when allocating the memory buffer. Under normal
    circumstances this shouldn't be a problem, because a single dive is
    usually much smaller than the profile ringbuffer. But it's better to be
    on the safe side.

commit cde70334b0f1d3306e2b04b3f7e636018758e932
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 26 18:38:45 2014 +0200

    Initialize the fingerprint before use.
    
    The fingerprint is used unconditionally, regardless of whether it's
    explicitly set by the application or not. Therefore it needs to be
    initialized properly.

commit 6845d9b77c81185a50a855c73a9c9f7989ad434c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 21 23:39:29 2014 +0200

    Fix the Mares Puck 2 memory layout descriptor.
    
    The Mares Puck 2 uses the same memory layout as the Nemo Wide 2. See
    commit 322227df7f65da8b4a962f3513e0a10b89cbe29d for more details.

commit 84d997fac63aeccdc59a8ac0e4de356603f866be
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Aug 16 22:46:53 2014 +0200

    Fix a build error.
    
    Commit 7a851ccb1b9ed9b8906721cb1872b96b35185883 accidentally broke the
    build due to a missing line.

commit 549207a48b79fe4afb7e1fe142b1c313c10f4a42
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 15 11:29:18 2014 +0200

    Add suport for the OSTC Sport variant.
    
    Although the OSTC Sport uses bluetooth communication, the new model
    remains fully compatible with the OSTC3, because it provides a virtual
    serial port interface. As usual, the new model can be detected based on
    the serial number.

commit 7a851ccb1b9ed9b8906721cb1872b96b35185883
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 14 10:20:23 2014 +0200

    Add some extra error messages.

commit b0874ea4d9045142c8e8db4bcfc6556caf2c07a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 12 22:15:58 2014 +0200

    Disable gas mixes and events in gauge mode.
    
    For a dive in gauge mode, the gas mixes defined in the header should be
    ignored, and no gas change event should be emitted. This is done by
    hardcoding the number of gas mixes to zero.

commit 4f2d71ce4996943affb272b3f559a47cd0ff2aee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 12 22:00:43 2014 +0200

    Cache the parser data internally.
    
    The code to find the offset to the footer and parse the gas mix data is
    duplicated in multiple places. Move this code to a single place, and
    cache the data in the parser instead.

commit c2f86a7806ef46b0814a9a0176950202ddce8978
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Aug 9 17:12:23 2014 +0200

    Ignore disabled gas mixes.
    
    Gas mixes that have been disabled are stored as a mix with 0% oxygen and
    0% helium. This is clearly an invalid gas mix, and it makes no sense to
    return it back to the application.

commit ed2b9d34d5fa4fdfdba7d5de47c5fe3325710395
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 3 15:07:55 2014 +0200

    Fix the dive mode detection for the Mares Nemo Air.
    
    For the Nemo Air, a dive mode with the value 2 indicates gauge mode
    instead of freedive mode. With this change, all models from the puck
    family now use the same values.

commit 5826257a79887c57467b25190d7d7f2dd381a84f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 3 15:03:08 2014 +0200

    Use symbolic constants for the model numbers.

commit eb036357a67ddea95ede76c154f1dd33d2bc4f0a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 21:18:41 2014 +0200

    Ignore excess samples with the same timestamp.
    
    With a time based sample interval, the maximum number of samples for a
    single timestamp should be constant. However in practice some devices
    occasionally store one or more additional samples with the same
    timestamp.
    
    Ignoring those excess samples, allows the parser to proceed, while still
    preserving the strict time based interval for the application.

commit 77d53813bdad7ef3f59660bed1c5120d594042e6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 2 16:40:27 2014 +0200

    Remove the device specific example applications.
    
    These device specific applications became obsolete long time ago with
    the introduction of the universal application.

commit 33710423ac744300fa65488c9e1c076ee7b4aecf
Author: Venkatesh Shukla <venkatesh.shukla.eee11@iitbhu.ac.in>
Date:   Fri Jun 27 21:43:57 2014 +0530

    Add an option to disable the example applications.
    
    The example applications may not always be needed. An option to disable
    them might be useful.
    
    Signed-off-by: Venkatesh Shukla <venkatesh.shukla.eee11@iitbhu.ac.in>

commit 6433a45bbcccc3048b1f3db3680f041eac1991e2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 24 21:06:58 2014 +0200

    Fix the date/time for the Aeris Elite T3.
    
    Commit d414da70a42afca0096e0402a426c4ac8d2a2881 added support for a
    second Aeris Elite T3 variant. But the parser wasn't updated to take
    into account this second model number.

commit 368c138858a6fef139743af89ed24d6be3df2061
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 23 18:04:17 2014 +0200

    Fix the gas mixes for a few models.
    
    For the Aeris Manta and Sherwood Insight, the header size should be 16
    bytes smaller. Due to this mistake not only two samples were missing,
    but also the byte offset for the gas mixes were wrong. This resulted in
    invalid gas mixes, with oxygen percentages exceeding 100%.

commit 48e73babd6c9fb71666655fac900689736b6b87d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 20 22:22:41 2014 +0200

    Fix the temperature for the Sherwood Wisdom 2.
    
    The sign bit should be reversed for this model.

commit f20f28e9d0014dded3a4b975a3a143d3c6c19e17
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 14 08:22:28 2014 +0200

    Ignore disabled gas mixes.
    
    For the older models, gas mixes are disabled by setting their oxygen
    percentage byte to 0x00 or 0xFF. Trying to parse such a byte as a valid
    percentage results in an invalid gas mix.
    
    Because the device doesn't allow you to enable a gas mix if the previous
    gas mix has already been disabled, we can simply stop parsing the gas
    mixes once the first disabled gas mix has been found.

commit 86e9c3dfd3e777e24762e212df9ef7ac7c760d28
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 14 08:01:17 2014 +0200

    Cache the initial gas mix.
    
    The gas mode should not only be taken into account for parsing the gas
    mix definitions, but also for the initial gas mix. Because the logic
    needs to be kept in sync, it's convenient to have all related code in a
    single place, and cache the value.

commit 28135bc57ae439e58c2a0b4b8b58206118f878c9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 14 07:51:32 2014 +0200

    Apply the gas mode immediately.
    
    Because the gas mode takes precedence over the individual gas mix
    definitions, we can simplify the code by taking the gas mode into
    account immediately when parsing the gas mixes.

commit bb2b64f5d74b4c1b7017149c16de596681b35cb6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 5 09:03:32 2014 +0200

    Fix the length of the Suunto DX gas change event.
    
    The Suunto DX uses 5 bytes for the 0x06 gas change event.

commit 8a5bfc390da969c98d3b4f584819729fc133d2d7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 3 09:45:31 2014 +0200

    Remove the percentage variable.
    
    There is already another variable for the O2 percentage, so re-use that
    one instead.

commit e263a1c3364594e21a9ad6ebc7451aff53c5896b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 3 09:42:33 2014 +0200

    Improve the warning and error messages.

commit ffd1d1c8b61c90292b12a63b72018add81efa82c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 11 09:02:07 2014 +0200

    Disable the gas mixes in gauge mode.

commit 1d6c933415c6a24d0b628e7b09f13937c66bda55
Author: Cristian Ionescu-Idbohrn <cristian.ionescu-idbohrn@axis.com>
Date:   Mon May 26 18:57:46 2014 +0200

    Another gitignore update.
    
    Signed-off-by: Cristian Ionescu-Idbohrn <cristian.ionescu-idbohrn@axis.com>

commit 8eebc0abd8148745684374961e3413683017a84b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 14 13:55:58 2014 +0200

    Add support for the Beuchat Voyager 2G.

commit 20c874b2671c086ba9cf7e43c381f643c517b6bd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 27 22:21:36 2014 +0200

    Use higher resolution timestamps on Windows.
    
    In commit 886884ab606def1183d99eca7dec8affefee635e, the custom log
    function in the example applications has already been modified to use
    high resolution timestamps. But I forgot about the built-in default log
    function. So this is basically the same change, but now applied to the
    built-in log function.

commit 197b9f09421111e03588c94d55a72aa6ec624c63
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 28 06:29:34 2014 +0200

    Remove the extra check of the termios structure.
    
    The extra memcmp check after the tcsetattr call is intended to verify
    whether all the changes to the termios structure have been applied
    correctly.
    
    But for pty's, some of the termios settings make no sense at all, and
    therefore the Linux kernel always does:
    
        tty->termios.c_cflag &= ~(CSIZE | PARENB);
        tty->termios.c_cflag |= (CS8 | CREAD);
    
    Thus, instead of ignoring such nonsense termios settings, the kernel
    changes the termios structure to reflect what pty's actually do. The
    consequence is that these settings will not stick, and cause the memcmp
    check to fail.
    
    An example where this affects libdivecomputer, are the two backends that
    require odd or even parity (e.g. vyper and iconhd). Here, the kernel
    will clear the PARENB flag, and thus cause the memcmp check to fail.
    
    Since this check appears to causes more trouble than it solves, let's
    just remove it completely!

commit 5f1a18653d0bd671c1df6ccfa08e99c66a0e7ad1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 14 09:52:34 2014 +0200

    Initialize the termios structure.
    
    The previous commit exposed another issue. The termios structure may
    contain padding bytes. Because the content of those padding bytes is
    unspecified, they may contain some random data, which causes the memcmp
    to fail.
    
    Explicitly initializing the termios structure with memset, will also set
    the padding bytes to zero.

commit 3001dda198c1c534ae7f37134466057a306a7e1a
Author: Venkatesh Shukla <venkatesh.shukla.eee11@iitbhu.ac.in>
Date:   Tue May 13 15:00:48 2014 +0530

    Minor error in serial_configure
    
    Due to a minor mistake, only the first byte was being checked for
    equality. Fixed it by changing position of parenthesis.
    
    Signed-off-by: Venkatesh Shukla <venkatesh.shukla.eee11@iitbhu.ac.in>

commit 48924123a6b1100a17ae6da29347cf7667a10439
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 19 20:50:30 2014 +0200

    Fix a typo in the profile ringbuffer start address.
    
    The profile ringbuffer is supposed to be located after the logbook
    ringbuffer, but due a silly typo they did overlap with 256 bytes.

commit 654a90993634d3f138fa843962fd7c2166571682
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 18 19:35:37 2014 +0200

    Fix the Mares Puck Pro memory layout descriptor.
    
    The Mares Puck Pro uses the same memory layout as the Nemo Wide 2. See
    commit 322227df7f65da8b4a962f3513e0a10b89cbe29d for more details.

commit 1872b71dad98523e6e8b705c98f6202cf6752c93
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 12 13:15:46 2014 +0200

    Add support for ascent rate warnings.
    
    The Cressi Leonardo does store an indicator for the ascent rate (e.g.
    the number of arrows) in the upper two bits. This results in 4 possible
    values, ranging from 0 to 3, with the following interpretation:
    
        0.0 -  3.9 m/min  No signal
        4.0 -  7.9 m/min  1 Arrow
        8.0 - 11.9 m/min  2 Arrows
       12.0+       m/min  3 Arrows (with STOP icon)
    
    Reported-By: Nick Shore <support@mac-dive.com>

commit b7a5394e73804019f4d89415302c76f0fc6231be
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 4 22:50:31 2014 +0200

    Add support for the new OSTC3 bailout event.
    
    With the exception of the different event mask (single byte 0x80 vs two
    byte 0x0100), the OSTC3 bailout event is identical to the OSTC2 variant.
    Just as before, the new bailout event is reported to the application as
    a normal gas change event.

commit 4db8535e3950ad5d762876ac1f4a02b9e96a026d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 4 22:43:54 2014 +0200

    Use the extended sample length stored in the data.
    
    Currently, the buffer overflow checks take into account the size of the
    entire dive. But since the length of the extended sample is stored in
    the data, we can actually check for overflows in each sample. The main
    benefit is that errors will be caught much earlier now.
    
    An additional advantage is that we can now easily skip any remaining
    sample bytes. Normally such bytes are not present, unless a firmware
    update introduces a new feature which our parser doesn't support yet.

commit 5abad6e56838535db24dc54211202a825f8b16b7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 4 22:40:14 2014 +0200

    Add more error messages.
    
    This makes debugging easier, because the error messages immediately
    reveal where the problem is located, without needing a debugger.

commit 466fb0ff6b4ff1811168a393d079467eeb6c5d73
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 4 22:37:21 2014 +0200

    Add more buffer overflow checks.
    
    There are a few places left, where the contents of the buffer is
    accessed without first inspecting the available length.

commit 322227df7f65da8b4a962f3513e0a10b89cbe29d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 22 13:14:33 2014 +0200

    Fix the Mares Nemo Wide 2 memory layout descriptor.
    
    The Mares Nemo Wide 2 appears to have a slightly larger profile
    ringbuffer, which extends to the end of the internal memory. It remains
    to be seen whether this is also true for some of the other models. The
    Mares Matrix is currently the only model where this is definitely not
    the case.

commit b4cc491aeeb44115d47677a59f2428233d69d1a8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 15 08:29:37 2014 +0200

    Add support for the Aeris A300.

commit 148f059bcbb11cb2c7e91d1da2b8814c7b5e8f3d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Apr 2 08:30:20 2014 +0200

    Add support for the Hollis TX1.
    
    The Hollis TX1 has several new features compared to the other models. It
    supports trimix and up to 6 different gas mixes can be configured. It
    also has twice the amount of memory, which requires an extra bit for the
    ringbuffer pointers.

commit 3c99f55b6f628ea666b9aa3b18e4ba06f40beb00
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 17 10:50:56 2014 +0200

    Add support for trimix gas mixes.

commit c74118a922c6cc846ae944cd718e7809f54b7b5e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 26 15:42:44 2014 +0100

    Fix the initial gas mix for the D4i, D6i and D9tx.
    
    The initial gas mix index has been confirmed for the D6i only. For the
    other two models, it's an educated guess that the byte offset will be
    identical.

commit 6b912f4f7b7bf99c5ebd61ca72bcfdf5dc60f65a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 7 11:05:14 2014 +0200

    Fix the detection of the last valid dive.
    
    Normally, the last valid dive is followed by an empty entry with all
    0xFF bytes. However, we received data from a device where a few of those
    bytes are not equal to 0xFF. This causes the entry to be processed
    incorrectly as a valid dive.
    
    As a workaround, we now check the internal dive number for 0xFFFF.

commit eb12a0aa20e6c9e2e74beafcb5c60cda2d88dfee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 28 10:25:07 2014 +0100

    Remove an infinite loop.
    
    If an unknown type byte is encountered, the offset isn't incremented,
    resulting in an infinite loop. We now return an error instead.

commit 1d7c79b635b3acba232871529f3642cfe9660aea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 26 18:52:20 2014 +0100

    Add support for the Atomic Aquatics Cobalt 2.

commit 6d4893a1467452d3a0e94e712c2d07b0597b9f3c
Author: Anton Lundin <glance@acc.umu.se>
Date:   Thu Mar 27 20:44:12 2014 +0100

    Fix building for Android
    
    This makes libdivecomputer build via Android NDK. Its currently unusable
    due to the fact that Android usually doesn't provide any kernel serial
    drivers.
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 5086b1781c31817cc0d3d39258fc7b46645d61ec
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 28 06:47:17 2014 +0100

    Reduce the timeout to one second.
    
    A packet usually takes only a few milliseconds to transfer, so one
    second is still plenty of margin.

commit f0faebb3a1ee5ae1cdeffac2cd7afe78a68b46c9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 28 06:36:04 2014 +0100

    Introduce an adaptive inter packet delay.
    
    On some systems a small delay is required between receiving the response
    of a packet and sending the request for the next packet. Without this
    delay, almost every request fails with either a NAK or a timeout.
    Retrying usually works, but also causes the download to slow down
    considerable.
    
    The root of the problem appears to be related to the FTDI low latency
    setting. On Windows and Mac OS X systems, the default setting for the
    latency is 16ms, while Linux defaults to a low latency setting of only
    1ms. This higher latency on Windows and Mac automatically introduces a
    small delay while reading the packet, and that probably happens to be
    just enough to make the transfer succeed without any problems. But on
    Linux, due to the low latency setting, the next request is send almost
    immediately, and that causes the transfer to fail. I suspect the dive
    computer may still be busy with the previous request and needs a bit
    more time before it's ready to accept a new request.
    
    To mitigate this problem, we introduce a adaptive inter packet delay.
    Initially this adaptive delay is set to zero. This is to make sure we
    don't affect those systems that don't need a delay at all. Now, every
    time a packet fails, that's an indication the inter packet delay is too
    small, and we slightly increase the value. After a few attempts we'll
    automatically reach the minimal required value. To avoid that the delay
    grows out of control in the case of serious trouble, it's limited at
    16ms.
    
    Note that the fixed 100ms delay before retrying a failed packet remains
    in place. That's on purpose, to make sure the next attempt will always
    be successful, regardless of whether the adaptive delay has already
    reached its minimal value or not.

commit bfeab10515b0d20ae6916521659339af305f9f36
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 25 19:44:05 2014 +0100

    Add support for modifying the receive latency.
    
    Currently this isn't used or needed anywhere, but the research has been
    done, and it would be silly to drop the knowledge. We may need it in the
    future.

commit ede94693167a9d179d8022bb1d5989a409f254b9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 17 08:49:04 2014 +0100

    Report the initial gas mix.
    
    The Suunto dive computers record gas change events in the profile data.
    But because there is no gas change event stored on the first sample, the
    application doesn't know which gas mix is in use, until the very first
    gas change event occurs.
    
    For the Suunto HelO2, the index of the initial gas mix is stored in the
    dive header. This is most likely also the case for the other models, but
    I haven't found yet where exactly it is stored. As a temporary solution,
    we simply assume the initial gas mix is the first gas in the list with
    available gas mixes. This should be a reasonable assumption for most
    dives.
    
    Fixes ticket #2

commit d8ccfd928bd41908cd902b2aa9cf4f2437d87446
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 22 07:20:05 2014 +0100

    Cache the gas mix data internally.
    
    The gas mix data is used from multiple functions, and the code to parse
    that data is duplicated in each function. Because this is error prone,
    the code is moved to a single place, and the data cached in the parser.

commit fc008312b5c4ebce0bfceba2a9d754e26dd4a380
Author: Florian Klink <flokli@flokli.de>
Date:   Tue Mar 18 18:32:50 2014 +0100

    Remove trailing whitespaces
    
    Most of them appear in the disclaimers, but some are in the code as
    well.

commit f923ec3889bd4a8766029feafcb5d609c834fddc
Author: Janice McLaughlin <janice@moremobilesoftware.com>
Date:   Fri Mar 14 08:53:48 2014 +0100

    Fix the gas mixes for the Oceanic OCi.
    
    The Oceanic OCi supports 4 gas mixes instead of just 3, and they are
    stored at a different offset.

commit db79a63c0d1a1e9152839dd52a352b1b3e414674
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 13 16:03:47 2014 +0100

    Fix a typo in the format string.

commit 886884ab606def1183d99eca7dec8affefee635e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 12 08:45:44 2014 +0100

    Use higher resolution timestamps on Windows.
    
    The resolution of the GetTickCount function is limited to the resolution
    of the system timer, which is typically in the range of 10 to 16
    milliseconds. This is unsufficient for measuring very short time
    intervals in the milliseconds range. The QueryPerformanceCounter
    function provides much higher resolution timestamps. We already use it
    for the half-duplex workaround.

commit 861b5652e0d42d08126e1c7f05fefa52d8401c88
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 23 13:36:02 2014 +0100

    Add support for parsing gas changes.
    
    Parsing the gas switch events is somewhat complicated, because depending
    on the actual model, they can be stored in different ways.
    
    The table below lists the number of gas mixes (G), tanks (T) and alarm
    bytes (A) supported by each model. Note that only the representative
    model in each group is listed.
    
      Model         | G | T | A
      ==============|===|===|===
      Pro           | 1 | 0 | 1
      Com           | 1 | 1 | 1
      Tec           | 3 | 3 | 1
      Aladin Tec    | 1 | 0 | 2
      Aladin Tec 2G | 3 | 0 | 2
      Galileo       | 3 | 3 | 3
    
    Models without support for multiple gasmixes only need to set the
    initial gas mix correctly. Models with support for one or more tank
    pressure sensors can link the gas switches to the tank switches. Models
    with at least two alarm bytes can store a gas switch event in the second
    alarm byte.
    
    As can be observed from the table, some models can use several different
    methods to store the gas switches. The current implementation supports
    all of them. In the case of a conflict, the last used method always
    takes precedence. That's simply due to the fact that each method just
    sets the gasmix index, and only the final value is used. If this
    approach turns out to produce wrong results, it can always be fixed
    later.
    
    The initial gasmix is always assumed to be the first configured gasmix.

commit 68f97e907a036dc207058b83d46e4cedde3ddf0d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 22 22:19:28 2013 +0200

    Use only one byte for the oxygen percentage.
    
    One byte is already more than sufficient to store an oxygen percentage.
    Using two bytes doesn't cause any problems for some models, because the
    upper byte is always zero, but for other models that's not the case.
    Most likely this upper byte is used to store something else.

commit 48661ce7a8a203729dc1761fe98d551b273412b0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 22 21:35:56 2013 +0200

    Fix the gasmix offset for the Aladin Tec 2G.

commit b9e8fdcb529ef429c41dc6ea877d40953b271454
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 21 20:56:15 2013 +0200

    Use the same tables for the Uwatec Smart Tec and Z.
    
    Internal, these two models use exactly the same data format. For those
    features which are only available on one of the models, the
    corresponding data fields are set to their unused values. For example,
    the Smart Tec supports up to three gasmixes, while the Smart Z supports
    only one gasmix. But although the Smart Z has storage reserved for up to
    three gas mixes, only the first one is ever used.

commit 3536086015ac07b4104d2d0aee7ca3ee067bd8a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 19 21:48:00 2013 +0200

    Check the buffer size before using the data.
    
    For the Galileo Trimix, the header length isn't fixed. The actual length
    depends on whether the dive has the trimix setting enabled or not.
    Because at this point we're still trying to determine the length of the
    header, it hasn't been checked yet and an extra check is necessary.

commit 8da80ea0a22f31079d0fca4de642c1ab77a76136
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Oct 17 19:03:12 2013 +0200

    Store the pointers to the tables in the device handle.
    
    Because for selecting the correct header and sample tables (and
    associated data) only the model number is necessary, they can easily be
    stored inside the device handle. The main benefit is less duplicated
    code.

commit 575f2e9016ac9baa2b1b031caa6fe0bc77cdbbee
Author: Anton Lundin <glance@acc.umu.se>
Date:   Thu Mar 6 10:26:27 2014 +0100

    Ignore ostc-fwupdate binary
    
    Signed-off-by: Anton Lundin <glance@acc.umu.se>

commit 3927be9ced68b01b3f16601dd975c4363738aaa6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 6 08:35:15 2014 +0100

    Fix the decoding of the serial number.
    
    The serial number is stored as a plain 32bit integer, and the device
    shows the hexadecimal representation. Because a BCD encoding can only
    represent the lower digits (0-9) of a hexadecimal number, the upper
    digits (A-F) got mangled.
    
    Reported-By: Nick Shore <support@mac-dive.com>

commit 0e11bad6c09e6d17a23db17c1de69f87b771d26f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 6 08:25:15 2014 +0100

    Use relative instead of absolute offests.
    
    Although the settings sample will most likely always be located at the
    start, it's better to be on the safe side and use an offset relative to
    the start of the settings sample.
    
    Reported-By: Nick Shore <support@mac-dive.com>

commit 56e2dec7266e71e725604a4a8bff5e61f3d62259
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 27 15:20:07 2014 +0100

    Add support for configuring the OSTC3 settings.
    
    Starting with firmware v1.23, the OSTC3 settings can be configured
    through the USB interface. There are new commands for reading, writing
    and restoring the settings to their default values.

commit 23658b55c83666163f359f83703418d1dfa43728
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 4 18:58:27 2014 +0100

    Fix a subtle bug in the previous commit.
    
    The workaround in the previous commit has a bug. If after a reset, the
    first entry happens to be located near the end of the TOC, then after a
    few dives, the TOC will overflow and new entries will be written at the
    start of the TOC. But the current algorithm starts scanning the TOC from
    the start and abort the scan as soon as an empty entry is found. Thus if
    there are less than 256 dives present, those entries near the end will
    never be reached.
    
    We now ignore all uninitialized entries, when searching for the most
    recent dive. An explicit safety check is added in case dives are
    unexpectedly interleaved with empty entries.

commit 5d6408ed2fcc031136fe8c2c61be92b096c48e4a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 21 09:17:11 2014 +0100

    Ignore uninitialized header entries
    
    Normally, the OSTC3 will always start writing dives at the first entry
    in the TOC (Table of Contents). Therefore, uninitialized entries can
    only be present after the last dive. However due to a minor firmware
    bug, resetting the logbook erases the TOC but leaves the internal dive
    counter unchanged. The consequence is that the next dive will still be
    stored at the corresponding next TOC entry, while all previous TOC
    entries have been erased.
    
    As a workaround, we simply ignore uninitialized entries, unless we have
    already found at least one dive.

commit db4d35cd3d703c66da9888a7c58ced1d92843ec4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 26 15:20:47 2014 +0100

    Increase the internal log buffer.
    
    With the switch to 4K data packets in the Icon HD backend, the internal
    log buffer is no longer large enough for hexdumps of these data packets.
    A hexdump needs twice the size of the binary data, plus some extra bytes
    for the header and the terminating null byte.

commit 9394773cd25b58ae066c0b367f67a01c632ef273
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 17 10:27:26 2014 +0100

    Increase the packet size again for the Icon HD.
    
    The switch from downloading the entire data with a single large packet
    to multiple smaller 256 byte packets, resulted in a considerable
    performance regression. In one particular case, the difference was a
    factor 6.7 slower!
    
    I performed a small tests (using an Icon HD Net Ready) with 256, 1024
    and 4096 byte packets, and the total time was respectively 21.0, 11.3
    and 6.5 seconds. For a single large packet, the total time is only 5.9
    seconds. Thus the difference with a 4096 byte packet is negligible.

commit 991d0180d8d94e89d256312be129098c2b57e984
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 4 10:38:50 2014 +0100

    Autodetect the model using the version packet.
    
    The model number stored in the main memory isn't always the most
    reliable source of information, because there are devices where the
    model number has not been filled in properly. Instead, we check the
    product name in the version packet against the list with valid names,
    and return the corresponding model number.
    
    As an additional advantage, we no longer depend on the model number
    supplied by the application for selecting the correct memory layout.
    Nevertheless, the model parameter is kept for backwards compatibility.

commit 2049bdb836d446822666de287701c3e1021feaa6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 3 20:55:23 2014 +0100

    Remove an unnecessary function.

commit c718abbe06280c33624a611dd9bf727df79c9525
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 3 13:44:37 2014 +0100

    Use the same packet size for all models.
    
    The recommended packet size is 256 bytes, which matches the maximal
    amount of data that can be read back from the internal memory chip.
    Larger requests are split by the firmware into multiple blocks of
    maximum 256 bytes.
    
    Note that initially, we already used 256 byte packets for the newer
    models, but it seems this was accidentally changed to only 64 bytes in
    commit ad0e187c0c932121efa50763afc02771633cbd61.
    
    The main benefit of this change is a simplification of the code, because
    now there is no longer a difference between the Icon HD and Matrix
    variant of the protocol.

commit c93314026c316a4aa4f4df8002c642882360e7a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 31 15:10:52 2014 +0100

    Use the same standard baudrate for all models.
    
    The Mares Icon HD use a processor with integrated USB circuit, which
    presents itself to the host system as a CDC-ACM device. Since there is
    no external usb-serial chip involved, the baudrate and other serial
    line parameters are irrelevant. By choosing the same settings as the
    later models, which do use an usb-serial chip, we can completely avoid
    the problem of unresponsive devices due to using the wrong baudrate.

commit 2064c3d41050f15bca151ecbf1667733d25eb286
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 19 14:24:52 2014 +0100

    Fix the parsing of the serial number.
    
    The serial number appears to be either a 24 or a 16 bit number, but
    certainly not a 32bit number. Whether it's 24 or 16 bit is hard to
    tell because the data we have available always contains a zero value
    in the third byte.

commit f836e6a0252993f2594a4fbd03b229602725b6f0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 19 14:22:31 2014 +0100

    Add support for the Cressi Giotto.
    
    The communication protocol and memory layout of the Cressi Giotto
    appears to be identical to that of the Leonardo. The first byte seems
    to be the model number, with 0x01 for the Leonardo and 0x04 for the
    Giotto.

commit ba77b0ed24532627659c0d116649244999f12f03
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 15 09:41:28 2014 +0100

    Add support for gas switches.

commit d30b5c65feeb5afcbd2bb6d0facd9ae26eb78d9e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 15 09:02:23 2014 +0100

    Ignore invalid gas mixes.
    
    Gas mixes that have been marked as disabled are stored as the value 0xF0.
    When interpreted as an oxygen percentage, this results in an out of range
    value. Therefore, these gas mixes should simply be ignored.

commit 9f42f6b87d89b9957b266896e75aea3b16d86ab2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 6 20:22:19 2014 +0100

    Release version 0.4.2.

commit 5ddca0b4f7fe315c5df2c5947e873fbf4f532446
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 6 09:36:59 2014 +0100

    Fix a small spelling mistake.

commit 3f7af8c349d0ad47ae0f4749702148fe623c44c1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 16 13:03:29 2013 +0100

    Add support for the Dive Rite NiTek Q.

commit 35003ced81918562c0d73980a672de122583cd38
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 21 21:27:01 2014 +0100

    Add support for the OSTC 2C variant.

commit 040679f76aaedc8e5272455e4b94dad5ab1b2a54
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 22 09:30:46 2013 +0100

    Improve the progress events.
    
    Reading the data packet in multiple smaller chunks greatly improves the
    progress events. Instead of just two events, before and after the
    download, there are now many intermediate events. This change also
    allows to significantly reduce the timeout, from 30 seconds to just one
    second, which avoids blocking for too long in case the device doesn't
    respond at all.

commit 4ae3a4f3ab8b3b8a673b1a8637893b3ca45e8e62
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 21 16:16:45 2013 +0100

    Remove the infinite timeout.
    
    An infinite timeout causes major problems, because if the device doesn't
    respond at all, the read call will block forever. With the eon serial
    line settings (1200 8N2), the total time to read the 2305 byte packet is
    about 21.129 seconds. A timeout of 30 seconds should be plenty of time.

commit 13db9dc8c064ee5bba35dda1fccb6f840b3b19a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 24 21:41:03 2013 +0200

    Update the msvc project file.

commit 3f9f722219a5011355e9fcafbe0732751ae2a57a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 24 21:38:10 2013 +0200

    Always use the ANSI variant of the Windows functions.

commit 7b9bd1880c5eacbf33b55b94463c58b26cfc1544
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 24 21:30:07 2013 +0200

    Add explicit casts for the msvc C++ compiler.

commit 914e740087956a39ef1523ad2097e87f9a815912
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 22 22:53:27 2013 +0100

    Fix the memory layout for the VT4.x.
    
    The VT4.x memory layout appears to be slightly different from the Atom
    3.x memory layout. The logbook ringbuffer does start at offset 0x420
    instead of 0x400.

commit 459b1574b869b23ed4b263518ccdad76162862c4
Author: Tim Wootton <tim@tee-jay.demon.co.uk>
Date:   Fri Oct 25 23:12:07 2013 +0100

    Add iconhd gas change event
    
    Signed-off-by: Tim Wootton <tim@tee-jay.demon.co.uk>

commit 4c94460831e15e0ad53fe697a25ed87e8ec71289
Author: Stephane Bensoussan <stephane.bensoussan@free.fr>
Date:   Sun Oct 20 22:08:56 2013 +0200

    Use only 11 bits for the depth.
    
    When using up to 14 bits for the depth, the resulting values are too
    large in some cases. Most likely the upper bits are used to store
    something else. Even with only 11 bits, the resulting depth range
    (0-204.7m) should still be more than sufficient.

commit c5249861758305cff525a02e0a243f65b0750862
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 4 16:37:24 2013 +0200

    Add support for the Scubapro/Uwatec Meridian.
    
    The Uwatec Meridian protocol is identical to the Uwatec Smart/Galileo
    protocol, except for some additional framing around each data packet,
    and the switch from IrDA to usb-serial communication. For parsing, the
    data format appears to be identical to the Galileo data format.

commit 938839e694d18c20cff51a45fe0ddeccbb56e7b5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 18 20:10:28 2013 +0200

    Add support for the Scubapro XTender 5.
    
    The XTender 5 is identical to the other models in the Zeagle N2iTiON3
    family, and can be added to the list of supported devices without any
    further changes.

commit 734533e4d1cc4dbd4f4e38cc6f33d2b4cef7c5c0
Author: Tim Wootton <tim@tee-jay.demon.co.uk>
Date:   Tue Oct 15 08:46:12 2013 +0100

    Fix units for atmospheric pressure for iconhd type
    
    Was returning mbar, should have been bar.
    
    Signed-off-by: Tim Wootton <tim@tee-jay.demon.co.uk>

commit 2af365cfb704932e5604cda416ef6da831617294
Author: Tim Wootton <tim@tee-jay.demon.co.uk>
Date:   Fri Oct 11 23:04:29 2013 +0100

    Adds support for DC_FIELD_ATMOSPHERIC to the iconhd parser
    
    Signed-off-by: Tim Wootton <tim@tee-jay.demon.co.uk>

commit 8edbceaa4d5b919b8a19db066a4bdef798eefd02
Author: Patrick Valsecchi <patrick@thus.ch>
Date:   Thu Oct 10 13:11:17 2013 +0200

    Use the correct vtable for the Shearwater Petrel.
    
    That was an harmless copy&paste error.
    
    Signed-off-by: Patrick Valsecchi <patrick@thus.ch>

commit 8e0355c354b4d5578be6b1980bc55668f4c317c4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 20 21:58:50 2013 +0200

    Buffer the slip packet before sending.
    
    On Mac OS X, sending the slip packet byte by byte results in an abysmal
    performance. The first byte takes up to 160ms to send, and each next
    byte approximately 250ms. The packet to request a data block is
    typically 7 bytes large, and therefore takes about 1660ms to send.
    Because a dive is transmitted as multiple smaller packets (typically
    144 bytes without protocol overhead), downloading a single dive can
    easily take several seconds.
    
    However, when sending the entire slip packet at once, the time remains
    roughly identical to sending just the first byte. The result is that
    the time for sending a packet reduces significantly, proportional to
    the length of the packet.
    
    Under the hood, the slip packet is now internally buffered, and the
    buffer is send only when the entire packet is complete, or whenever the
    buffer gets full. But in practice, the buffer is large enough to always
    store an entire packet.
    
    In the original bug report, downloading 57 dives took about 40 minutes.
    After applying the patch, that time reduced to only 5 minutes!

commit 6f7495dd3ebeacca18c48506ceb9d94a2bcd3c73
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 17 11:44:33 2013 +0200

    Add support for a new Uwatec Aladin 2G variant.
    
    This new variant has a different model number and has switched to the
    Uwatec Galileo data format.

commit 043fc4166c91572e3b4c0458865de5ffc8f71992
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 8 09:12:13 2013 +0200

    Add support for the Oceanic OCi.
    
    The new Oceanic OCi appears to be almost identical to the already
    supported Oceanic OC1. The most important change is the different
    location for the logbook ringbuffer.

commit b96780ce75b9166375f670f072476ae3cf8c837d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 14 00:16:30 2013 +0200

    Add support for the Sherwood Amphos.

commit 85fd0c524fa100af9022b1c082c1fd48fe19ee71
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 6 22:24:47 2013 +0200

    Fix the memory layout descriptors.
    
    The profile ringbuffer appears to be slightly smaller than expected for
    some models. For the Mares Matrix (and all compatible devices) it ends
    earlier, while for the Icon HD Net Ready it starts later.
    
    This bug resulted in missing dives, because all remaining dives were
    getting dropped once a dive that crossed the ringbuffer boundary was
    reached.

commit 1bfcb8c3c149cf50d9665341e7c20716dda5a5dd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 5 20:40:01 2013 +0200

    Mark the Oceanic Veo 2.0 as a non air integrated model.

commit 1331db75cb6d20b14b27f444599ee1bce25987c8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 3 22:01:12 2013 +0200

    Fix the memory layout for the Atom 3.x and VT4.x.
    
    The logbook ringbuffer appears to start at offset 0x400 instead of
    0x240. Since these ringbuffer boundaries have to be taken taken into
    account only once the ringbuffer has been filled completely, this bug
    affects users with more than 200 dives only. Thus, no surprise it didn't
    get noticed earlier.

commit b35e07b71bfa3e3ff943a82f9629357c40c29270
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 2 23:28:48 2013 +0200

    Add cancellation support to several backends.
    
    Some backends are technically capable of supporting cancellation, but
    still lacked the necessary code to enable it.

commit 888b6ab03fd28d3d063569d1b77baf131e361eea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 2 20:25:29 2013 +0200

    Disable the cancellation callback during shutdown.
    
    Several backends require a shutdown command to be send before closing
    the connection. If such a command gets cancelled, that might result in
    an unclean shutdown. Backends where this is problematic can always
    ignore cancellation requests internally, but it's less error-prone (and
    much easier) to simply disable the cancellation callback for all
    backends, before closing the connection.

commit 22a8bc70ea220e6dac796527db5e5614b17c61c1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 21 10:03:54 2013 +0200

    Add a warning to the firmware update code.

commit 8e1a8c14a3222301fb873ed78008444266951dae
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jul 27 06:54:14 2013 +0200

    Add a small example application.

commit bc89e0a3de4e6a7f34ef9d556082ec59853f51ff
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 26 22:39:56 2013 +0200

    Autodetect the bootloader protocol variant.
    
    When updating the firmware while the OSTC is running in normal mode, the
    V2 protocol should be used. However, the OSTC can also be rebooted from
    the menu or reset using the magnetic switch, and then the V1 protocol
    should be used. The only difference with the V2 protocol is the slower
    baudrate (19200 vs 115200).
    
    True autodetection of the protocol variant is difficult, because the
    bootloader will abort the firmware update when not receiving a 0xC1
    byte. But we can still take advantage of the fact that the normal
    firmware does ignore any 0xC1 bytes sent at the wrong baudrate, and
    probe with the V1 protocol first. If the bootloader is already running,
    it will respond immediately and we're done. If the normal firmware is
    still running, it won't respond and the probing with the V1 protocol
    will fail. If we then switch to the V2 protocol, the firmware update
    will continue as before.
    
    The result is a firmware updater which supports both bootloader
    protocols without requiring any manual configuration.

commit 14286e823664c8b8894be51bc2f18d0dd7727184
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 14 21:34:36 2013 +0100

    Add support for updating the HW OSTC firmware.
    
    Only the bootloader V2 protocol is supported for now.

commit 222ba811574b7cc9166995deef42a52b9cc26c24
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 14 20:02:17 2013 +0100

    Add a parser for Intel HEX files.

commit 37cb54c37680489efdd902ccdaa63e8291765be5
Author: Alexander Neumann <alexander@bumpern.de>
Date:   Sun Aug 11 22:56:03 2013 +0200

    Add Mares Puck 2 dive computer
    
    This dive computer has the same enclosure as the Mares Puck, but the
    wire protocol is that of the Puck Pro. The original software identifies
    it as a "Mares Puck 2", and the handshake string also contains the
    sequence "PUCK 2", so this string is used to identify the device.

commit 5f8da384e63536c418743d833d7f9f10c8b363db
Author: Michael Andreen <harv@ruin.nu>
Date:   Mon Aug 5 16:03:59 2013 +0200

    Identify event 0x07 on Suunto d9-style computers as Below Floor.
    
    This event is on when accumulating deco time. Once you reach the floor
    deco time will start decreasing and the event will stop. Going below the
    floor again will re-activate the event.
    
    Signed-off-by: Michael Andreen <harv@ruin.nu>

commit 456365366c80c9c0fcd52cf82a33022b5a2ca29f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 22 22:31:10 2013 +0200

    Decode the IrDA device address as little endian.
    
    This is only a cosmetic change, to make the IrDA device address on
    Windows consistent with the address Linux. There is no functional
    difference because the address is always serialized and deserialized
    internally, and applications shouldn't care about the actual number.
    
    Anyway, the difference in endianness is easy to notice because the
    Uwatec Smart family of devices use the serial number as the IrDA device
    address. On Linux, the address was identical to the serial number, while
    on Windows the byte order was reversed.

commit 3d82c5f9cdd0554761948e4d5b43a8917f1a43fc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 21 22:56:15 2013 +0200

    Add logging to the IrDA communication.

commit 9ce8888e37fa6e2ce7b49e38afda51ae19cb3fa1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 21 22:15:43 2013 +0200

    Log the device name of the serial port.

commit d44053a99435fb9fc1f408fb3f1629a54c938afc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 6 11:26:27 2013 +0100

    Add internal support for enumerating serial ports.
    
    For the time being, the serial port enumeration code is of very limited
    use. It's not used anywhere in the library, and as an internal api it's
    also not available to applications. It serves mainly as a reference
    implementation for future use.

commit 622363dca80c9aba7744a7659eb08daa8d8d93d1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jul 6 07:20:53 2013 +0200

    Add partial support for the Aeris XR-1 NX.
    
    The Aeris XR-1 NX has very limited memory and doesn't have a
    logbook and profile ringbuffer. Hence downloading dives isn't
    really supported, but even this limited amount of data might be
    useful for someone.

commit 5c16b28fb9437135f3d7f49c5b584cb220be3bbd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 16 08:46:49 2013 +0200

    Use only 12 bits for the temperature.
    
    When using all 16 bits for the temperature, the resulting values are
    clearly wrong in some cases. Most likely the upper 4 bits are used to
    store something else. Even with only 12 bits, the resulting temperature
    range (0-409.5°C) should still be more than sufficient.

commit b4250ef74db39262e79ba8daed6fa38c94941145
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 1 21:44:05 2013 +0200

    Post release version bump to 0.4.2.

commit 2d3e7078394f128d08b676e3d59e0f9f3e02963e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 1 21:35:38 2013 +0200

    Release version 0.4.1.

commit bed4d19acacdaba50a2c4d80f1c827aad0c406a9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 18 22:17:38 2013 +0200

    Add support for the new bailout event.
    
    The new bailout event is reported to the application as a normal gas
    change event.

commit b1574848b2c3ffcf7f0a8080c853453f5750ce2c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 17 22:09:28 2013 +0200

    Interpret the 7th bit of the event byte correctly.
    
    In the OSTC3 data format, the 7th bit of the event byte is used to
    indicate whether another event byte is present or not. For the OSTC2,
    this 7th bit remained unused, and I assumed it would eventually get used
    in the same way as the OSTC3 does. But that assumption turns out to be
    wrong. Starting with firmware v2.66 the 7th bit is used for a new
    bailout event.
    
    This patch leaves the existing logic intact, but except for the OSTC3
    format (version 0x23), the maximum number of events bytes is now limited
    to just one byte.

commit 6ad8d61253fa4e69e032df8367befe48b83ad9aa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 15 07:58:59 2013 +0200

    Fix the date/time for the Oceanic Geo 2.0.

commit d7c59dff58a91096a34bbd7e31d17ab935d55fbb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 25 21:50:16 2013 +0200

    Adjust the length based on the firmware version.
    
    The OSTC 3 dataformat does contain the profile length twice: once in the
    main 256 byte header, and again in the small profile header. However due
    to a firmware bug, both values are not identical. The value in the main
    header is wrong and 3 bytes larger than the value in the small profile
    header. This bug was fixed in firmware version 0.93.
    
    Unfortunately we rely on the length in the main header to calculate the
    number of bytes to read when downloading the dive. The consequence is
    that for all dives recorded with firmware 0.93 or later, the length is
    calculated incorrectly, and the download fails. Luckily the firmware
    version is stored in the main header too, and we can adjust the length
    calculation accordingly.

commit 9b65159a57ff63c09dfeff83bb9b258b6d68864b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 23 14:17:41 2013 +0200

    Mark the dc_datetime_mktime parameter as const.
    
    Unlike the corresponding mktime C library function, the libdivecomputer
    function will never modify its argument. By marking the parameter as
    const this is made more explicit.

commit 890f5f0b5beee1839c83200675b9519e19f72456
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 16 20:16:03 2013 +0200

    Fix the temperature for the Aeris Atmos AI 2.
    
    The temperature sign bit is reversed for this model.

commit d8bc4910b79cd4113fedcb2ee507d17bfa184601
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 16 19:39:24 2013 +0200

    Post release version bump to 0.4.1.

commit 3c8ea2c33ce2747cf7308450af7d14dac5bb52c9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 13 23:54:14 2013 +0200

    Post release version bump to 0.5.0.

commit bdd8e06786806bbc2dfa3b2628b7945b3ce25e21
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 13 23:47:00 2013 +0200

    Release version 0.4.0.

commit 8cbfacc3ac50b3bee026a894c55edddeac6cd091
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 12 23:32:22 2013 +0200

    Add a devinfo event.
    
    The firmware version and serial number are stored in the final block
    of each dive. That makes it very tricky to support the devinfo event
    correctly. For an efficient implementation of the fingerprint feature,
    the devinfo event should be emitted before downloading the manifests
    or the dives. Fortunately it turns out it is actually possible to
    retrieve the firmware version and serial number independently, using
    the special identifier command.

commit 2934c6a618cc78b28ac863e352e17dd93621d5c2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 12 23:19:51 2013 +0200

    Shutdown the connection cleanly.
    
    A shutdown command should be send to the device, before the connection
    is actually closed. In the absence of this command, the device will
    display an error, even if the data transfer itself was successful!

commit 1a3c919a8255cc35d05d3345a4e8531c38a583ca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 11 23:00:32 2013 +0200

    Fix temperature and tank pressure for the Tusa Element II.
    
    The Tusa Element II is a non air integrated model, and the temperature
    is stored at a different location.

commit 1572a91f62befffaa1f1af83966ca02eba8bc149
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 9 12:59:15 2013 +0200

    Add support for yet another Oceanic OC1 variant.
    
    The only difference with the two other Oceanic OC1 variants is the new
    model number. I have absolutely no idea what's the purpose of such a
    silly change.

commit 50fc64ac59dfb1df3adacda7b9d6321d2fe8e9c0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 9 22:32:04 2013 +0200

    Limit the memory capacity to 256K.
    
    The Mares Matrix, Puck Pro and Nemo Wide 2 have only 256K of memory,
    which is 4 times less compared to the Icon HD. However for some unknown
    reason, trying to download 1024K succeeds, and these devices just
    repeat the same data 4 times. That's why we never noticed the
    difference in memory capacity before.

commit c195404920b32f177c8c2199b628bf71d22e9f97
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 18 08:19:05 2013 +0200

    Add support for the Suunto DX.
    
    The Suunto DX has support for 8 gas mixes (OC) and 3 diluents (CC).
    Because it's still unknown how rebreather dives are stored, we simply
    return all 11 gas mixes. For the rest, the DX data format is very
    similar to that of the existing Suunto models, with only a few
    different offsets here and there.

commit 8f3eb48bfb5e74d278a551745dcb43a4cb4d5be3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 18 08:11:51 2013 +0200

    Prevent an infinite loop.
    
    When the number of parameters is zero, there are no sample values, and
    the offset variable is never increased. The result is an infinite loop.
    In practice this shouldn't happen because there should always be at
    least one sample value (e.g. depth). But if a new data format is
    available, which is not yet supported by the parser, we might be trying
    to interpret the wrong byte.

commit ad0e187c0c932121efa50763afc02771633cbd61
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 9 22:20:33 2013 +0200

    Replace the hardcoded constants with a layout descriptor.
    
    A side effect is that the mares_iconhd_extract_dives function now
    requires a valid device handle. This shouldn't cause any real problems
    because this function will likely become private some day.

commit 51d6074bfedfbcdc69ee55d74d321e47bbd59e9e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 9 11:09:00 2013 +0200

    Use a new xml element for the gaschange events.
    
    The new xml element makes the the gaschange events stand out more
    against the other less important events. At the same time it also
    demonstrates the decoding of the packed oxygen and helium percentages.

commit b5f3e30de482eb17d86139958ee108e1c3424801
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 9 10:27:15 2013 +0200

    Add a root element to the xml output.
    
    Without the root element the output isn't valid xml. Although the
    output is supposed to provide a human readable representation for
    internal use only, and thus never really intended for processing by
    third-party applications, it doesn't hurt to turn it into valid xml
    either.

commit c550685bfc264e441947f405e75aafcfe6f6caeb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 8 18:51:33 2013 +0200

    Update the msvc project file.

commit 17d46813d827a5d18ebaa811d315e660b6a48a9e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 8 16:56:04 2013 +0200

    Include the public header in the implementation file.
    
    In the public header files, all symbols are marked extern C. When using
    a C compiler, there is usually no problem if the header isn't included
    in the C file. But the msvc build system uses the C++ compiler (due to
    the use of some C99 features not supported by the msvc C compiler).

commit 780440dffea8590ececd1a38dd5c413cbe0c6d49
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 7 21:24:17 2013 +0200

    Exclude device descriptors for unsupported devices.
    
    Currently all device descriptors are included, regardless of whether
    the device is actually supported by the library. If IrDA or USB support
    is unavailable, a dummy backend is build which will always fail with
    DC_STATUS_UNSUPPORTED. Thus there is no point in listing those devices
    as being supported. Doing so will only confuse end-users.

commit 5fdb1e9c82c0c4ebcf6fcc1e93244c68115cb510
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 7 21:02:36 2013 +0200

    Update the README with the new domain name.

commit b36ed311c5c6782eb35d6218d0d537e849765bc4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 4 14:34:00 2013 +0200

    Add support for the Heinrichs Weikamp OSTC3.
    
    Although the communication protocol of the OSTC3 is nearly identical to
    that of the Frog, the different size parameters make it hard to share
    the code easily. On top of that, if we ever implement native bluetooth
    communication support, we'll need a completely separate backend anyway.
    Therefore the Frog backend is simply duplicated, with a few OSTC3
    specific changes applied here and there.
    
    The existing ostc parser is upgraded to support the new OSTC3 data
    format.

commit 86bdf0fbb4b6502ef8eef31e14307e98654ba01a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 3 23:56:12 2013 +0200

    Fix the gas change events for the Heinrichs Weikamp Frog.
    
    The Frog stores the index of the initial gas mix at the same location
    as the OSTC, but the gas mix percentages are at a different offset, and
    the number of gas mixes is different too. Parsing all the gas mixes in
    advance makes the code easier to read and more future proof.

commit c1893e9b0c6996005b84068f5cfa49bc9adf0178
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 3 23:48:57 2013 +0200

    Replace hardcoded constants with a layout descriptor.
    
    With the layout descriptors, most hardcoded constants are now in a
    central place, which will make it easier to add support for new data
    format variants.

commit 2203163a3aa02fcc108d29be3ea528ac3eb29c24
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 1 07:38:18 2013 +0200

    Move duplicated code to a common function.

commit 3ce237eee40910bedda86bb677a12ff97b6102ab
Author: Olivier Bussier <olivier@bussier.fr>
Date:   Wed May 1 22:54:34 2013 +0200

    Fix the parsing of the gas mixes.
    
    If the gas model flag is set to air, the individual gas mix definitions
    are ignored, and a single mix with air is returned instead. For non-air
    dives, only the gas mixes marked as active are returned.

commit c429947f254a071a3855f3f4c57553dcb8ecc008
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 29 20:56:52 2013 +0200

    Add a devinfo event containing the serial number.

commit 9297e390a8999897335ec7dea090262059936a28
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 29 20:47:26 2013 +0200

    Flush the serial buffers after opening the port.
    
    Sometimes there are garbage bytes present after opening the serial
    port, which causes the communication to fail. Flushing the buffers
    after a small delay is all it takes to get rid of those bytes.

commit 20f813d5bc6a5d06c9407dc96c3cbc17e0d6af56
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 23 17:12:59 2013 +0200

    Fix a potential NULL pointer dereference.

commit f46e650a631f48b8909026768084772c4ceffd40
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 22 06:57:07 2013 +0200

    Add support for the Genesis React Pro White
    
    The React Pro White appears to be a newer variant of the React Pro. For
    the communication it uses the newer atom2 protocol, but the data format
    remains (almost) the same as the older React Pro.

commit b185c1f62a02a39fb16674ab2a4f4a8bfb2c220b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 20 08:09:55 2013 +0200

    Fix the temperature and year for the Genesis React Pro.

commit 8a0efe2bfb0bd32a6ea38a4c9a6373f3fb287f3a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 20 07:48:10 2013 +0200

    Fix the sample rate for the Genesis React Pro.
    
    This model doesn't support a 2 second sample rate. It appears the
    possible sample rate values have been shifted by one to map the value
    zero to a 15 second sample rate.
    
    To avoid any trouble with possible out of range values, the index is
    shifted in a circular way.

commit c7cc955b29c3f7a8627a9f8940f733c8ea23eee1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 20 07:45:09 2013 +0200

    Use symbolic constants for the model numbers.

commit 59b17858f4f75f7a4d9aca5274890ed74596196c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 23 20:17:33 2013 +0200

    Append the final block to each dive.
    
    There are two good reasons for this change. First of all, it makes the
    Predator data format more consistent with the Petrel data format, which
    also has the final block appended to each dive. But even more important
    is that we might actually need the information stored in the final block
    someday.
    
    The final block contains important information about the device, such as
    the firmware and logbook version. Right now this information is simply
    lost after the download. But if the data format ever changes to support
    some new feature, we'll likely need that information to autodetect the
    correct format.
    
    Unfortunately this also changes the dive format in a non-backwards
    compatible way. However, to minimize the inconvenience, the legacy
    format (without the extra final block) remains supported in the parser.

commit 7529ab8d5b7ce78598babb928c2e33d3819f4641
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 12 22:25:30 2013 +0100

    Add additional descriptors for Uwatec devices.

commit 2e5faae9dab051269d77ccb4f53b039bc63a732b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 16 11:46:06 2013 +0200

    Avoid unnecessary large memory allocations.
    
    Because the size of a dive isn't known in advance, we use the worst case
    value of 0xFFFFFF (or nearly 16MB). However in practice, the real size
    is many orders of magnitude smaller, even after the decompression.
    Instead of pre-allocating a huge memory buffer, we now start with a much
    smaller one, and increase when necessary.
    
    For the predator and petrel manifests, where the size is known in
    advance, we continue to pre-allocate the exact amount of memory as
    before.

commit 4b541d124fa0b5aa015af4589923163a872b49eb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 9 23:32:23 2013 +0200

    Add support for the native Shearwater Petrel protocol.
    
    The Petrel (with updated firmware) supports an enhanced communication
    protocol, which is more efficient and powerfull than the legacy Predator
    compatibility mode. The new protocol uses data compression for faster
    transfers and supports the ability to selectively download individual
    dives. Last but not least, the new protocol isn't limited to the last
    128kB of logbook data, but can access the full logbook capacity (16MB).

commit c4d3356b6ec5e824bdac117469dc220eb53aa77d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 9 23:16:01 2013 +0200

    Add support for compressed data packets.
    
    The new Petrel protocol uses a simple data compression scheme to reduce
    the transfer times. The data is broken up into blocks of 32 bytes each.
    Each block except the first is XOR'ed with the previous block, creating
    large runs of zeros due to the similarity of the data. The zeros are
    then run-length encoded (RLE) to save space.

commit 6f3de69f0d557d13abf39cfc141c1ed357dee741
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 9 22:57:08 2013 +0200

    Move the low-level communication to a common file.
    
    This is done in preparation for the implementation of the new Petrel
    protocol, which shares the low level communication with the existing
    Predator protocol.

commit 389933400f2005f69e0aa44cad387520c11406c4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 26 16:19:10 2013 +0100

    Replace hardcoded constants with parameters.

commit d4a8f2eb40ecde00c8c771130ceed40de957817a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 16 12:32:03 2013 +0200

    Add support for retrieving the transport type.
    
    With the new interface, an application can easily retrieve the
    underlying transport type from the device descriptors and present a
    custom user interface element to the end-user for supplying transport
    specific parameters. For example the serial port for devices using
    serial communcication.
    
    For devices using a usb-serial chipset or the bluetooth Serial Port
    Profile (SPP/rfcomm), the transport type is DC_TRANSPORT_SERIAL, because
    internally the serial emulation layer is used for the communication.

commit 6419e189a4bfa108b7bb0e5e92ca69d547af25b1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 3 10:24:39 2013 +0100

    Add a single isinstance function per object type.
    
    Currently, each backend has it's own function to verify whether the
    object vtable pointer is the expected one. All these functions can be
    removed in favor of a single isintance function in the base class,
    which takes the expected vtable pointer as a parameter.
    
    Functions which are called through the vtable, don't need to verify the
    vtable pointer, and those checks are removed.

commit 007479fc92ab65cea20d71488d82edc8e9790dd8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 27 12:28:20 2012 +0100

    Rename the backend structure to vtable.
    
    The term "backend" can be confusing because it can refer to both the
    virtual function table and the device/parser backends. The use of the
    term "vtable" avoids this.

commit 13950c0ca1783c4a958f80c96c35678c9dd4a21f
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sun Mar 24 19:44:10 2013 -0700

    Fix time conversion for Shearwater computers
    
    The time read from the Shearwater is already in localtime.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit a9b7edfde30872ca21ee046f7c21ce04a3e04b25
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 19 21:59:40 2013 +0100

    Add support for the Mares Nemo Steel and Titanium.
    
    These two models are simply a variant of the normal Mares Nemo with a
    different material on the outside.

commit 4adac6f5c96c0bf811cc5c3d6617c68fb9a17c06
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 18 09:24:28 2013 +0100

    Add support for the Oceanic Pro Plus 3.

commit 276be51a652848beae88112f2089ba693e6b04c3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 16 10:00:16 2013 +0100

    Fix the decoding of negative temperatures.
    
    Because temperatures can be negative, we should interpret the stored
    value as a signed integer, even for the absolute values.

commit 7323ba0f2d354e3abe6ad144ce36d4ea04de9b6b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 10 20:52:24 2013 +0100

    Re-order the decostop array to match the enum values.
    
    The enum values have been re-ordered a while ago, but the array was not
    updated to reflect those changes.

commit 9fb5e1f566fde7bf2a7409d82e3d5bddba7c2d0b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Mar 3 23:45:27 2013 +0100

    Add support for the Aeris Atmos 2.

commit 63d0f4175820b82dc69b794eedd68f5e1a8d7aca
Author: Cristian Ionescu-Idbohrn <cristian.ionescu-idbohrn@axis.com>
Date:   Wed Feb 27 10:33:09 2013 +0100

    Add a gitignore file.
    
    Signed-off-by: Cristian Ionescu-Idbohrn <cristian.ionescu-idbohrn@axis.com>

commit 5bea3156fd9acbbc24e2e16f6fba09d71b18671b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 7 13:11:18 2013 +0100

    Add support for the Aeris Elite.

commit 5d28a329129734c3cf930417bace35f1d584f811
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 6 13:54:52 2013 +0100

    Post release version bump to 0.3.1.

commit 653a3409d734a9ed6118e2549149fb4ee616997c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 6 13:53:33 2013 +0100

    Post release version bump to 0.4.0.

commit 82fadd89bfe16918904d47558dcea2bb1afcfbc1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 6 13:52:03 2013 +0100

    Release version 0.3.0.

commit 0b20855d566572eaec47e8e4be0cc2c304610816
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 15 09:49:46 2013 +0100

    Add support for the Cressi Leonardo.
    
    This is only a preliminary version. There is certainly some room for
    improvement, but the basic functionality is already in place. That
    should be sufficient for daily use, and possibles issues can always be
    fixed when discovered.

commit 1e4d051b1e20d43d4bfb876e04712b68801b6cc6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 15 09:34:24 2013 +0100

    Move the bin/hex conversion functions to a common file.

commit 8fa25ea9f3dec118d79f315d670425bb0e729b94
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Feb 3 08:08:26 2013 +0100

    Fix the fingerprint offset for the Suunto D4i, D6i and D9tx.
    
    When support for these models was introduced, I fixed the date/time
    parsing, but forgot about the fingerprint offset.

commit a4d46b24779cb02df7f75e1da7831fb46d5254eb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 2 23:30:41 2013 +0100

    Add support for the new D6i firmware.
    
    After the new firmware upgrade, up to three gas mixes are available
    instead of only two. This causes the parsing to fail because there is
    now an extra 6 byte gasmix block in the header.
    
    Unfortunately, we can't rely on the firmware version to detect whether
    this extra gasmix is present or not. In theory the dive computer can
    contain dives in both the old and the new format. Because the firmware
    version is a property of the device, and not stored inside each dive,
    using the firmware version would either cause the old or the new dives
    to fail parsing. This appears to be the approach DM4 is using.
    
    According to some sources on the internet, the logbook gets erased
    during the firmware update. However, according to the memory dumps I
    received, that appears to be incorrect. The old dives are still
    present, and it seems it's only DM4 that fails to download them.
    
    So we need an alternative solution. After a detailed analysis of all
    the Suunto dives at my disposal, I noticed something interesting. The
    first 5 bytes of each dive are almost static. There are only 5
    different variations:
    
    0061906216
    0061A06216
    0062909118
    0062C07118
    0063C07118
    
    The interpretation of these bytes is currently unknown, but the second
    byte might be some kind of data format version. Each model always has
    the same value here, and for the D6i it changes after the firmware
    update:
    
    0x61: D4, D6, D9, Cobra 2, Cobra3, Vyper 2, Vyper Air
    0x62: D4i, D6i (old firmware), D9tx, HelO2
    0x63: D6i (new firmware)
    
    This can't be coincidence, so we use this byte to detect the presence
    of the extra gasmix.

commit 038c6037190539283beddfab132a27d167c4d969
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 27 15:54:50 2013 +0100

    Simplify parsing the variable size gasmix section.
    
    The HelO2, D4i, D6i and D9tx all use the same data format for the gas
    mixes. The only difference is the number of gas mixes and the initial
    byte offset. With this knowledge, we can easily use the same code for
    all models. An additional advantage is that because the profile
    configuration data is stored immediately after the gasmix section, we
    can also replace the hardcoded offset with a simple calculation.

commit 7c2d1e9ec95f057c302a90a674d338872ee45195
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 27 15:52:41 2013 +0100

    Use absolute byte offsets for the Suunto HelO2.
    
    Absolute byte offsets are a lot more convenient when using the code as
    the reference documentation for interpreting the raw binary data.

commit 90e20df936fafd19e3694a3d1a886f61be010266
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 27 14:47:41 2013 +0100

    Remove the obsolete SKIP macro.
    
    This macro was used to compensate for the fact that the 4 bytes at the
    start of each dive, containing the previous and next dive pointers, are
    stripped. With the SKIP macro the byte offset remained the same as in
    the documentation. Nowadays, this compatibility isn't necessary anymore
    and it only makes interpreting the raw binary data more difficult.

commit 1f8cefdedd1ef80e7faf908a89c2b1ae05c8e445
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 29 19:27:54 2013 +0100

    Add support for the Seemann XP5.

commit d414da70a42afca0096e0402a426c4ac8d2a2881
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 15 09:14:56 2013 +0100

    Add support for a second Aeris Elite T3 variant.
    
    This second variant only seems to differ from the first variant in the
    different model code and the version string.

commit 154fc82da1f249674cd1e3dd55b8aa0650eb7b2d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 21 22:55:28 2013 +0100

    Fix the tank pressure decoding for the Hollis DG03.

commit 7669157a6bdd520bbe4be2391383205c53e82644
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 11 13:03:59 2013 +0100

    Fix the unit conversion for the max depth.
    
    The max depth is stored in imperial units (feet), and should be
    converted into metric units (meter). But for some reason this unit
    conversion was omitted.

commit 173390ed0556b039a1d5cefa59160a7d1d1ba46a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 6 08:05:02 2013 +0100

    Decode the serial number as a 32 bit number.
    
    Apparantly there are also two different type of serial numbers present,
    and their interpretation depends on the application. The Windows Dive
    Organizer application shows both a serial number (byte offset 0x04) and
    a warranty number (byte offset 0x0C). However, the Mac OS X Divers'
    Diary application shows the number at byte offset 0x0C as the serial
    number. Very confusing. For now, we just stick to the number at byte
    offset 0x0C, because that's the number that is shown by the device
    itself.

commit dbb6b1aa2116ab654de5f6e7289439f1851cc964
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 12 22:17:38 2013 +0100

    Fix the decoding of the Suunto serial numbers.
    
    The serial numbers were not decoded at all. The raw bytes where simply
    converted into an arbitrary 32 bit integer. Now the serial number
    matches the real serial number as shown by the device.

commit 98540970922cd8623aa7973546148f2d0459268f
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sun Dec 30 21:34:17 2012 -0800

    Deco and ndl support for the Atomic Aquatics Cobalt
    
    The Cobalt tracks only the NDL time in the samples. There are however
    two indications when the dive changes into a decompression dive, but
    they don't always occur at the same time and may or may not appear in
    the same sample. The first indication is that the NDL time goes to zero
    and the other is the first occurrence of the "deco schedule computed"
    bit (0x02) in the violation byte of the sample.
    
    As soon as the NDL time goes to zero, an attempt is made to generate a
    deco schedule. Depending upon the algorithm used, a schedule may or may
    not have any stops, even though the NDL time is zero. If the schedule
    does generate deco stops, the deco schedule computed bit is set in the
    violation byte of the sample. This bit is set each time a non-zero
    schedule is computed. But because this bit is immediately cleared after
    the sample has been stored, and only set again at the completion of the
    next schedule computation, not every sample will have this bit set.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 1e77d923073dfa50a8ae227358a8f479b654518f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 6 09:29:33 2013 +0100

    Add support for the Mares Puck Pro.

commit 59bfb0f3189b14ae858650b851539d59e3fefe86
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 5 21:08:08 2013 +0100

    Add support for the Mares Matrix.
    
    The Matrix uses the same communication protocol as the Nemo Wide 2,
    except that the sending the request packets with just a single write
    operation doesn't seem to work. That's very surprising because it
    caused no problems for the Nemo Wide 2 or the Icon HD!
    
    The first two bytes of each request packet are probably some kind of
    command type. These two bytes are answerred immediately with an ACK
    byte (0xAA). Once this ACK byte has been received, the payload of the
    command (if any) can be sent, and finally the response packet can be
    received.
    
    I suspect that when trying to send the entire command at once, the
    device somehow doesn't receive the payload bytes correctly. Maybe it's
    still busy processing those first two bytes, which causes the remainder
    of the packet to get dropped? That might explain why the version
    commands is not affected, because it doesn't have any payload bytes!

commit 380eaadf833532949de4784155855ac095de604e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 5 10:12:04 2013 +0100

    Hardcode the delay between packets.
    
    The application shouldn't have to deal with the delay between packets.
    If the default value isn't good enough, that should be fixed internally
    and not on the application side.

commit af1ca93fe8ebae7196c3b0a0f75bc347e2097729
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 2 16:57:28 2013 +0100

    Add support for trimix gas changes.
    
    The second gas change event (type 0x06) contains both the oxygen and
    helium percentages. These are now reported correctly with the new
    GASCHANGE2 event.

commit 89d731bc699b108df6deb61292caf64f4f482824
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Jan 1 08:14:22 2013 -0800

    Add deco sample support for Suunto d9 based devices
    
    The D9 family has begin and end of the deco event and we can therefore
    convert this to the deco sample. For compatibility with existing software
    we keep the events around.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit cab84fa2f80a412360e674023467dff0a618cc60
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 2 15:29:22 2013 +0100

    Re-order the constants in the dc_deco_type_t enum.
    
    The SAFETYSTOP is conceptually somewhere in between the NDL and the
    DECOSTOP, so it makes sense to re-order the constants in the enum to
    reflect this order.

commit 10ae594b1ff094cbc7ee072d27b3468290a89cf1
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sat Dec 29 07:35:50 2012 -0800

    Add gas changes and violation events for Atomic Aquatics Cobalt
    
    These are based on the documentation we have and have been tested and
    verified against actual dive data (with the exception of the pO2 and
    ascent speed violations).
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 1079bdc0b0dd29bb2ba24dc678741192925891e0
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Dec 28 21:44:29 2012 -0800

    Fix gas handling for OSTC
    
    Two issues:
    - the OSTC counts its gases 1-based, not 0-based
    - dives don't always start with the first gas. Simply create a gas change
    event right after the first time sample that informs the application what
    the first gas mix is
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 0e0168f4d4e3f48c972a6b5bf37826e08a57007f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 28 07:06:29 2012 +0100

    Log the date/time and version in the example applications.

commit f6df407699c60e60ff39f34b44bbcf76a8300c87
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 27 22:12:33 2012 +0100

    Reverse the order of the include directories.
    
    The version.h header file is generated by autoconf and therefore
    located in the build directory and not the source directory. If
    building out-of-tree, and a version.h header file is accidentally
    present in the source tree, the wrong file will be picked up.
    
    By reversing the order of the include directories, the build directory
    is searched first, and the correct header file will be used.

commit e2a7d8bb4565c061c853fbc9f73ffe5c28e6d060
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 27 16:23:42 2012 +0100

    Include the git commit SHA1 in the version number.
    
    For bug reports it's very convenient to know the exact version. For
    release builds, the standard version triplet (major.minor.micro) is
    more than sufficient, but that's not the case for development builds.
    Due to the post-release version increment, development builds already
    have a version number that is distinct from previous releases, but
    including the git commit SHA1 is even more accurate.
    
    On Windows, the git commit SHA1 is also embedded in the version
    resource.

commit 56b7730773c70a1ad895bbe816106746423118fe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 26 08:11:46 2012 +0100

    Add a new vendor event.
    
    The new vendor event provides a mechanism to deliver auxiliary data,
    which is automatically retrieved during the data transfer, but not
    accessible through the library interface otherwise. Possible examples
    include handshake data and/or device identification data.
    
    This event is mainly intended for diagnostic purposes, in combination
    with the memory dumping support. Very few applications will actually
    need it for anything else.

commit d0b7f2e584301c92679344b65cc1a368cc1ea053
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 26 08:06:14 2012 +0100

    Move the version string to the common device structure.
    
    The version string can be shared by all three backends, which will make
    it easier to use the version data directly from the common code.

commit 633e8423dc337e440cec563426fe0e510571c325
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 23 12:48:49 2012 +0100

    Add a small delay before retrying a packet.
    
    If the first attempt fails, that might indicate the device isn't ready
    yet to service requests. In that case immediately retrying again isn't
    the right solution. Adding a small delay seems to increase the success
    rate, so it's a good idea anyway, regardless of the underlying reason.

commit 14072ff8a643a12a1493fbe7fd46337e37ca49cc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 23 10:03:37 2012 +0100

    Update the msvc project file.

commit b09b74783b8cdef55de23863a2266e86dc95df85
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 23 08:33:20 2012 +0100

    Hardcode the maximum number of retries.
    
    The application shouldn't have to deal with the maximum number of
    retries. If the default value isn't good enough, that should be fixed
    internally and not on the application side.

commit e9036674e0902a46fbccea9dc0e593dc04f8c620
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 22 20:16:44 2012 +0100

    Remove the obsolete timestamp functions.
    
    These timestamp functions offer no real advantage and applications
    should be using the device independent fingerprint feature instead.

commit f8ddf3306d7b846f27cf3355cb288b864e8dd587
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 7 10:28:10 2012 +0100

    Remove calls to the version functions from the examples.
    
    These functions are already called internally, and there is no need to
    call them explicitely in the example applications again.

commit 45e9c08e9217d8267a22cf66eea218ba0ab7db4c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 7 10:25:24 2012 +0100

    Read the version info when opening the connection.
    
    The d9 backend already reads the version info, to autodetect the
    protocol variant. When doing the same in the vyper2 backend, we don't
    have to read the version info again when downloading the dives.

commit fcc07a5f6d71d7f26508f2fa2ab64e5535d70793
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 21 17:11:16 2012 +0100

    Add timestamps to the default log function.
    
    Adding timestamps to the default logging function is very convenient to
    investigate all kinds of timing related issues.

commit 0ae62749391117952d1a85f635ae0ada2649c6e9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 19 11:54:55 2012 +0100

    Simplify the version matching logic.
    
    The hardcoded version strings are now grouped into arrays, according to
    their corresponding layout descriptor. The main advantage of using
    arrays is that new versions strings can now easily be added, without
    having to modify any code.

commit 3d3c3f60398ae9da5f437f38f70c8dd8df4762a7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 15 20:25:16 2012 +0100

    Add support for the Mares Nemo Wide 2.
    
    The Nemo Wide 2 uses the same communication protocol as the Icon HD,
    except for two differences:
    
    The Nemo Wide 2 requires a different baudrate and parity setting.
    Unfortunately it doesn't seem possible to autodetect the correct
    protocol variant at runtime. Attempting to proceed with incorrect
    settings will render the device unresponsive and requires a battery
    reset to recover.Therefore the model code needs to be provided as an
    extra parameter, when opening the connection.
    
    The Nemo Wide 2 also appears to have trouble downloading the entire
    memory with a single request. Therefore the single large request is
    split into many smaller ones. The offical Mares application uses 256
    byte packets, and so do we. The Icon HD keeps using the large packets
    because they are significant faster.
    
    The extra model parameter breaks backwards compatibility!

commit 74b91f279180a068d063c4bc5f213bcba9e53d9d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 5 08:05:49 2012 +0100

    Add support for the Shearwater Petrel.
    
    The Petrel is slightly different from the Predator because the device
    reorders the internal ringbuffer before sending the data. The most
    recent dive is always the first one, and there is no need to search for
    it, like we have to do for the Predator.

commit a046071ad00aeffc6bf0f8470764371e693c8624
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 21 16:56:31 2012 +0100

    Fix a typo in the Sherwood Wisdom 3 model number.

commit 113d2e4706698f7086e5499282ec958aa2de044f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 13 19:47:43 2012 +0100

    Fix a redefinition warning for the ERROR macro.
    
    Apparantly, the windows wingdi.h header file already defines the
    ERROR macro. By defining the NOGDI macro before including the
    windows.h header file, we can prevent the wingdi.h file from being
    included and thus avoid the warning. We don't need that header for
    anything anyway.
    
    Because the libusb header file includes the windows.h file
    explicitly, it needs the same fix.

commit 531e5cb74809d59fb41ff165870ead8de8e8aa23
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 11 22:14:11 2012 +0100

    Skip the size validation for unused divisors.
    
    The recently introduced CNS support caused a regression for older
    firmware versions. If a firmware doesn't support a certain sample
    yet, the corresponding sample divisor and size are both equal to
    zero (the default value for unused bytes). However, because the
    size was always checked, regardless of whether the sample is
    actually present or not, this zero size caused the parsing to fail.
    
    To fix the regression, the size is now only checked when the
    divisor indicates the sample is actually present.

commit f65f808b6c8088e6d6c3704ee8e9854e37f390b8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 12 20:05:00 2012 +0100

    Add support for the Aeris A300 AI.

commit 17efdaf1d81528b499e4124797ec6e677a073c77
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 11 20:26:47 2012 +0100

    Update the example application for the new sample types.
    
    The example application is updated to support the new setpoint,
    ppO2, CNS and decompression samples that have been introduced. The
    NDL event is removed again.

commit 3917ae15b93244d4e00042630cc8d5d44c1e0ffd
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Sun Dec 9 11:51:30 2012 -0800

    Convert decostop / ndl to samples
    
    Having these as events seems less useful since for many dive computers
    there are data with every sample - so it makes much more sense to have
    these as part of the sample.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f2a656246d786494116564a3cd373d26392e13a5
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Fri Dec 7 13:11:39 2012 -0800

    Add support for setpoint, ppO2 and CNS
    
    So far only OSTC and Shearwater Predator are supported. For the OSTC we
    support CNS and setpoint changes in the samples (the current hardware
    doesn't actually support ppO2 sensors and for the older hw that does I
    don't have the correct encoding information).
    
    For the Predator we support only the "average ppO2 during the sample".
    
    The Predator also gives us a CNS value at the end of the dive - I don't
    quite know yet how to deliver that back to the consumer. Possibly as CNS
    value in the very last sample? That would at least be consistent.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit f5b5e4118113649ce74e55655813a8aa14f27c35
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 6 20:08:22 2012 +0100

    Reduce the amount of gaschange events.
    
    Previously, gaschange events were emitted for every single sample.
    With this change, the event is only emitted when the gas mix has
    actually changed.

commit 99fe2c693fb34730c8bdf25acbc7765d64384cfb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 6 20:01:46 2012 +0100

    Support both the OC and CC gas mixes.
    
    The Shearwater Predator has two different sets of gas mixes for OC
    (Open Circuit) and CC (Closed Circuit) mode. Since the dive mode can
    be switched during the dive (e.g. in a bailout scenario), there is no
    easy way to select one of both sets. With this change, both sets are
    returned. It's not a perfect solution, but for CC dives it's already
    an improvement.

commit 500fb1e16b8b80e984325b055f076dc661387ae2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 25 21:19:16 2012 +0200

    Add support for the Shearwater Predator.

commit e7d5afb1e4afcecd8684c189f3d607d2347ed9a5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 13 22:08:32 2012 +0200

    Remove the version function for the Uwatec Smart.
    
    The Uwatec Smart protocol supports reading individual settings. However
    the version functions only reads those three values that we use
    internally (model, serial number and device clock). That's a very
    arbitrary subset and it would be much better to support reading
    specific values. But that's something for later...

commit 985323eefbb1c0621fdbcb55536aa543a5fe714a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 13 19:18:01 2012 +0200

    Move the version function to the device specific api.
    
    The version function requires device specific knowledge to use it (at
    least the required buffer size), it is already called internally when
    necessary, and only a few backends support it. Thus there is no good
    reason to keep it in the high-level public api.

commit 2a9e8c00236e3bbf68a483dd183e99b4f0fd1821
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 13 23:42:39 2012 +0200

    Add some missing size macros.
    
    These size macros are required to use the device specific functions
    correctly and should therfore be exposed in the public api.

commit 550e37d0b5b0496fdcf74b77a0fc76997818ee80
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 10 23:05:49 2012 +0200

    Remove the page, packet and memory size macros from the public api.
    
    These macros are used internally and don't need to be exposed. In some
    cases, the actual values are not even constant, but dependant on the
    model and/or the firmware version.

commit 43a518b1d29d7edaa979a0eca7f687ff36f2e10b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 1 12:58:51 2012 +0100

    Autodetect the three OSTC variants.
    
    The exact OSTC variant can be detected by means of the serial number.
    Each of the three variants is now assigned an artifical model number,
    and included explicitly in the list of supported models.

commit 3502ad39a64ad6ab4d2d7c4aa0c03714f138f93a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 1 12:45:16 2012 +0100

    Check the salinity byte for out of range values.
    
    Apparently some older firmware versions don't support the salinity
    setting. Because unused bytes are initialized with zero, the salinity
    value will be reported as being zero.
    
    To fix this unexpected value, the salinity factor is first checked for
    valid values. If the value is out of range, a DC_STATUS_UNSUPPORTED
    error is returned to indicate the absence of the value.

commit 9c3af57038b18f8bcfab74c8a3f09276330df338
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 1 10:27:33 2012 +0100

    Fix a regression in the depth calculation.
    
    Apparently some older firmware versions don't support the salinity
    setting. Because unused bytes are initialized with zero, the salinity
    adjustment results in a division by zero, which converts all depth
    values to infinity.
    
    To fix this regression, the salinity factor is first checked for valid
    values. If the value is out of range, no salinity adjustment is done,
    and the previous behaviour is retained.

commit d3de4bf9bd4bc82b324aacfe077aeceba11e0817
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 30 07:10:49 2012 +0100

    Update the example application for the new fields.
    
    Update the example application to support the new salinity and
    atmosperic pressure fields. Because the new fields are not supported by
    all backends, they are only included in the output when available.

commit 3803e3c52d2f518b972e29749588f6bb0e2a7515
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 30 09:33:39 2012 +0100

    Add support for a second Sherwood Insight variant.
    
    There appears to be two very different versions of the Sherwood Insight.
    The old Insight needs the veo250 backend, while the newer Insight 2
    needs the atom2 backend. Currently only the newer version was included
    in the list of supported devices, and to increase the confusion it was
    even named after the old version.
    
    With this patch, the old version is added to the list, and the new
    version is renamed to "Insight 2".

commit e4b66048a6fe40d31a387eb82ffeb55fc7182962
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 24 08:32:51 2012 +0100

    Add some documentation for the event values.
    
    For the new packed 16bit event values, some minimal documentation is
    required to interpret the value correctly.

commit 1d360d3a1e29e47e9741e83b1a929a09f1e2e8d3
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Nov 20 13:31:46 2012 -0800

    This adds support for a subset of the events the OSTC provides.
    
    - PO2 warnings (high and low both mapped to the same SAMPLE_EVENT_PO2
      event)
    - SPEED warning (which according to hw isn't emitted at this point)
    - Deco stop violations (both deep and regular mapped to same
      SAMPLE_EVENT_CEILING event)
    - Deco ceiling and time (this is reported as a series of
      SAMPLE_EVENT_DECOSTOP events with packed deco stop depth (in m) and
      time (in seconds)
      A SAMPLE_EVENT_NDL event (with an optional value indicating the non-stop
      time remaining) indicates that the ceiling has been resolved
    - Gas change (reported as SAMPLE_EVENT_GASCHANGE2, using another
      unfortunate O2% / He% semantic that is used in the
      SAMPLE_EVENT_GASCHANGE
      This also covers the manual gas set event of the OSTC
    - Manual Marker (reported as SAMPLE_EVENT_BOOKMARK)
    
    The two new events (SAMPLE_EVENT_GASCHANGE2 and SAMPLE_EVENT_NDL are added
    to the universal app as well.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 360a31833481fb0ae53960affab6eacdd297a350
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Nov 13 11:43:18 2012 -0800

    Add support for salinity and atmospheric pressure
    
    This adds a new type dc_salinity_t and associated enum dc_water_t.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit ecb17c6fb6fff892d851a930324ad5ab988180e6
Author: Dirk Hohndel <dirk@hohndel.org>
Date:   Tue Nov 13 11:25:18 2012 -0800

    Correct the OSTC depth calculation
    
    This now uses the same formula as the OSTC uses internally which will get
    the values reported by libdivecomputer to be consistent with what is
    displayed on the OSTC.
    
    Signed-off-by: Dirk Hohndel <dirk@hohndel.org>

commit 328e929d4ba7a0b30c5944e2a0480533724f3c3e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 17 13:08:25 2012 +0100

    Add support for a second Aeris Epic variant.

commit b3df32da9d1bd220e99dbc401b5f2da617d7caa1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 8 14:28:50 2012 +0100

    Fix the parser for the Hollis DG03.
    
    The date/time value and the sign bit of the sample temperature were
    parsed incorrectly.

commit 5f13759b6f31ccbf483862e6042918648a267976
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 14 09:28:17 2012 +0100

    Post release version bump to 0.2.1.

commit 909679a48c20c7ef1c4d79774b3d9507d6ff5390
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 21 00:22:47 2012 +0200

    Post release version bump to 0.3.0.

commit 2ed54a204bb8f8167736505c02747d02a7a02fc9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 21 00:21:27 2012 +0200

    Release version 0.2.0.

commit 2511ebea3f83583474d30464d4b58a05396e5c42
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 21 22:37:01 2012 +0200

    Use the ifset macro to append the version suffix.
    
    The version suffix is always defined. The correct condition for
    appending the version suffix is whether it's defined as the empty
    string or not.

commit 743e434e5db1d363953c382df5d22ee3a507d89a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 21 21:50:20 2012 +0200

    Include the msvc project file in the tarballs.

commit af51b58a09cf3e58a21d186913a47c86b51799f9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 21 21:34:48 2012 +0200

    Use non-standard replacement functions for msvc.

commit 14b28cb993f9d027cac1657f754c282e99c67ccc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 20 21:16:51 2012 +0200

    Add explicit casts for the msvc C++ compiler.

commit 8b4d2161310ad0255ff00f5f6efe31e9fc024ec1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 20 21:14:25 2012 +0200

    Update the msvc project file.

commit aaff9c7500d10050ddf93ce715fec7a0d437cdf4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 16 13:46:12 2012 +0200

    Update the list with supported models.

commit 4df5e490083fe235293d3c17903b48d56100775a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 20 23:19:32 2012 +0200

    Take the gas model into account to parse the gas mixes.
    
    When the gas model setting is set to air, the individual gas mix
    definitions retain their previous (non-air) values. This is convenient
    to avoid having to adjust the gas mixes again on your next nitrox or
    mixed gas dive. But the consequence is that for air dives, the gas model
    should take precedence over the individual gas mix definitions, and a
    single mix with air is returned instead.

commit 136f1d1fe1b1b40585b97f1344ff0974171e402d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 21 19:28:48 2012 +0200

    Fix the gas mix parsing.
    
    The Suunto D9tx stores the gas mix definitions at a different offset
    compared to the D4i and D6i.

commit 2487167778e40062cada3b78c12b3b6e048e29c4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 20 23:08:22 2012 +0200

    Don't exceed the maximum number of bytes.
    
    We received data from a device where the end-of-profile marker is
    missing. Because the device fails to locate the last dive, it goes into
    an infinite loop, and keeps sending the same sequence of dives over and
    over again. As a result, we receive more data than expected, and the
    assert in the progress event is triggered.
    
    We now keep track of the maximum number of bytes remaining and abort
    once the limit is passed. The values of the progress events are capped
    at the maximum value to avoid the assertion.

commit ddf6fca65f155cce05588386de9ac043291e4b8a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 7 14:13:50 2011 +0200

    Add support for the Uwatec Galileo Trimix.

commit 074bee70a2fb67ecf88526b0e5ec5fa05f5a1536
Author: Sascha Kettler <kettler@gmx.net>
Date:   Mon Sep 17 21:01:38 2012 +0200

    Fixed date parsing for Oceanic VEO 3.0

commit ae763c3f58b8585a051510375e4914caa3f4f478
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 17 21:26:06 2012 +0200

    Verify the header in the logbook and profile are identical.
    
    Unless we have a bug in the logbook processing logic, both logbook
    headers should always be identical. But it doesn't hurt to check
    explicitly.

commit 9366e36309cd6f027aa3e5338160753e93cb9b7d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Sep 17 20:44:34 2012 +0200

    Finish immediately if there are no dives available.
    
    When trying to continue when no dives are available, malloc() will be
    called to allocate zero bytes. The result is implementation defined and
    may return a NULL pointer. Since that would be interpreted as an error,
    it's safer to finish immediately.

commit f4eeb7745ee1aa395dc4873f5d850ad0429f2533
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 15 10:50:19 2012 +0200

    Return a negative value to indicate truncation.
    
    If the maximum availalbe buffer size is zero, no data can be written
    (not even the NULL terminator), and a negative values should be returned
    to indicate truncation.

commit dad451f6f9542c03d8fbf219ff0ffd62adcf9487
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 15 10:46:07 2012 +0200

    Add a command line option to increase the loglevel.
    
    By default, the universal application will always log error and warning
    messages, but the loglevel can be increased to also log info and debug
    messages.

commit 55c16d0d0f47ff0ad4c9baab77aaad80e7d203c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Aug 25 18:37:47 2012 +0200

    Adjust the default logformat.
    
    The file, line and function information is now only printed for error
    and debug messages.

commit ea3f833d8d8b2cd28b758d0dca3a433ce0f3373a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Aug 25 07:48:24 2012 +0200

    Add additional messages for diagnostic purposes.

commit 645bd89d8ab7dbfed605f2d9a24ed94d86740277
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Aug 25 07:27:56 2012 +0200

    Add a convenience function for logging hexdumps.
    
    The main logging function isn't really suitable for generating inline
    hexdumps directly from the binary data. There is simply no format string
    available for converting array data types with just a single printf
    call.
    
    A possible solution would be to require the caller to perform the string
    conversion before calling the standard logging function. But that's not
    acceptable, because it doesn't play well with the ability to disable the
    logging at compile time, requires extra memory and clutters the calling
    code unneccessary.
    
    The new function is a compromise which sacrifices flexibility for
    simplicity, by using a hardcoded output format with a custom prefix.
    It's not a perfect solution, but it works well enough for the intended
    purpose.

commit 1b7eaaa831052d81f45163e5445ad7676cc6da1f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 11 20:26:20 2012 +0200

    Add support for the Oceanic OCS.

commit fab606b00a44ea2114a4029ad09b70c66c3049f7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 2 23:58:02 2012 +0200

    Add an option to enable support for pseudo terminals.
    
    Pseudo terminals are very convenient for testing purposes, but they are
    not fully compatible with real serial (or even usb-serial) hardware.
    With the new option, some workarounds can be enabled to hide the
    differences and increase compatibility. Although these workarounds
    shouldn't cause any problems in production builds, the advise is to
    disable this feature.
    
    A few ioctl's are not supported for pseudo terminals. They fail with
    EINVAL (Linux) or ENOTTY (Mac OS X). Since these specific error codes
    should not occur under normal conditions, they are simply ignored when
    pseudo terminal support is enabled.
    
    The TIOCEXCL ioctl (exclusive access) is also problematic. The TIOCEXCL
    setting is shared between the master and slave side of the pty. When the
    setting is applied on the slave side, it persists for as long as the
    master side remains open. The result is that re-opening the slave side
    will fail with EBUSY, unless the process has root priviliges. Since this
    is very inconvenient, the TIOCEXCL setting is not used when pseudo
    terminal support is enabled.

commit 6cb4bc6a063a60d5865fb202529b87ae3fbe11fe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 15 21:40:24 2011 +0100

    Enable exclusive access mode.
    
    With exclusive access mode, no further open() operations on the terminal
    are permitted, except for a process with root priviliges. Non-root
    processes will fail with EBUSY. This change will prevent other processes
    from accidentally messing up the communication. It also makes the
    behaviour similar to Windows, where serial ports are always opened with
    exclusive access.

commit cd31ff9dff9cbf92de3c830b9b32253880f8e632
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 28 08:06:44 2012 +0200

    Properly store the context pointer internally.
    
    I forgot to update the device and parser initialization functions to
    store the context pointer into the objects. As a result, the internal
    context pointers were always NULL.

commit 4251f1e5222db9fa49bfc859a1f887dd5f5fe93f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 28 07:54:19 2012 +0200

    Update the dummy IrDA backend for Mac OS X.
    
    I forgot to update the dummy IrDA backend with the latest changes. The
    error, init and cleanup functions have been removed, and the
    irda_socket_open function now takes a context pointer.

commit 55b8dbf3bed80b521e0fe948749dd8bb3bfe6d59
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 28 07:31:24 2012 +0200

    Fix a mistake introduced during the latest merge commit.
    
    The status codes in the new EXITCODE macro were not updated to use the
    new constants with the namespace prefix. As a result building fails when
    compiling with libusb support.

commit 853407ac5263b97c2e1970bd96f5086cfd3f609a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 19 20:25:14 2012 +0200

    Add a wrapper for the vsnprintf function.
    
    The non-standard vsnprintf implementation provided by MSVC doesn't
    matches the C99 function. The wrapper function provides a consistent
    interface on top of the native functions.

commit aae856a310628d24190bf15cdf1fa53ec1d5f377
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 30 22:31:36 2012 +0200

    Silence compiler warnings (unused variables).
    
    When the logging is disabling, several compiler warnings regarding
    unused variables appear. With the cast to void and sizeof trick the
    warnings are silenced without causing any side effects.

commit b1b30f068cd8bee41cf18726b183d3dc3dc6c5aa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 27 08:53:45 2012 +0200

    Add an option to disable the logging.
    
    With the new option, the library can be compiled with the entire
    logging infrastructure disabled. The public api remains unchanged, but
    the internal logging functions will have no effect anymore.
    
    In practice the overhead of the logging functions should be quite
    small, and disabling the logging at runtime might be more convenient.
    Especially because troubleshooting will become much harder without any
    logging.

commit 866e636e8c5b310f9b1701c72a75411c6b5c0b57
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 17 23:07:29 2012 +0200

    Move the logging code to the examples.
    
    With the application defined logging function, the actual logging is not
    performed by the library anymore, and the code belongs in the
    applications.

commit 30feb3b3edb68c2227c700397372604cbd722137
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Aug 20 23:16:44 2012 +0200

    Remove the obsolete error functions.

commit 38c7b022cd50bdfded57a8689c111e047731a794
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 11 16:32:14 2012 +0200

    Integrate the context object in the serial code.

commit ffad80316ce8400ed966b6ed69495789e630917e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 11 16:32:02 2012 +0200

    Integrate the context object in the IrDA code.

commit 53e9d72a405d4eea0a442a6c6acfac71ae361d2f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 1 09:47:51 2012 +0200

    Integrate the context object in the library.
    
    The public api is changed to require a context object for all
    operations. Because other library objects store the context pointer
    internally, only the constructor functions need an explicit context
    object as a parameter.

commit 3311960795ca30bfac4e5a3226909b0a79602bee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 19 23:15:46 2012 +0200

    Add a convenience function for logging system errors.
    
    The new convenience function provides a centralized and threadsafe
    function for logging system errors. The previous functions are
    deprecated and will be removed after the transition to the new context
    based logging.

commit 43cd111198d7839684f81a47cb12874a59b1c65b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 27 23:46:30 2012 +0200

    Add support for an application defined logging function.
    
    An application can now register an application defined callback
    function, which will perform the actual logging. This provides
    additional flexibility compared to logging to stderr with a hardcoded
    format. Applications can now easily display the messages in their user
    interface, customize the format, etc.
    
    Although the internal logging function is a printf like function, the
    arguments are converted into a plain string before being passed to the
    callback function. This greatly improves interoperability with
    programming languages which don't support C style variadic functions
    (e.g. Python, C#, etc).

commit 0f6d23757ffff00bfdd678be25b63010cc216d99
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 22 21:22:37 2012 +0200

    Add a new library context object.
    
    With the introduction of a context object, library initialization and
    shutdown can be performed without requiring any global state. A single
    process can use multiple independent contexts without any problems. The
    lack of a global state also improves the thread-safety of the library.
    
    At the moment, the new context object is primary used to implement an
    improved logging system.

commit 3df5cb09d711a62c4f31e1bd0a7d1bb64062acb7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jul 14 22:50:35 2012 +0200

    Require a serial handle for the sleep function.

commit c5105a37884888fac91a0113338816e379261be4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jul 14 16:16:36 2012 +0200

    Remove the IrDA init and cleanup functions.
    
    The Windows WSAStartup() and WSACleanup() functions are now called
    automatically when opening and closing IrDA sockets. This causes no
    problems because these functions are reference counted and can be called
    multiple times.
    
    In practice nothing changes because the Uwatec Smart backend already
    called these functions for every connection.

commit 83f742080b2a83696cb9a0af48d03e8d8ba0b022
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 13 21:34:17 2012 +0200

    Remove some unnecessary helper functions.

commit 2a72da59ad2a9219a40dd9f9f321aab2b5031c21
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 6 09:23:18 2012 +0200

    Don't ignore errors in the ascii/binary conversions.
    
    Instead of silently ignoring errors and logging a warning, the
    conversion functions now return an error code that can be checked by the
    caller.

commit 4296f974d0ac04eb5f4f038bd7694a021cb595ba
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 6 07:39:29 2012 +0200

    Don't include unnecessary header files.
    
    Due to the use of the convenience functions, the device specific header
    files are no longer necessary, and can be replaced with the high-level
    header files.

commit 6242978fc010b1bc59e001209f8a4ebe0432e102
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Aug 15 07:18:12 2012 +0200

    Add support for the Aeris Manta.
    
    The last memory page is marked as unreadable, and the profile ringbuffer
    end is set to 0xFE00.

commit 58d0e0a62a61b23c3a29a807d5ddbcda76cd2821
Author: Jef Driesen <jefdriesen@telenet.be>
Date:   Sat Aug 11 23:08:24 2012 +0200

    Fix the libusb timeout handling.
    
    A bulk transfer of more than 8K of data takes about one second with the
    Cobalt. Because we use a one second timeout combined with a 10K buffer,
    such a transfer can easily exceed the timeout. Normally this shouldn't
    be a problem because the leftover data is supposed to be received with
    the next transfer. However to break out of the loop we check the actual
    number of bytes received, and ignore the libusb LIBUSB_ERROR_TIMEOUT
    return code.
    
    To fix this problem, the internal buffer is reduced to 8K, and the
    timeout is increased to 2 seconds. This should avoid hitting the timeout
    and allows to consider LIBUSB_ERROR_TIMEOUT a fatal error.

commit 0e1809aac9fe66fdee043236a869ba72d73103bf
Author: Pascal Manchon <pascal@diveboard.com>
Date:   Sun Jul 8 08:28:49 2012 +0200

    Fix some ioctl calls on 64bit Mac OS X.
    
    On Mac OS X (and probably the other BSD's too), the ioctl() syscall
    takes an 'unsigned long' integer as the request parameter. On 64bit
    systems this is a 64bit type, while on 32bit systems it's a 32bit type.
    
    Some of the request constants are defined as 32 bit negative numbers.
    Casting it to a 64bit value will perform a sign extension operation to
    preserve the negative value. Because this results in a different request
    code when interpreted as an unsigned integer, the ioctl() call fails
    with ENOTTY. For example TIOCMBIS is defined as 0x8004746c and becomes
    0xffffffff8004746 after the sign extension.
    
    Linux 64bit is unaffected by this problem. None of the request constants
    has the sign bit set, and thus the sign extension has no effect. For
    example TIOCMBIS is defined as 0x5416.
    
    By using an unsigned integer type, the sign extension can be avoided. We
    use the 'unsigned long' type in case one of the request constants
    happens to be defined as a 64bit number.

commit 2f4a9abf8842de1d629cc74d67f9a804085e6baa
Author: Grischa Toedt <grischa.toedt@web.de>
Date:   Sat Jul 7 22:54:42 2012 +0200

    Fix a build error with automake 1.12 or newer.
    
    Since automake 1.12, the warnings in the category 'extra-portability'
    are now enabled by '-Wall'. Because of this change, linking libtool
    archives requires the new AM_PROG_AR macro.

commit 6423edffc86f0e3f573c498c1ffb5da837eee311
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 21 20:45:12 2012 +0200

    Fix the profile ringbuffer end.
    
    The profile ringbuffer is smaller than expected. The purpose of the
    extra area after the profile ringbuffer is currently unknown.

commit 4bc477baa2d3b81513f828535648d6510f2df6fe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 9 06:43:00 2012 +0200

    Update the examples to use the new convenience functions.

commit 69228386954a97a4f71d52b56355462d1d5dca53
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 27 23:32:07 2012 +0200

    Add a dc_parser_new convenience function.
    
    The devinfo and clock event data is now cached internally at the device layer.
    This allows the new dc_parser_new() convenience function to retrieve the event
    data directly from the device handle, and applications don't have to deal with
    the events anymore to create a parser.

commit df9897fb3ce194f05cced67d2760b529e53dfa0f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 28 15:04:49 2012 +0200

    Add a dc_device_open convenience function.
    
    With the introduction of the device descriptors, the new dc_device_open()
    convenience function can take care of the mapping from a particular model to
    the corresponding backend internally, without needing any device specific
    knowledge in the application. An application can simply query the list of
    supported devices, and the library will automatically do the right thing.

commit 79eade6e062919d072bcc1f8d09c0e614fbb6cb0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 20 21:50:44 2012 +0200

    Add the device enumeration support.
    
    Applications can now enumerate all the supported devices at runtime,
    and don't have to maintain their own list anymore. The internal list
    does include only those devices that have been confirmed to work at
    least once without any major problems.

commit a78cf2f9396fea8cedce759b96ca194156e7e1f9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 20 20:47:26 2012 +0200

    Add a new device descriptor object.
    
    As the name already indicates, a device descriptor is lightweight
    object which describes a single device. Currently, the api supports
    getting the device name (vendor and product) and model number. But
    this can extended with other features when necessary.

commit fbe712fc8faa9239dae1e77c92dd50521556f62d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 19 22:05:57 2012 +0200

    Add a generic iterator interface.

commit c821d40144f45a7f4a9532d1b56291f33fabd502
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 21 22:28:04 2012 +0100

    Introduce a namespace prefix for the high-level public api.
    
    Adding the "dc_" namespace prefix (which is of course an abbreviation
    for libdivecomputer) should avoid conflicts with other libraries. For
    the time being, only the high-level device and parser layers are
    changed.

commit 163d383332bc21b4af48138e4f318c953f77c004
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 16 23:05:16 2012 +0100

    Use a common backend type for the device and parser layers.

commit 9136a528359fd498861af77f6bb27a4f949831ea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 19 08:49:50 2011 +0100

    Use common status codes for the device and parser layers.

commit e65025b501688946fcb464c56566495410ae0e30
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 13 21:35:33 2011 +0200

    Separate private and public headers.
    
    The public header files are moved to a new subdirectory, to separate
    the definition of the public interface from the actual implementation.
    Using an identical directory layout as the final installation has the
    advantage that the example code can be build outside the project tree
    without any modifications to the #include statements.

commit 80f5c7025e110a2c4f1e9eda5f7c62f3a558948e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jun 2 09:27:01 2012 +0200

    Fix the detection of the last dive.
    
    It looks like the Icon HD erases old dives partially with 0xFF bytes
    before overwriting them with new dives. If the head of the oldest dive
    has been erased, the length field which is stored in the first 4 bytes
    is erased as well, and we can use it to detect the last dive.

commit 9c59563d4c874e12177012615eb7a91cd02b58b6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 31 09:04:00 2012 +0200

    Add support for eeprom bank number 2.
    
    Devices with firmware version 2.22 (or greater) have an additional
    eeprom bank with new custom functions.

commit fa54a55a89c7eb77c395a6a7b6b52462c8e72217
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 27 23:56:20 2012 +0200

    Add a version suffix.
    
    For development snapshots, a 'devel' suffix is added to distinguish from
    the final release. If necessary, the suffix can also be used for 'alpha'
    and 'beta' releases.

commit 53b4a1c225d28eb8a1d615101e839eb684bd2e34
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jun 3 22:13:38 2012 +0200

    Post release version bump to 0.1.1

commit 52d8f0828135dde3c70d8ec96a511da1a5eb4fd8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 23 21:45:46 2012 +0200

    Enable the model hint to speedup the autodetection.

commit 781f0db71f7a06591e819f7960dd5b504b4f16a0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 22 19:48:22 2012 +0100

    Add support for the Heinrichs Weikamp Frog.

commit bb87198622e2bcb492b5b10927a3dc9a70a7951d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 27 23:56:20 2012 +0200

    Add a version suffix.
    
    For development snapshots, a 'devel' suffix is added to distinguish from
    the final release. If necessary, the suffix can also be used for 'alpha'
    and 'beta' releases.

commit 631f2d4a3da6d707bfd8e6e368205580ca7b57bc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 27 23:48:06 2012 +0200

    Post release version bump to 0.2.0

commit c3ea5a16e49224a3007ee4f37b58bae594a84e1b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 27 23:33:57 2012 +0200

    Release version 0.1.0

commit b567f0774cbf86c2c50e59ed89a954802ed57938
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 27 23:28:42 2012 +0200

    Add a README file.

commit ec6795cbf3fbecae3e50f3654cce29ad78ec4153
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 24 19:31:39 2012 +0200

    Fix the Oceanic Veo 1.0 layout descriptor.

commit 94b4ee368a2787c23b85cb77e79a276c31260e2f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 23 21:46:22 2012 +0200

    Add partial support for the Oceanic Veo 1.0
    
    The Veo 1.0 has very limited memory and doesn't have a logbook and
    profile ringbuffer. Hence downloading dives isn't really supported, but
    even this limited amount of data might be useful for someone.

commit 0a6e0d93a8d8c3240b4e96e8f40b5c5bb5b27e60
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 24 16:24:28 2011 +0100

    Add support for the Aeris F10.

commit 5ae0e37d1fc942117ae35f65ccc4e37335e91f9a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 23 23:02:38 2011 +0100

    Remove the hardcoded logbook entry size.

commit 1faea84b5b63d1378276d86be6302d54266ec731
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 23 21:07:52 2012 +0200

    Fix the gas mix parsing for the Oceanic VT 4.x.

commit 2fe695d38e6ed06f283ef8aca4d7296247526702
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Apr 22 22:24:48 2012 +0200

    Adjust the header size calculations.

commit 414a8053d53a1a710eacded04435e24a2034cffe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 23 20:49:48 2012 +0200

    Allow easier disabling of the tank switch and surface samples.

commit 2897d1079ae110dd82b359898a8e0cc960f1a682
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 21 08:29:08 2012 +0200

    Allow easier disabling of the individual sample types.

commit 6c2014732ac2b2ccd403ca747fc9f9db0dd8d61d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Apr 22 22:30:50 2012 +0200

    Fix the gas mix parsing for the Aeris CompuMask.

commit 5126ef389a0b8983752008568cf26bdbd46b3257
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Apr 15 09:45:31 2012 +0200

    Add support for the Oceanic Atom 3.1

commit a5f8c8cfffcd8ee30c9f1dc940bc45628b0d4650
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 13 22:50:13 2012 +0200

    Add a small delay before flushing the serial line.
    
    Sometimes there are a few garbages bytes received before the preamble
    bytes. This typically happens when trying to download again after a
    failed attempt. However trying to flush them immediately after opening
    the serial port doesn't work.

commit 8cec4d0a420780f11599b53796ebadc5260d8854
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 13 21:35:33 2012 +0200

    Increase the read timeout to 4 seconds.
    
    When the OSTC receives the download dives command, it responds
    immediately with the preamble bytes. But then it does a linear search
    through its internal memory to locate the end-of-profile marker. As a
    result the response time increases when the marker is located near the
    end of the memory area. In the worst case scenario, the response time
    can exceed the 3 second read timeout with a few milliseconds.
    
    Since the required timeout depends on the total amount of profile
    memory, this problem was indirectly introduced with firmware v1.91,
    which doubled the amount of profile memory from 32K to 64K.

commit a2f4f1cd3f3992b9e16e578d907be2ef22fd442a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 3 21:46:05 2011 +0100

    Replace the fixed delay with the new half-duplex emulation code.

commit b6d24e72e263dc6a374a87df98a0321d390e42f0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 3 21:45:03 2011 +0100

    Add support for half-duplex emulation.
    
    When using half-duplex communication (e.g. only a single wire for both
    Tx and Rx) a data packet needs to be transmitted entirely before
    attempting to switch into receiving mode.
    
    For legacy serial hardware, the tcdrain() probably works as advertised,
    and waits until the data has been transmitted. However for common
    usb-serial converters, the hardware doesn't provide any feedback to the
    driver, and the tcdrain() function can only wait until the data has been
    transmitted to the usb-serial chip. There is no guarantee that the data
    has actually been transmitted by the usb-serial chip.
    
    As a workaround, we wait at least the minimum amount of time required to
    transmit the data packet over a serial line, taking into account the
    current configuration.

commit 3c07a3017f383fc14f27a32ae81fddc7e5ba25a7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 3 20:20:13 2011 +0100

    Integrate the tcdrain() call into the write function.

commit 060cc95d5ce5945d2e7d4c3ce9d54090436509ee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 30 21:24:48 2012 +0200

    Substract the dive time from the date/time value.
    
    The OSTC doesn't store the start of the dive, but the exit time. Hence
    the dive time needs to be substracted.
    
    For dives with format version 0x21, we prefer the total dive time in
    seconds stored in the extended header. This time value also includes the
    shallow parts of the dive, and therefore yields the most accurate start
    time. The dive time is rounded down towards the nearest minute, to match
    the value displayed by the ostc. For dives with the older format version
    0x20, this value isn't available and we default to the normal dive time.

commit 90a84527888a6b1b8942fce9f036fa4a8991a28a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 30 21:04:38 2012 +0200

    Add a wrapper for the mktime function.

commit bb4a4983028fd313c44ff29ce97de2e24e1cfe7f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 10 20:53:38 2012 +0200

    Fix the freedive mode detection for the Mares Puck Air.

commit 388282773673a552c9138065399bb03bcebf91ae
Author: Khalid El Fathi <khalid@elfathi.fr>
Date:   Wed Apr 4 10:46:11 2012 +0200

    Spelling correction.

commit 0f83d6ae23ac4c2863cf3d5dce993ea4f9f94406
Author: Björn Spruck <bjoern@spruck.net>
Date:   Fri Mar 30 20:31:03 2012 +0200

    Add support for parsing the events.
    
    The event bits have been verified for a Mares M1 only.

commit 407c40ed3821fb5504e160a48ee6f740d74a986b
Author: Björn Spruck <bjoern@spruck.net>
Date:   Thu Mar 29 21:28:29 2012 +0200

    Fix the oxygen percentage for air dives.
    
    When the dive mode setting is set to air, the oxygen percentage stored
    in the header is different from the expected 21%. It might be the last
    used nitrox percentage.

commit 45c07506314124d3dc961310b326ee52373cfc08
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 22 22:22:59 2012 +0100

    Adjust the profile ringbuffer to exclude the last 512 bytes.

commit a3f674913d31b89db13680a8e4d22b535d564f28
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 16 22:36:33 2012 +0100

    Skip gaps between two consecutive dive profiles.
    
    The assumption that two consecutive dive profiles are stored without any
    gaps in between them, appears to be incorrect in some cases. Instead of
    failing with an error we just skip those gaps now.

commit 2b0ef8c0f1458b370f7ee0db3e93fa610c908230
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 15 21:42:31 2012 +0100

    Disable pressure samples for the Oceanic Veo 3.0.

commit 4afa8ad1ef0be4caa46ca8424a6a97ab2ceabdcb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 9 20:01:10 2012 +0100

    Mark the last memory page on an Oceanic Veo 3.0 as unreadable.

commit dea1fe358d1bc768b8767f37980d2435f628bc1c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 10 10:18:35 2012 +0100

    Add support for the Darwin Air tank pressure.

commit d4b94cb77c0f8bf1cc922b724514af1c6d3f4ab4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 5 21:20:07 2012 +0100

    Improve the communication with Darwin Air devices.
    
    We received a report of a Darwin Air device which has a very high error
    rate. The majority of the echo packets is incorrect, but since this
    doesn't seem to have any effect on the actual data packet, we can just
    ignore this error. If there happens to be a more serious error, it will
    be detect in the data packet.
    
    Sometimes there were also a some garbage bytes received at startup.
    Adding a small delay seems to fix this.

commit 1ccd786493fe4b53b2e5b0128e814e975328f84f
Author: Sam Calhoun <sam@divenav.com>
Date:   Thu Mar 1 22:05:35 2012 +0100

    Fix the temperature for the Oceanic ProPlus 2.1.

commit 605cb37c234a28c1f973a16ce1669741bf427658
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 24 20:36:28 2012 +0100

    Add support for the Oceanic OC1 Pioneer.

commit ee4f105a94bccc2db66012fa3c4b01046417e738
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 19 21:04:59 2012 +0100

    Revert back to a standard baudrate on Unix.
    
    The linux USB CDC-ACM driver, which is used by the Mares Icon HD
    interface, doesn't support the ioctl's to configure a custom baudrate.
    But since the actual baudrate doesn't seem to matter at all, we revert
    back to the nearest standard baudrate.
    
    Because custom baudrates are confirmed to be supported on Windows and
    Mac OS X, those platforms can keep using the non-standard baudrate.

commit 87397a4ea1c63d78efd9bf751dee19f54257a6f9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 14 06:25:32 2012 +0100

    Add support for the Oceanic VT4.1

commit 2abd5164f4861ab2ee619c017fe2f022ad019457
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 2 08:01:08 2012 +0100

    Add a delay between sending the commands.
    
    When trying to send the commands as fast as possible, without any delay,
    the failure rate is very high. Almost every single packet fails with a
    timeout at first. Retrying the packet works, but those many timeouts
    make the download extremely slow. Adding a small delay avoids the much
    more expensive timeout and speeds up the transfer significantly.

commit fa348c0d04228c09a0b5e715fba803aacf7c7740
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 31 09:09:40 2011 +0100

    Rename the example application too.

commit 48f6b1eec70ae0a028a511c12a54cc8a0d17b970
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 31 07:16:55 2011 +0100

    Add a command line parameter to specify the model code.

commit 3d78282cde11e7881a3246bea30d22f96be0336b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 31 06:52:57 2011 +0100

    Rename the backend from darwinair to darwin.
    
    The name change makes it more obvious the backend supports both the
    Darwin and the Darwin Air, and it's a shorter name too.

commit ca56b5932a4c3c1d52c0394a01e31c2767ea0c07
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 31 06:44:24 2011 +0100

    Add support for the Mares Darwin.
    
    The Darwin and Darwin Air share a very similar layout, but with a few
    differences here and there. Unfortunately, there seems to be no way to
    autodetect the exact model during the download. Therefore, an extra
    model parameter is added to select the appropriate model manually.

commit f0626233238e8a4e1e52c70ab050847bb27911c1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 27 22:14:51 2011 +0100

    Replace the hardcoded constants with a layout descriptor.
    
    A side effect is that the mares_darwinair_extract_dives function now
    requires a valid device handle. This shouldn't cause any real problems
    because this function will likely become private some day.

commit c4f62d9410dc8e7b68a0c93a21a86cc22d7eb027
Author: Denny Page <dennypage@me.com>
Date:   Thu Nov 17 20:35:52 2011 +0100

    Remove the init command from the initialization sequence.
    
    The init command appears to behave more like a hard reset. If the
    command is sent during the communication, the device immediately closes
    the connection and no further communication is possible without
    disconnecting and reconnecting the device.
    
    Sending the command at the start of the communication seems to require a
    long delay before sending the next command. However the communication
    works equally well without sending this command. For some devices it
    even improves the success rate of the initialization sequence, and thus
    there is no reason to keep it.

commit 069797a08250262b19a84c9308ec7fbca3235fa2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 13 06:27:37 2011 +0100

    Add a devinfo event for the Dacor Darwin Air.

commit b22df8d26cef151cc83befa9032ba7ea45293741
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 11 16:59:52 2011 +0100

    Add the example application for the Dacor Darwin Air.

commit 5ef0398c423cd4e961a54c36050489e73973d499
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 22 19:40:55 2011 +0200

    Add support for the Dacor Darwin Air.

commit 64d3a99052f51e6c7584b62b8c522c059ced9e0d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 3 20:22:56 2011 +0100

    Remove unnecessary checks.

commit 99881d6250397b7f3c8dc0c88365f1f804ba29a6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 11 10:32:27 2011 +0100

    Redefine the packet size explicitly.
    
    The packet size for the nemo and puck backends happens to be identical.
    But the value for the nemo backend is truly fixed, while the value for
    the puck backend can be adjusted. To avoid breaking the nemo backend
    when changing the default value, we redefine the packet size explicitly
    to the correct value.

commit 474336a587d7ba23362cbeb7766ee6517b9a439e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 1 22:05:34 2011 +0100

    Move the low-level communication to the common layer.

commit 5410378849d41001d5ef957dcade920538aae9c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 29 11:30:56 2011 +0200

    Remove the common device structure for the Mares Nemo.
    
    The common device structure was used only for sharing the fingerprint
    and layout descriptor, but the nemo backend doesn't even store a layout
    descriptor, and the fingerprint can equally well be passed around as a
    function argument.

commit 22686d6fe9d13285775abd0e62c2d9d85b64fc72
Author: Denny Page <dennypage@me.com>
Date:   Fri Nov 4 22:25:55 2011 +0100

    Add a delay between sending the init and version command.
    
    Some devices are having problems during the initialization sequence. The
    extra delay appears to improve the success rate for the affected
    devices. There is obviously a small performance penalty, but being able
    to establish a reliable connection with all devices is more important.

commit 0ea9f5e8cae3fcf36c2302466b9026515130d2aa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 3 21:17:30 2011 +0100

    Try to correct an invalid model code.
    
    We received data from an Icon HD Net Ready with a model code equal to
    0xFF, which is an invalid value. Fortunately we can figure out the
    correct model code from the data in the version packet.

commit fd8b88891ff2670f801afad46015870078dc2c56
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 3 20:25:15 2011 +0100

    Add support for the pressure samples.

commit bb32b13b093176345e1a8f095edfbe6c69070d94
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 18 21:40:56 2011 +0200

    Don't use asserts for parameter validation.

commit 8f2e3265fee0e41d46867a6d19953145aae62851
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 15 09:20:39 2011 +0200

    Add read support for the Mares Icon HD.

commit eda03255a875d6ea4d991b54a3960a066dee0038
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 24 14:11:10 2011 +0200

    Add the libusb dependency to the pkg-config file.
    
    When linking dynamically, the shared library contains a reference to all
    external dependencies, and the linker can easily resolve them. However
    when linking statically, all external dependencies have to be specified
    explicitly. This rule also applies to dependencies that are not exposed
    through the public api.
    
    The pkg-config Requires.private field is used to support both static and
    dynamic linking correctly.

commit b7a6be15ca58cc8f89fbc8fa1a4c840e13d51092
Author: Steve Buie <sbuie321@gmail.com>
Date:   Sun Oct 9 21:17:32 2011 +0200

    Skip incomplete dives.
    
    We received an interesting case of a dive computer whose battery died
    during a dive. Apparantly the device recorded some samples, but failed
    to terminate the dive properly. In the linked list, the next pointer of
    this dive points to itself, which is obviously an invalid value.
    
    I suspect the device initializes the next pointer to point to itself at
    the start of a new dive, and updates it again with the correct value
    once the dive has finished. But due to the battery failure, that last
    step never happened.
    
    Anyway, since we are traversing the linked list backwards, we don't need
    the next pointer, and we can simply skip the incomplete dive. The error
    is not returned immediately anymore, but delayed until the end of the
    download.

commit 649d5e28dfa7cfad5551f6fff210d97d723d5bf1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 9 20:58:46 2011 +0200

    Validate the ringbuffer pointers before using them.

commit 2a0defe30da1ffeea06951b848b5f2b01b357881
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 7 22:02:54 2011 +0200

    Adjust the total amount of memory for the newer Suunto's.
    
    The D9tx, D6i and D4i have twice the amount of memory compared to the
    previous versions (64K versus 32K). To support both variants, a new
    layout descriptor is introduced.

commit 76ab46304bb085d51249cac614156a7fd5efbc7c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 7 21:45:07 2011 +0200

    Store the version packet internally.

commit b57423cc5495dbaad938624931bc78453beb2496
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Sep 30 21:50:27 2011 +0200

    Fix the depth decoding for the Mares Nemo Wide.
    
    The depth is reduced to a 11 bit value. The meaning of the now unused
    bit is still unknown.

commit f526cdd3d9ae8ade83bc053f25467018ef9368b7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 24 13:01:36 2011 +0200

    Add support for the Mares Icon HD Net Ready.

commit 4ed8a6963cc95a7d78ecf08a4250e1bd5988c860
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 24 11:27:12 2011 +0200

    Store the version packet internally.

commit 1ce8dec1d8a5dca073714d1d4b5df72cb510c9df
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 24 10:31:31 2011 +0200

    Exclude the 4 byte length from the sample data.
    
    Correctly skip the 4 byte length in front of the sample data. The
    previous code happened to work by accident, because the header after the
    sample data was assumed to be 4 bytes larger, and thus those two errors
    cancelled each other out.

commit 786e4a7ae46c413b9df57e34c0a31fd868839482
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 24 06:55:50 2011 +0200

    Initialize memory before use.

commit 2a26da3737dc7106b93c6774cc5a7069548caf06
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 6 22:28:34 2011 +0200

    Add support for the Oceanic Atom 3.0 and VT 4.0.

commit d560e8e1ca692a994e0a2579fac4d8cef2f2f6ae
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 11 21:31:01 2010 +0200

    Fix the tank pressure for the Tusa Zen Air.

commit d6de181662d59f731108d05af2df7d32c551444e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 11 23:54:34 2011 +0200

    Update the parser to support the Suunto D4i, D6i and D9tx.

commit ada569faf3204b6bb02f45890b05b1f5137c2eeb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 11 21:12:14 2011 +0200

    Autodetect the baudrate for the Suunto D4i, D6i and D9tx.
    
    These new models use a faster baudrate. The correct baudrate is detected
    by probing with the version command. To speedup the detection, the model
    code can be supplied by the caller as a hint, which is then used to
    start the autodetection directly with the correct baudrate.
    
    To maintain backwards compatibility, the model hint is not enabled yet.

commit 533e033b88a4a9613a614183cc08aadd689cbe46
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 11 23:00:48 2011 +0200

    Use the sample configuration data to parse the sample data.
    
    The sample configuration data describes which sample data is available
    and how it is stored. Using this data should be more reliable than using
    a hardcoded configuration.

commit bc756d7663748ab157fccc2d4209ad4ba01da2ea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 12 22:32:44 2011 +0200

    Use the same baudrate on Unix and Windows.
    
    With the support for custom baudrates on all systems, there is no need
    anymore to use the nearest standard baudrate. Using the exact baudrate
    should make the communication more reliable on Unix systems.

commit 088ea6d054aad3934118adace2fc9f51b2c31cba
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 11 20:35:00 2011 +0200

    Add support for non standard baudrates.

commit d3e522b07083be213e628b9a956104bfa73563c2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jul 24 07:34:37 2011 +0200

    Add support for the OSTC screenshot feature.

commit 57615abc0cfc1fc2e8c24b47f6da4f8bafebb544
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 20 09:00:02 2011 +0200

    Add support for some additinal OSTC features.

commit 5942215cdad2a6ba2b3439463a37d20fc92afe40
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jul 9 12:19:46 2011 +0200

    Select the correct memory layout for the Mares Puck Air.

commit 608008cd33ae7c1613ec4f701ea3a8e923e9d5eb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jul 9 12:19:10 2011 +0200

    Use symbolic constants for the model numbers.

commit 7a238281f6ec9801f713bcbef628e5ac308d397b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 7 20:30:37 2011 +0200

    Fix the SetPoint change event.

commit 240173172071125d0f43c9d38834eeaf754d284b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 23 19:50:50 2011 +0200

    Add support for the new data format.

commit b492715ff263aea33ef1184f9b8a6038e7895763
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 16 22:32:22 2011 +0200

    Support firmware versions with 64K of profile data.

commit a10fc9d85e3a560c5150acc7bc6530d71eae2c25
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 22 12:14:09 2011 +0200

    Move duplicated code into a common file.

commit 0517a640bf8eb7eb081bbbcea98723dc315d8c1c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 28 21:18:13 2011 +0200

    Log a warning message for errors.

commit 36e5a75f8e40398a12fc9d16737c9a421e2adb23
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 28 20:42:19 2011 +0200

    Drop support for older firmware versions.
    
    Some of the older firmware versions contain a critical bug that can
    possibly crash the device when trying to download dives, and also a bug
    in the checksum calculation. To avoid these problems we simply refuse to
    download when an old firmware is detected and require the user to
    upgrade the firmware first.
    
    The detection is performed by means of a new version command which
    allows to retrieve the device information prior to downloading the
    dives, but is only supported by recent firmware versions.
    
    As a side effect, we gain access to the current firmware version, which
    may be different from the one recorded during the last dive. And we can
    get the info even if there are no dives present.

commit 2b77a52e8966bce30392522e444d56a8529b30c5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 6 13:08:49 2011 +0200

    Use symbolic constants for the model numbers.

commit 6467f6353d952d59851248d35cd2eff0bd4fed00
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 5 20:53:08 2011 +0200

    Fixed a mistake in the type detection code.

commit a217a0fb803bbb6ada1d298cd534ed2bb092b25b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 29 21:32:23 2011 +0200

    Fix the datetime parsing for the Aeris Elite T3.

commit ce9459039cc8a2df9a4694628d88f81b7433fe7d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 16 08:53:58 2011 +0200

    Add support for the Aeris Atmos AI (metal buttons).

commit b288e82960b692731aaf9e7e805285a375c329a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 31 21:29:48 2011 +0200

    Adjust the profile ringbuffer to exclude the last 512 bytes.
    
    For the devices in the list below, the last 512 bytes of the memory area
    are not part of the profile ringbuffer. The real purpose of these bytes
    is currently unknown.
    
    Oceanic Atom 2.0 (firmware 3I or greater)
    Oceanic Geo 2.0
    Oceanic OC1
    Oceanic ProPlus 2.1
    Oceanic Veo 2.0
    Oceanic Veo 3.0
    Sherwood Insight
    Sherwood Wisdom2
    Tusa Element II
    Tusa Zen
    Tusa Zen Air
    
    Some but not all of these devices also have an unreadable last page,
    making the autodetection code even more complex.

commit 417e7b389485fffe959ccbfd0c37b5d1a72ae829
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 19 23:07:17 2011 +0100

    Use symbolic constants for the model numbers.

commit 8c947bd6f795f45712bdd3f4c2a63f5cfc8797f5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 19 21:47:01 2011 +0100

    Fix the parsing of HelO2 dives lacking the additional 12 byte block.

commit 75e29a6a8c1353aaf340b87ca04147a5a0e0f139
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 17 20:35:09 2011 +0100

    Fix the pressure decoding for the Aeris Compumask.

commit 5588211b7f5070fe8fb90b49a3a0eb1654adbcb9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 12 10:18:40 2011 +0100

    Add progress and device info events.

commit dcfbcfbb9b43df2b33a1b14094e34f5190874807
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 10 22:32:42 2011 +0100

    Allow building on systems that don't have pkg-config.

commit 8fa63eb4a20a29f1beef5e86cdf59241d69d0783
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 28 21:43:32 2011 +0100

    Add an option to adjust the depth calibration constants.
    
    When the atmospheric pressure is set to zero (the default value), the
    atmosperic pressure stored in the header is used.

commit c15b964b26e6799a081ce4fcb52bcb1e7de0c409
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Feb 27 22:30:48 2011 +0100

    Add an option to switch between real and simulated dives.

commit 5614aff3ee7dd766048bb874798d4049a6b7e48a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Feb 26 09:32:15 2011 +0100

    Add a libusb based implementation.

commit 4b887341f3cf4f51da4ae5eeb303d04a5c3c5e81
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 27 16:53:30 2011 +0100

    Add support for the Atomics Cobalt.

commit 7fbff73c6b14b1f01fb28962b52550d23077a42d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 7 20:47:33 2011 +0100

    Ignore samples with all 0xFF bytes.

commit c1d05cd8ba7092f72d4e99b0ccc66131647ba247
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 8 22:58:47 2011 +0100

    Fix the pressure decoding for the Aeris Epic.

commit 63f3f6de06a7a8925b292e5ac05a012b7c8ecc35
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 24 20:59:03 2011 +0100

    Add support for the Sherwood Insight.

commit 95835659dd00d4c0620871d3cfae96deebb0604d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 14 22:57:55 2010 +0100

    Improve the progress events by reading the data in smaller blocks.

commit de1f7511ace539182d812493d821846dd40e4330
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 19 08:25:03 2011 +0100

    Do not return an error when no dives are present.

commit 104c4d956a91c52d83e76f6f857a60f0bc0f0b4c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 18 19:33:21 2011 +0100

    Validate the ringbuffer pointers before using them.

commit fbe203993c6413eaf37cb2da60af515b1bab2ea2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 18 11:53:47 2011 +0100

    Ignore timeouts during initialization.
    
    Some Veo devices never respond to the initialization command, but have
    no problem to continue the communication. Therefore a timeout with no
    data received is ignored. If there happens to be a real problem, it will
    be catched when sending one of the other commands afterwards.

commit 8425a22dbcac764830d4ac7c8b83fb88cbfb0fbf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 13 21:47:22 2011 +0100

    Ignore samples below the depth threshold for calculating statistics.

commit 0d0c654b278a2cc05ce33bcd0373698f0828834c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jan 9 21:33:29 2011 +0100

    Use the new field api in the example application.

commit 4ea3964c3caaa387c0ab4e744ecc7df461a00114
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 29 21:57:55 2010 +0100

    Implement the new field api for the Seiko devices.

commit 4bce24e5fa3b8ca3a86c0d5f19d4814781358de1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 26 22:22:27 2010 +0100

    Implement the new field api for the Mares devices.

commit 04481198e721c01baceb8dc4ec795c461e47477f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 25 22:00:38 2010 +0100

    Implement the new field api for the Heinrichs Weikamp devices.

commit 061e647ecfe5c484b2c9dba2c7f588bfcf15786a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 16 21:56:18 2010 +0100

    Implement the new field api for the Oceanic devices.

commit 643c04eca3395e8bd8167fd19cfd6ad4efe8c092
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 15 21:45:33 2010 +0100

    Implement the new field api for the Uwatec devices.

commit 014f7aa420f67272a04d86aa35779e8de709cd10
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 15 21:28:08 2010 +0100

    Implement the new field api for the Suunto devices.

commit 7c00b1d74e410f64368c0768eaf317d6374061b9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 15 20:46:04 2010 +0100

    Implement the new field api for the Reefnet devices.

commit 90e60fecee20c0ccc2350b93c18c2fbe871fd69f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 25 23:20:57 2010 +0200

    Add a new function to the public api to retrieve the dive metadata.

commit e320791e869391a8db972710171c82ab3b2a3d2f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 13 20:46:57 2011 +0100

    Fix a buffer overflow.

commit 1ea487906608218429aedf402d512d82a3fab499
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 3 23:30:53 2010 +0100

    Choose the samplerate based on the model number.

commit a2b9d887a896a79ae0ed6592090de637c4b1a483
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 3 23:15:47 2010 +0100

    Add a devinfo event for the Cressi Edy.

commit 154f767a9c3f1569a35119543796b88425313249
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 7 23:43:41 2011 +0100

    Convert assertions into error codes.

commit ec774d3426ec6502dfa3f95b7ff306f6017f1760
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 8 23:29:19 2011 +0100

    Shorten the type detection code with bit manipulations.

commit 910521fe80b888118a44577f31cab9c075638f65
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 6 21:04:55 2011 +0100

    Add support for the Oceanic Atom 1.0.

commit 4fd295b4acdfed77be0660a29b3a00cb8b8a7259
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 1 22:27:02 2011 +0100

    Always prefix the port name with "\\.\" before opening the port.
    
    The "\\.\" prefix allows to access the Win32 device namespace directly,
    without going through the file system. This is required to support
    non-standard port names, and COMx ports with a number greater than 9.

commit 93cc4c8d0b24889ac1afd965d8205cd0a7c10008
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 29 22:21:42 2010 +0100

    Add a warning for uninitialized logbook entries.

commit 23836fe625a4dabd93077faf04e8ce63f7e5fae0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 29 22:20:45 2010 +0100

    Silenty ignore ringbuffer overflow errors.

commit 08a57ce724bfd6ce6532b5cbcf703b568b1b1ef2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 29 21:42:23 2010 +0100

    Validate the logbook pointers immediately after downloading.
    
    The Aeris Elite T3 appears to update the global logbook pointer
    incorrectly when overwriting old dives. As a result there can be logbook
    entries pointing to profile data that has already been overwritten with
    newer dives, and those cause problems when calculating the total amount
    of bytes in the profile ringbuffer.
    
    As a workaround we validate the logbook pointers immediately after
    downloading. At this early stage we can check manually for ringbuffer
    overflows without having to rely on the values stored in the data.

commit 9588f7db011c4459c6e562e18e30afc7bf578ae9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 25 21:44:31 2010 +0100

    Send the version command at startup.

commit 96a93c26db3151d55bea16b89ac6b832c55eb146
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 25 20:27:19 2010 +0100

    Improve the detection of the last dive.

commit bb8255a116e718ce1bccd97b5e2cbdd25326f189
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 25 20:09:23 2010 +0100

    Search for the end of te profile ringbuffer.
    
    Because some devices appear to store the end-of-profile pointer at
    different locations, we search all know positions for a valid value.

commit 3afc32b499a53406ffb86f55e41610b99218c69d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Dec 19 10:14:58 2010 +0100

    Change the sample timestamps to the end of the interval.

commit 76a0864702c349148543f73a66f7e059fec4205e
Author: Stefan Riemer <stefan.riemer@gmx.de>
Date:   Wed Dec 22 09:03:54 2010 +0100

    Fix the parsing of the temperature for the Aeris Epic.

commit f3b8d9da21cd2cfcc9a4c8d6468e9701d0725f29
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 17 21:40:45 2010 +0100

    Return the error code instead of success.

commit 55a0a3fe0fff5b4b766003a5f09fce027b88572c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 26 22:32:17 2010 +0100

    Fix the header size for the Oceanic Veo 3.

commit c4172ecdf6c2f6b68eba7e06e446d46aef66a729
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 23 21:25:16 2010 +0100

    Use symbolic constants for the model numbers.

commit 642996bfe6902640445ae30d3c49aead06929d07
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 14 22:19:58 2010 +0100

    Poll the serial line to avoid the use of an infinite timeout.
    
    Because the user needs to initiate the transfer on the device itself, we
    have to wait for an unknown amount of time. The infinite timeout works,
    but causes problems if the data never arrives. By polling the serial
    line, an application can at least cancel the operation.

commit 685660e42a85bfa2fff8ff8a9c1ae6a9041811ff
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 14 10:17:40 2010 +0100

    Add fingerprint support for the Mares Icon HD.

commit 3023a208e87b55dac1e9de1b36141948341cc472
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 2 22:18:50 2010 +0100

    Add a parser for the Oceanic OC1.

commit c462e75c8c9f95611a1382b92aac5b7c161dac53
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 9 22:33:56 2010 +0100

    Improve the foreach function for the Mares Icon HD.
    
    With the knowledge of the end of profile pointer and the number of
    samples, the ringbuffer can be traversed backwards and the start of the
    ringbuffer doesn't have to be fixed anymore.

commit c1602ef5067891d6b6003bfeb8db757875047a47
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 7 23:22:11 2010 +0100

    Simplify the timeout calculation.

commit d7f5813f576267c471e7540a0562b37c42b7f05c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 4 21:21:17 2010 +0100

    Delay the resending of a command after an error.
    
    Especially the version commands seems to be sensitive to errors. Once
    the initialization phase is over, a delay is usually not necessary, but
    it should cause a noticable slowdown either because errors are supposed
    to be rare.

commit f8e8bd3b545c152ef53b8331e9e2198aeb214ac5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 4 20:50:28 2010 +0100

    Discard the additional bytes inside the init function.

commit 57ae6b2c13a449e215594ea87359a2079899fa57
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 4 20:49:14 2010 +0100

    Eliminate some duplicated code.

commit 608df2c4c1bba0be7b64b8b08c5a9f09c0a546f5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 1 20:21:11 2010 +0100

    Fixed a typo in the autodetection of the Oceanic OC1.

commit e0860923e0d1c371ae7b7dfcdaccddc5ed2753b4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 29 21:11:36 2010 +0200

    Check the ringbuffer pointers for invalid values.
    
    If a logbook entry contains an invalid ringbuffer pointer, the error is
    not returned immediately, but delayed until the end of the download.
    With this approach we can download at least the dives before the
    problematic logbook entry.

commit ca126e9af682d010777c84991821a3ce8c89805d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 23 23:02:50 2010 +0200

    Add support for the new surface samples.

commit 448300cc82966fa67407cf8392438813ee7c0a6e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 23 23:01:49 2010 +0200

    Adjust the header size for the Oceanic Veo 3.

commit a9ede19d51afbaa9d1ca4e72b3b47ede47499dd8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 23 22:41:23 2010 +0200

    Reset the complete state at the correct place.

commit 72ae3b9a86f567399e14b3dd67a3766606463487
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 2 16:58:30 2010 +0200

    Add a function to query the state of the serial lines.

commit 887d744e6db70039540a9046348597b051a626eb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 6 14:04:58 2010 +0200

    Use a more consistent typedef in the serial and irda backends.

commit d4766904f50a9efa3a9b9eb9fadae8a99f10ca89
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 4 22:20:23 2010 +0200

    Add progress events for writing the user data segment.

commit 12a918baccffc3618824a1f111521fad719ad850
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Oct 2 21:55:41 2010 +0200

    Improve the error recovery during the handshaking phase.
    
    The handshaking is now automatically restarted whenever a non-fatal
    error (such as a timeout or a protocol violation) is encountered.
    Previously, only corrupt handshake packets where handled.

commit 15bad40976ed6bdc393dfdaac401a72b4350409a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Sep 30 21:13:32 2010 +0200

    Add a devinfo event for the Mares Icon HD.

commit 55c4212dae600d09b25a4cac3b04ce35b57d897b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 1 22:24:51 2010 +0200

    Add support for the Tusa Zen Air.

commit 4b374f2632a1c4de71109fc6c43ca0f96ce94775
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 4 21:16:14 2010 +0200

    Add support for the Oceanic Veo 3.

commit 2abc371abb15afb3e74c9fd9c52c5627469c56de
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 17 22:21:13 2010 +0200

    Mark the last memory page on an Geo 2 and Pro Plus 2.1 as unreadable.

commit 4ec8578a3e30a55169e506f1528f5ff40d49d8a9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 17 22:09:25 2010 +0200

    Add support for the Oceanic Geo 2 and Veo 2.

commit bae20d75a3b6ba7c1e4f8fb291c75e299ab3458d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 19 15:31:50 2010 +0200

    Adjust the baudrate for Unix systems.
    
    The termios interface does not support setting a baudrate of 256000 bps,
    but using the nearest supported baudrate appears to work fine too.

commit a24fd313ae3d98c2eb633b5170db58a667638341
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Sep 7 22:52:05 2010 +0200

    Add the foreach function for the Mares Icon HD.
    
    Note that this implementation will fail if the ringbuffer doesn't start
    at the fixed address 0xA000. This is very likely to occur once the
    ringbuffer is filled completely and the device starts to overwrite old
    data.

commit e96a00745152926991433ddc8a2dc52ca85fafaa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Sep 12 21:05:35 2010 +0200

    Discard garbage bytes when opening the session.

commit a0bb8401696b10dc429438acd02672c6b5b9caca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 29 15:08:28 2010 +0200

    Use only 12 bits for the depth.
    
    The depth is stored with only 12 bits, which results in a maximum depth
    of 99.9 meters. The remaining 4 bits are yet unknown, but one of those
    bits appears to indicate a larger sample.

commit 180321029a68fdedeb69a7140f562e71e24fd023
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 29 15:01:33 2010 +0200

    Fixed a small mistake in the previous commit.

commit 1dc9704a2479835571c8947ba781c982f6d43d30
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Aug 22 23:24:13 2010 +0200

    Avoid reading outside the ringbuffer area.
    
    Since the total amount of profile data is not necessary a multiple of
    the maximum packet size, the code may attempt to read outside the
    ringbuffer area in some cases. Because the device supports a variable
    packet size, the problem can simply be avoided by adjusting the packet
    size.
    
    As a side effect of this fix, the code will now also detect when the
    profile ringbuffer is filling up faster than the logbook ringbuffer, and
    the progress events are improved as well.

commit 2fca7914b676c4e0d2b185c1885e0942908abf56
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 10 15:57:21 2010 +0200

    Implement the foreach and fingerprint support for the Zeagle N2iTiON3.

commit c060f268bec4b1180f2bc8f8b0d57825560f2184
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 15 14:46:37 2010 +0200

    Add support for the Zeagle N2iTiON3.

commit 87226652df73a3f1316c306a48471f82dcce974d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Aug 9 12:04:33 2010 +0200

    Fix the year offset for some models.

commit 79dfa4becb895795b21c9eefa8ed4bb04ae2102f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Aug 6 13:30:42 2010 +0200

    Mark the last memory page on an Aeris Epic as unreadable.

commit 911513c578e3ffbf318d3cd0c76c939544a58c3c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 29 13:39:52 2010 +0200

    Use the correct number of alarm bytes for each model.

commit 0f5b6028eff9b61329e6b75aff70dc443da7622f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 20 17:18:38 2010 +0200

    Copy missing sample values from the previous sample.
    
    The Uwatec Smart stores a sample value only when it's diffent from the
    previous value. While this compressed format does save some space on the
    device, it is less practical for use in an application. The original
    uncompressed data can easily be obtained by copying missing sample
    values from the previous sample.
    
    The implementation uses a two pass approach. In the first pass, all
    sample values that are explicitly stored in the profile date are
    collected. Any sample value that is not present, will automatically
    retain the value from the previous sample. In the second pass, all
    sample values are passed back to the application. The presence of an
    absolute value is used to decide which sample types are present in the
    data.

commit 10377f969a1637a1b0c24db8ae830e5db1a45283
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 20 10:26:38 2010 +0200

    Keep only a single type for both absolute and delta values.

commit 9b8ccb99fb2196003449b199004d98eba84c2407
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 8 13:55:09 2010 +0200

    Increase the packet size if more data is immediately available.

commit a722d50f03de62b2dc88b6c75171ffe992bc2549
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 28 08:36:49 2010 +0200

    Mark the last memory page on a Sherwood Wisdom 2 as unreadable.

commit 82a0fc97a0524395b79fd1ec1e12e62ccff0f2d1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 27 11:42:30 2010 +0200

    Add support for the Mares Nemo Apneist.
    
    The total memory size is hardcoded again because the protocol does not
    allow to retrieve the correct memory layout in advance. As long as there
    is no device with a different amount of memory, that should be fine.

commit 8d0acf3e9e65189c16da4d8ccc5e379533874e5e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 13 16:01:22 2010 +0200

    Parse the tank pressure for the Mares Puck Air.

commit 58759416411e5d5c3a3e864b1aef3a9f9b43cb52
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 13 09:09:14 2010 +0200

    Add support for the Mares Puck Air.

commit aca36ad344d50a91c397500797eb9ef1aa253815
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 28 14:01:02 2010 +0200

    Add a parser for the Mares Icon HD.

commit 620775af25b97ab9df84f0a7487b044f62deee00
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 12 10:19:38 2010 +0200

    Add support for the Mares Icon HD.

commit f4d3747e945c84e7d0103856858835ad30448f23
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 23 15:01:51 2010 +0200

    Mark the last memory page on an Oceanic Atom 2 as unreadable.
    
    When trying to read the last memory page from an Oceanic Atom 2, the
    device does not respond. Strangely, other compatible devices are not
    affected by this problem.

commit a37bf2049315bc40da69142bf9629bb57a795aa6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 23 13:33:16 2010 +0200

    Fix the temperature and pressure for the Oceanic Atom 2.

commit 8dd1647ede723f1c4a665c6cf8c8390732745605
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 27 00:15:59 2010 +0200

    The Solution Nitrox/Vario stores nitrox data, not tank pressure.

commit f569f402f22b414abe49b74880eb290c66fd5e61
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 22 22:19:34 2010 +0200

    Fix the decoding of negative temperatures.

commit d7c2fbbf1860bc69b596b50ef6b515366ec5c5dd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 22 22:11:52 2010 +0200

    Introduce surface samples for the pressure and temperature data.
    
    The Suunto Vyper, Spyder and Eon store a surface event after the last
    depth sample. Adding an artificial zero depth sample avoids the problem
    of having an incomplete sample without a depth measurement.
    
    Because these devices also store the tank pressure and/or the
    temperature at the begin/end of the dive, these measurements are
    associated with the new surface samples.

commit fd9390e8a83d481ec42452cd3cfe6819646ad50e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 21 23:12:24 2010 +0200

    Associate the events with the correct sample timestamp.

commit 441aad3a409e3e9c2d70afd03a942c52d1677bd7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 19 20:01:44 2010 +0200

    Add support for the Uwatec Aladin Tec 2G.

commit 13d1badf2961becef19bb4dd7697a6efef1eb516
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 10 11:30:25 2010 +0200

    Migrate from Subversion to Git.

commit f94d2b295f1a17a791744f15d3ee45b73beb852f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 6 08:35:45 2010 +0000

    Fix the 64bit integer type for the mingw compiler.
    
    The mingw native 64bit integer type is long long. The msvc __int64 type
    is supported for compatibility reasons, but requires including one of
    the standard C header files.

commit 04f1c1422b0c95626304a326487047c0b1011b0d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 6 08:35:33 2010 +0000

    Include the stddef.h header for the size_t type.

commit 4e5c9ad8a3b0d300bf345f17a194159167ae0799
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 6 06:21:59 2010 +0000

    Remove all debugging code.

commit bec8c5581efbc27dbc75b5f442b0e16f0396d450
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 3 22:09:52 2010 +0000

    Prepare the libtool shared library versioning.

commit b92deee33cc635823d738cf453951db4da634765
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 3 18:26:41 2010 +0000

    Support automatic fingerprint management using a cache directory.

commit 6641dda61715f1756a6a552e4caedf140ee24615
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 3 18:02:43 2010 +0000

    Add a parser for the Cressi Edy.

commit 60249d075d97567ab7cdf3c1ea8923469f25390d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 3 18:02:23 2010 +0000

    Implement some missing features for the Cressi Edy.
    
    The internal memory appears to contain two separate areas. One for the
    normal dives and one for the freedives. Currently, only the freedive
    section is processed.

commit 996bfb2b4839ba58e8b78dd7f969ac49c8cf1b33
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 3 14:20:05 2010 +0000

    Move the subversion revision number to a private header.

commit 2cd09fd5250d36ef218f085ae6964c3303daaf17
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 29 09:21:05 2010 +0000

    Add a more convenient method for compile/run-time version checks.

commit fed4e562ee1f998a183275d1df3046f536c3a636
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 29 09:20:51 2010 +0000

    Return the version info as a string.

commit 0976932501036f43a696fc22326d9c15909857a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 27 14:00:53 2010 +0000

    Add a function to retrieve the run-time version info.

commit e80336936438081cd3cf79ad35bd53b41ab76d2b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 27 11:34:05 2010 +0000

    Fix the datetime parsing for the Oceanic OC1.

commit 6503ff2351ccc4bc62a6d066f303f43ecfd063aa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 27 11:33:53 2010 +0000

    Use an extra bit for the pointers in the logbook entries.
    
    Due to the larger memory capacity, the Oceanic OC1 needs an additional
    bit to be able to address memory pages above 64K.

commit 61f96031314a9b550ab96fa5f37cf7ec0fab0210
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 27 11:33:41 2010 +0000

    Autodetect the Oceanic OC1 layout at runtime.

commit e87385850b6a9f3cb3f24590ecdf1a8b466b0b78
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 27 11:33:29 2010 +0000

    Use independent settings for the global and logbook pointer modes.

commit 76db1e6f44774432c92761a97ac080643ed3638f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 26 08:09:22 2010 +0000

    Locate the header marker correctly in a longer sequence of zero bytes.
    
    If the first few bytes of the timestamp are equal to zero, they were
    incorrectly identified as part of the header marker. The correct header
    marker is located a the start of this zero byte sequence, not the end.

commit 5dcfe111de7f07f1870bcd9ab612b3e08e4ff378
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Apr 24 06:57:05 2010 +0000

    Fix the temperature and pressure for the Oceanic Geo and Datamask.

commit 711ce8858382bbcfbfdc557165a0e13f98a28de9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Apr 21 14:08:17 2010 +0000

    Add support for dives with a depth based sample interval.
    
    Because the sample data contains a timestamp with a limited resolution
    of only one minute, there can be consecutive samples with identical
    timestamps. To deal with this situation, samples with identical
    timestamps are distributed evenly inside the one minute interval. All
    resulting non-integer timestamps are rounded to the nearest second.
    
    For dives with a time based interval, the timestamps are now validated.

commit fb9976d24f983857d78ca7832b454eaf78001752
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 19 13:53:38 2010 +0000

    Add a parser for the Heinrichs Weikamp OSTC.

commit b0f82da28fb3d0549e5938193e0d17dd132dc122
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 19 13:53:23 2010 +0000

    Implement some missing features for the Heinrichs Weikamp OSTC.

commit 85dd9d8bd36acf214490b5507f83eb4d3ccddb65
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 15 14:25:16 2010 +0000

    Add the subversion revision number to the version info.

commit caa3be83070d4d62ed64b9e3c6abdeeaedda1233
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 15 12:25:52 2010 +0000

    Delay the resending of a command after an error.

commit a734f40604644bb307aa99d94d9fad451193ce05
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 15 12:25:42 2010 +0000

    Limit the init response to 13 bytes.
    
    Not all devices appear to send the last zero byte, resulting in a
    timeout. If a device does send this zero byte, it is automatically
    flushed when sending the next command.

commit 0faf2bf815c047bb1ea169d1c804bc28d8d4c414
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 2 13:04:53 2010 +0000

    Use the correct printf format for 64 bit integers.

commit 33051dd29483935998fb861f85af4ff838ba7fcf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 25 09:51:00 2010 +0000

    Use different layouts for the Mares Puck and Nemo Wide.

commit 54695f10222b635ea696fba8f79c19474efaf7d7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 24 08:08:42 2010 +0000

    Fix the freedive mode detection for the Mares Nemo Wide.

commit 39b78aa2eb4244260a7722e8064283ecba37482b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 23 14:44:02 2010 +0000

    Allow the first page to be empty.
    
    When the Sensus Ultra reaches the end of a memory page while recording
    data, the next page is erased to all 0xFF, and the current page cursor
    is advanced. With this memory usage scheme, the last page will be empty
    if the previous one was just filled.

commit fe511a774cc2b562931ad4ad691a6a6c29b513a1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 23 13:41:13 2010 +0000

    Recalculate the timeout using the correct variable.

commit b9f7d4e42525223c0627ccdb140d12b8b663c8d4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Mar 18 09:40:29 2010 +0000

    Improve the ACK/NAK error recovery to fix more errors.

commit 3d1a29e912b0fe01a9e367f6731d16d801684f0e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 15 15:43:11 2010 +0000

    Fix the decoding of negative temperatures.

commit 419d5a55d5323628668c52364886eb0004d1ec21
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 15 11:08:40 2010 +0000

    Autodetect the correct layout at runtime.

commit 322577ab8c507a42cb810651228b61286537d398
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 15 11:07:54 2010 +0000

    Fix the divisor for the compass headings.

commit f14b40e99ec22b8c94e47912d0e7d953fab46e65
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 10 12:12:46 2010 +0000

    Fix the freedive mode detection.

commit de1bdd456c4b2ecfb60b43fd91a23ef1e63cfc70
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 9 15:18:45 2010 +0000

    Add a version resource on Windows.

commit f265c04161cd460f2cca30d622e3be813acde630
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 9 15:18:25 2010 +0000

    Prepare for a more flexible versioning system.

commit 33dbf8034ff98bcbbe94c09cfb5fe975c2c43953
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 9 15:18:05 2010 +0000

    Modernize the autotools build system.

commit f8ff2852bf0b53ef74fef7a825b3e142e0e6ab91
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Mar 6 11:48:22 2010 +0000

    Fix the init sequence for Geo 2 devices.
    
    The Geo 2 appears to respond with a single NAK byte instead of three.
    The issue is fixed by expecting only a single byte, and flushing the
    serial line to discard all other bytes (if there are any).

commit 1e7a1b81941dfe58a6e53e73072b4c5a778b4268
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 26 14:41:25 2010 +0000

    Use the correct freedive mode for each model.

commit 9b1a89582cb143ac119528857beed67b81862698
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 26 14:41:10 2010 +0000

    Add support for the Mares Nemo Air data format.
    
    The Nemo Air contains an extra header which can be detected due to the
    presence of a three byte marker sequence. The sample size is larger too.

commit 6b09bdb7ef5e663389ebe11b09ddbf78dc5dd381
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 26 14:40:58 2010 +0000

    Autodetect the Mares Nemo Air.

commit cb0a9c6c81e4fab6ed7fb60e642ad71ad35d232d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 26 14:40:36 2010 +0000

    Store the layout descriptor in the device handle.

commit 293b45b77c90d5ca0de36fe5c4c690cbb9753eca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 26 14:40:16 2010 +0000

    Use the common fingerprint function directly.

commit 6f622030ebf21e2ed251ba77a3dfa0c200206b5e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 26 14:38:54 2010 +0000

    Add some more HelO2 events.

commit 10edb943fffe8495d4e39a5f980b469168dbcae7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 23 13:43:57 2010 +0000

    Fix the HelO2 fingerprint, datetime and sample interval offsets.

commit b295f7153673a80b6fbcbfca632a2377681bdb2e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 18 09:26:32 2010 +0000

    Add a dummy backend for systems without IrDA support.

commit 1983e2c008f2bf86d5481c97536661b0cc6284c5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 16 14:57:52 2010 +0000

    Parse the dive data and output an xml file.

commit ba1bd5d688a3ad05d94c00610c885013c971ed01
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 16 14:57:37 2010 +0000

    Use the userdata parameter to pass the device data back to the caller.

commit ff55a4a82d14c3a290f45145d3f2a14d424095fe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 16 14:57:26 2010 +0000

    Use the userdata parameter to pass the dive data to the callback.

commit f6d35fa2c286a8a01d0c2ab7a378e22a72b9c60c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 15 13:16:26 2010 +0000

    Add cancellation support.
    
    To be able to cancel an operation, an application should register a
    callback function that returns a non-zero value whenever the active
    operaton should be cancelled. A backend can invoke this callback function
    to query the application for a pending cancellation request.

commit de889f9d466e26cb859e7b4df3af4f87e403569a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 11 08:26:35 2010 +0000

    Return the right type of error code.

commit 82a315ddc54c532cdb87e7c94cbd952f6256a2ec
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 4 10:47:13 2010 +0000

    Add an option to provide fingerprint data.

commit 4b590ba5e2cb616725fc5bde83c178ec33f9bc40
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 4 10:46:42 2010 +0000

    Pass the fingerprint data to the callback function.

commit 80352feee8b77e9275a941c0f5ca540ab63bbd43
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 3 08:42:53 2010 +0000

    Add a workaround for the year 2010 problem.

commit f5759d11c933693cc90c5aa3fdea4f462a0e1643
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 3 08:42:28 2010 +0000

    Use the year stored in the dive header.

commit a8116a0aec730e80c3b7aa3c27dbeb151f2ce2d4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Feb 2 15:04:46 2010 +0000

    Add datetime support to the parsers.

commit fab15b19a7e0281df417ffff45b86937dc0e24c6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 1 21:20:30 2010 +0000

    Add a clock synchronization event.

commit b392a49045d5050c8a0b83793aa18d1747012c94
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 1 21:20:11 2010 +0000

    Update the code to use the new datetime support.

commit 54410dab8dc0965797e44c05a2fd3e50ec939d0d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 1 21:19:55 2010 +0000

    Add a datetime module.

commit 098b229bc6ba048fabca06afd37f3bdab5f1640e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 1 13:34:52 2010 +0000

    Rename the Suunto Spyder parser as the Eon parser.
    
    Both devices have an almost identical data format. Renaming the parser
    backend makes it more consistent with the corresponding device backend.

commit ceeee5b2fa154fcbe849dda8e214d9b066a68d5a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Jan 30 21:27:43 2010 +0000

    Removed the handshake and version functions.
    
    The handshake function is now called internally (even if it doesn't seem
    to be required at all), and the version function can be called through
    the public api. The format of the version data is changed too.

commit f8b465fba1c30c112630d7eab93d63e4b8d29c72
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 25 19:46:39 2010 +0000

    Use the common fingerprint function directly.

commit ce84e85bb66358b6742b9412cb4d6e03746cfc89
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 25 19:46:24 2010 +0000

    Do not ignore the return value when writing data.

commit 87236f505a767d86461df232fa2657e072167bcb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 25 19:46:09 2010 +0000

    Remove a number of unnecessary functions.

commit a14b0b7b98fb846287205c66e1f6d372a0a6dcf1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 25 14:08:01 2010 +0000

    Do not ignore errors during initialization.

commit 898f27ad2e84d872049928f17dd625840728253e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 22 13:42:16 2010 +0000

    Use multipage reads for downloading dives too.

commit 61257a8628164cd74e15d98860b2dd06dcde2e22
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 22 13:42:03 2010 +0000

    Use multipage read commands for faster transfers.
    
    Multipage read commands can reduce the transfer time significantly,
    because the overhead of processing each single page read command is
    eliminated.

commit 5589770f305efcf566bfd3ae01d1ae5c6a705f4c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 19 14:57:06 2010 +0000

    Add a small delay before sending the version command.
    
    Trying to send the version command immediately after the initialization
    of the data cable doesn't work very well. Adding a small delay before
    sending the version commands turns out to be much more reliable.

commit 45f51fedfbafb142872ba6e11aa1d3456b69e852
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 15 10:16:49 2010 +0000

    Store the layout descriptor in the device handle.

commit 32fd37df2c5660c655d7fd8f93ac5bac8252422e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 15 09:51:15 2010 +0000

    Keep only a single PAGESIZE macro.

commit cf009cf18b78b104ff67a84a0c39c060d847bc17
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 15 09:32:16 2010 +0000

    Use the ACK/NAK error correction for all commands.

commit 067a6c630a5314868221e5278cb2178144800104
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 8 14:38:04 2010 +0000

    Add a devinfo event for the Mares backends.

commit f33b298b3a37e73501f2ff4a6261113c1a1644e3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 7 15:02:27 2010 +0000

    Handle the special case of a full ringbuffer correctly.
    
    When using the ringbuffer pointers to traverse the linked list, a full
    ringbuffer appears as an empty one. This is probably a very rare
    condition, but a very annoying one if you run into it it. Using byte
    counts and the number of dives in the header avoids the problem.

commit a6f9df16ac7da4e087c7e5f8967b113258d3dedf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 7 15:02:14 2010 +0000

    Make the empty/full ringbuffer interpretation configurable.
    
    In a ringbuffer implementation with only two begin/end pointers, it's
    impossible to distinguish between an empty and a full ringbuffer. The
    correct interpretation mode needs to be specified by the user.

commit c4931623b62fc0a5d1afc6fd7c45fcb5dd26d61f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 7 14:54:57 2010 +0000

    Add support for the Suunto HelO2.

commit b5bc493e0bdc9143cf06a04ccb6bc6c41d9ebeb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 7 14:54:38 2010 +0000

    Reduce the number of hardcoded offsets.

commit bb08248bd9b0a87636d98b25df3ede189e20af18
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 10:30:53 2009 +0000

    Add a parser for the Oceanic VT Pro.

commit 778ae70d2e550c5efe0420732de2b7ceb459ee40
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 10:30:36 2009 +0000

    Add a parser for the Oceanic Veo 250.

commit fb947c6906d60a855ee093e2b3a348ee486ca534
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 28 10:30:18 2009 +0000

    Fix the serial number for Veo compatible devices.

commit 97652c6c62884b23519a9c24c1552d1edaf720e2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 8 14:51:32 2009 +0000

    Make the bcd2dec() function available to all backends.

commit 1d69b8c021041548d8f9cf54aa18d9afe31c28bb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 8 11:24:52 2009 +0000

    Fix the spyder fingerprint offset.

commit 0edeed162a168aaecdf3a890baac3e30e9d1006d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 8 08:43:59 2009 +0000

    Skip dives without a footer marker.
    
    Due to the internal memory buffering scheme of the Sensus Ultra, the
    last page might contain a partial dive. Skipping this dive is more
    apropriate than returning an error.

commit 7f983e29fefa5697daff50e3a799223a4dd16dd0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 3 12:43:29 2009 +0000

    Rewrite the incremental parser function.

commit 421f4ed1d6a80ccd072b9546ff37f2749a47c522
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 3 12:43:19 2009 +0000

    Add functions to search for markers in an array.

commit 12d0a73abf8a6270831553febe79e6c469f923f9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 3 12:43:09 2009 +0000

    Rewrite the code to use buffer objects internally.

commit e4108a3b334b6a8a9b40825f7753e1a4bb19f273
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 2 13:55:50 2009 +0000

    Fixed an off-by-one error.

commit 5fa943d6857662a5da8a60a23b508ce823b88dd9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 17 11:02:26 2009 +0000

    Added the initial implementation for the Cressi Edy.

commit 094b70aa034f1ccab33e8c2452d077f3171f1129
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:17:30 2009 +0000

    Use the memory buffer class for downloading individual dives.

commit e883843fca64fef82aef26c237159aa58b928058
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:17:20 2009 +0000

    Use pointers to the layout structure for simplicity.

commit 54daa9b580e7033fbe4b834c8b06687872553e88
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:17:09 2009 +0000

    Remove the debugging code.

commit 13768188a883b0324dec0c8619722d37a339d9d9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:14:29 2009 +0000

    Reduce the amount of data copying.

commit 21832851af1d601129c5fb7a8b3f7892656b10db
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:14:19 2009 +0000

    Add a function to slice the buffer.

commit 12754e05f41a53a49a8e9b19b8db14706b8ec16f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:10:53 2009 +0000

    Initialize allocated memory to zero when resizing.

commit 8eb3e53b44c7df4e63c64b6a855b963ba0f7fa53
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 16 08:09:57 2009 +0000

    Add options to download only the memory dump or the dives.

commit 71d8da4f0476e9a474065ab4941097c76fb8f3f6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 12 16:30:13 2009 +0000

    Remove some unnecessary functions.

commit 7e6a57bd1c2e52c65337d7020f2d0fc49619c2bf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 12 08:18:16 2009 +0000

    Added the initial implementation for the Heinrichs Weikamp OSTC.

commit a87398b7c6bc318a623eb50886ea34d407178902
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 12 08:04:34 2009 +0000

    Implement progress events for the device_dump() function.
    
    A helper function is added to simplify implementing the devic_dump()
    function on top of the device_read() function, and enable progress
    events automatically.

commit e2c6bdf880125088ffaf5a90ba1dd3c740b4f0de
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 10 11:38:24 2009 +0000

    Add a single download application for all backends.

commit a49d2c7b3618eb83d6d09b4dda2521da7cb05909
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 10 11:36:10 2009 +0000

    Changed the device_dump() function to use the new memory buffer class.
    
    Using a resizable memory buffer allows to allocate the right amount of
    memory inside the backend, avoiding having to know the required buffer
    size in advance.

commit 69727bf855db6fb196adaafad64c7dfb92f417f3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 10 11:35:39 2009 +0000

    Update the msvc project file.

commit a3264bc471e95afd6b9242490817aec039c60630
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 10 11:35:29 2009 +0000

    Implement a more efficient buffer growing strategy.

commit 74272f4d77b2f4b4f420ee9f073c352a154edf4f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 10 11:35:19 2009 +0000

    Avoid undefined behaviour with NULL pointers.
    
    We accept NULL pointers if the size is zero, but the C standard
    library functions memcpy and memmove requires valid pointers, even if
    the size is zero.

commit d3028dc2d7cf96e3c87de796dabb2faa450cb109
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 10 11:35:09 2009 +0000

    Add a new memory buffer class.

commit 36f9fd614e36a7bd17b65ca0c842919c12897fb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 5 12:36:28 2009 +0000

    Write all messages to stderr.
    
    Messages written to stdout are undesirable when the output of an
    application needs to be passed through a pipe.

commit b59532fffb5178305382e094ccd4ce0cdfb4a149
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 2 13:14:42 2009 +0000

    Fixed some compiler warnings related to unused variables.

commit 8d808e99bbfd27d8ccd90241702130198c8dca4f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 1 17:27:24 2009 +0000

    Enable automake silent build rules by default.
    
    Support for silent build rules requires at least automake 1.11.
    Disable by either passing --disable-silent-rules to configure or
    passing V=1 to make.

commit 9baaa1866440d0708a29a0a0a87ae8920ab9e09d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 20 17:02:30 2009 +0000

    Fixed a small mistake.

commit 58f6b0e1907858f517f7baef1ad452683075ffa0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 20 13:43:21 2009 +0000

    Remove the gap between the logbook and profile ringbuffers.

commit 407ff06fb96bbc91463688dca4b5d8f4d90918ba
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Oct 20 13:43:07 2009 +0000

    Improve the empty ringbuffer detection.
    
    The logbook ringbuffer is now considered empty if any of the pointers is
    outside the valid ringbuffer area. Compared to checking only against a
    special empty value, this approach makes the code more robust against
    invalid pointers.

commit bf0dd700c186cd01160d51a12c1f40b8502f93ae
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Oct 15 09:14:33 2009 +0000

    Add a parser for the Oceanic Atom 2.

commit 50174fa55b4ebe585a6745c9979fa4d1faa5dc35
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 11 13:53:41 2009 +0000

    Update the msvc project file.

commit cc1a99b9c78ed492dbad81d0ed99abeb7cc6f12c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 11 13:51:26 2009 +0000

    Add a common base class for the Mares backends.
    
    The memory layout of the Mares Puck and Nemo devices is very similar,
    which allows to share the parsing code between the backends.
    
    The Mares Puck protocol allows for a more efficient implementation, by
    reading only the data that we really need. But as an intermediate
    solution, reusing the Nemo code is good enough.

commit a4247b7505be258c2929dd277582fbaccb1fe24b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 6 14:15:52 2009 +0000

    Define the WARNING macro only once.

commit 872f5a594de78113a21b2c5c75bd9a0c402a93cd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 6 09:52:50 2009 +0000

    Add a common base class.
    
    The transfer protocol of the Suunto Vyper 2 and D9 devices is very
    similar, which allows to share most of the transfer code between the
    backends.

commit a9d0784a9a62efe711b55ad074c1d1e57f5b5c8a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 23 07:12:22 2009 +0000

    Changed the initialization sequence to allow multiple transfers.
    
    The DTR line is used to initialize or reset the communication. Toggling
    this line before each transfer, rather than doing it once at startup,
    allows to perform multiple transfers in the same session.

commit 16191c0f51f0fec2e6a25307eacc3b5882351554
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 19 08:51:34 2009 +0000

    Use the new array_isequal() function instead of a local function.

commit 043be07af480843b74672b1ba75ede382073bd81
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 19 08:43:42 2009 +0000

    Improve the detection of an empty logbook ringbuffer.
    
    Some devices do not appear to set the ringbuffer pointers to their
    normal empty values (e.g. pointing outside the ringbuffer memory). In
    that case, there appears to be a single entry. But since that entry
    contains uninitialized memory (e.g. all 0xFF bytes), we are able to
    detect this special situation.

commit a65e9d56c529d6212c5be00d52eea39955acf09e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 12 19:13:43 2009 +0000

    Fixed a bug in the write command.
    
    The packet size should include both the number of parameter bytes and
    the number of data bytes. The packet verification code is modified to be
    able to deal with this change too.

commit 23f81c631950d0e7c6e65abe8bbcaaef5ec2ca08
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 4 08:59:55 2009 +0000

    Prefer the dump function in the examples.

commit ff26c2db706e561ca3ca712b47906fec9fcf5563
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 27 10:24:04 2009 +0000

    Calibrate the device during initialization.
    
    Although calibration is optional, it's highly recommended because it
    reduces the transfer time considerably. The calibrate function is
    removed from the public api.

commit 24f0f66efd1279e3ca5b6efe4a046cd3fd4a56d6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 27 10:23:27 2009 +0000

    Automatically switch the device into download mode.

commit da684c1fcfd89eb13012c9cb1148b75ebd9c492a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 27 10:23:02 2009 +0000

    Do not send the quit command during initialization.

commit 5a1658d30e2f189e87de4a03071b9c409d08f4d3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 27 10:22:29 2009 +0000

    Use the symbolic constants for ACK/NAK bytes.

commit f477defbf87af3e814b1b6834525c04ee3b46751
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 15 10:13:03 2009 +0000

    Increase the total memory size to 64KB.

commit 863890aa238b4a70b90d8cf81c88f8522c90eb93
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 12 19:58:01 2009 +0000

    Add the end-of-profile pointer to the layout descriptor structure.

commit 1e39b840754624f29ec2914c06388956013dcedc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 12 19:57:46 2009 +0000

    Add a common base class and a layout descriptor structure.
    
    The memory layout of the Suunto Eon and Vyper devices is very similar,
    which allows to share the parsing code between the backends. Differences
    in the layout are passed by means of a new layout descriptor structure
    and a common base class is introduced to share the fingerprint data.
    Memory buffers are now allocated dynamically to support devices with
    different amounts of memory.

commit 4c37c9c85fab781d631b5d8f38f533c790a23dcf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 11 13:20:58 2009 +0000

    Add support for the Suunto Vyper Air and Cobra 3 to the parser.

commit f0b32532961e1fb11877248e69c1f337d4bef78a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 5 13:20:11 2009 +0000

    Add a common base class.
    
    Introducing a common base class allows to share more code between the
    backends. Sharing the fingerprint data eliminates the need to pass it
    with a function parameter.

commit f642049fe24fca98d0fa5a48ab0fa07720765283
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 4 09:03:18 2009 +0000

    Enable the shared parsing code.

commit 6132ae255035f2c5336d3796db67e8930964d901
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 4 09:03:04 2009 +0000

    Share the parsing code between the backends.
    
    The memory layout of all Oceanic devices is very similar, which allows
    to share the parsing code between the different backends. Differences in
    the layout are passed by means of a new layout descriptor structure.
    Memory buffers are now allocated dynamically to support devices with
    different amounts of memory.

commit 754d573e0f027bf84c03e6fcca34fffcbb91468a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon May 4 09:02:40 2009 +0000

    Implement the fingerprint function.

commit 9089651f17130abc4a3213b0f63d7e909cadf422
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:46:59 2009 +0000

    Fix the symbols file for platforms without IRDA support (Mac OS X).
    
    When the IRDA backend is disabled or not supported by the underlying
    platform (such as on Mac OS X), the Uwatec Smart parser is disabled as
    well. The symbols file is updated to reflect this.

commit 135c903792cfc899b8122dd2a6438bed3927acc7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:46:46 2009 +0000

    Updated the msvc project file.

commit be2a27c58b79be247a8f45462df181affa6cdf8e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:37:39 2009 +0000

    Remove the handshake function from the public api.

commit 572dfa518441996031f83ed758d686d819cc79b4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:37:04 2009 +0000

    Add a function to retrieve the stored handshake packet.

commit 67363ea05c84ea1aac70f23980121a436071eb1d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:36:44 2009 +0000

    Store the handshake packet in the device handle.

commit aa7599929eadb08a4d96b1808e302ed5095f82c8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:36:28 2009 +0000

    Wake-up the device automatically.
    
    The backend is now in full control of the handshake sequence and does
    automatically wake-up the device at the appropriate time.

commit b7fcd5442c8b14a7687ca3d337a000face5b1bc6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 14 21:36:07 2009 +0000

    Use a single function for writing the device parameters.

commit 8bfe481e5854f3c93a19aabbc8e08844f4b48a14
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 09:21:38 2009 +0000

    Add progress events.

commit 6d018ab6aec3d622e91b6ae16abf434f2615ca37
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 09:21:28 2009 +0000

    Add a device info event.

commit 95089c1851c5d9e3652e2d169f5b8c7a6f5146ea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 09:21:18 2009 +0000

    Use a single buffer for all profiles.

commit 85e0b9dcbfdeb5e41ccdd872515eb2677dc8add4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 09:21:08 2009 +0000

    Read the profile ringbuffer backwards.

commit 5ce7aeffd913302aa2289a92b67c93daa47e46a4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 09:20:58 2009 +0000

    Rewrite the code to use the stored fingerprint.
    
    Logbook entries are now downloaded one by one, until a previously
    downloaded entry is identified. This approach reduces the amount of data
    that needs to be transfered in the typical case, where only a few new
    dives are available on the device.

commit 49301d1b2881bbb020f2dd4a8799bc3400a9136c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 10 09:20:48 2009 +0000

    Implement the fingerprint function.

commit c1745cc535867b96d0e583f254d009488dfa5802
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 6 07:26:16 2009 +0000

    Merge the typedef with the struct declaration.

commit 6abfa9792d345e3f27b7babfacad86c004077ecf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 30 20:30:32 2009 +0000

    Added the initial implementation for the Mares Puck.

commit 20cdb4b188fbfb5f2018a1ffe5eb4d022408fd5d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 30 19:58:06 2009 +0000

    Resend the command after timeouts and protocol errors.

commit 39f3a5b7575a80977c8dccc0cab192589a08d71e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Mar 20 08:48:17 2009 +0000

    Retry the discovery a few times when no devices are found.

commit 5cb754b01b987e7757935c611ca35fa395f8fb44
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 15:02:49 2009 +0000

    Store the clock calibration values in the device handle.

commit 801f747345762a306d503779df80491ff2253a29
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 13:12:21 2009 +0000

    Fix some small mistakes in the previous commit.

commit ce705f8244670840dbe897b645f0d3d1bac4dccf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 10:18:28 2009 +0000

    Use the new byte order functions everywhere.

commit 99c3d258d4a56c70c4d553e1f0579222d8c16c2f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 10:18:05 2009 +0000

    Added byte order conversion functions (little and big endian).

commit 1668e70c79ed72b729acafdce681f19118abb191
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 10:17:55 2009 +0000

    Use symbolic constants for the profile ringbuffer.

commit 00c3330e8dfbdce924fee431c979ad96b0204fa5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 10:17:45 2009 +0000

    Receive the entire packet before reporting buffer overflows.

commit ebfd5b4b1a4d58a7b8dc06962474694674ad5d67
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 11 08:48:29 2009 +0000

    Always use the timestamp stored in the device handle.

commit 731eaa2ce64c4728a18681abc7ca0d1bd6dfa2cb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 4 12:49:33 2009 +0000

    Add fingerprint support for the Mares Nemo.

commit 3885e6907949473ec26357711a99046ab3e6e9fb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 13:04:26 2009 +0000

    Add fingerprint support for the Suunto Vyper, Spyder and Eon.

commit a2ccc4926d2fe547ed74272d67663fa8ce1e97e5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 13:04:08 2009 +0000

    Add fingerprint support for the Suunto Vyper2 and D9.

commit 11dc4715a467f87555d479d0090d19906ad28b1f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 13:03:52 2009 +0000

    Add fingerprint support for the Reefnet Sensus Original, Pro and Ultra.

commit 03212f5c6ff99954088fb8efb769e819189fd99b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 13:03:36 2009 +0000

    Add fingerprint support for the Uwatec Aladin, Memomouse and Smart.

commit 4368b94ff053ebc55dd79910573ee774d9e4dfad
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 23 13:03:20 2009 +0000

    Added basic support for the fingerprint feature.

commit 1c736835eb36b2e2194cab1384e5453de235e009
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:26:15 2009 +0000

    Autodetect the difference between a Vyper and a Spyder.

commit 8391b4201d188554e8f8238d1e17a1e2990fe508
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:26:02 2009 +0000

    Add a device info event for the Suunto Vyper.

commit 626c28ad6cbdde661a4a939eca114feb065f1bb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:25:50 2009 +0000

    Add a device info event for the Suunto D9 and Vyper2.

commit 236d84a2531179b487f11b88ec21bf6a7718677f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:25:37 2009 +0000

    Add a device info event for the Suunto Eon and Solution.

commit 64e3f4b4bf830f0d054b2402a190913382ef71e8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:25:25 2009 +0000

    Add a device info event for the Reefnet Sensus Original, Pro and Ultra.

commit 75d379201669945324abaf0c6d432a9067270657
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:25:11 2009 +0000

    Add a device info event for the Uwatec Smart.

commit b8ff29d15dcc96cd4b7c6d6f7d6eec8b706371ca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:24:59 2009 +0000

    Add a device info event for the Uwatec Memomouse.

commit 8e05b915027e03c4427a3ae9e17421f23ab0cdbe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:24:47 2009 +0000

    Add a device info event for the Uwatec Aladin.

commit 2be97f0e1234a7d8f674bf0950cfd880d7d17a87
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:24:35 2009 +0000

    Added basic support for the new device info event.

commit f38ecdcb3f71d0b2a17867c6a3fd38e379b82868
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:12:30 2009 +0000

    Remove all legacy event code.

commit 6b4663444b653acff256ab5ddfe38470707f65d2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:12:16 2009 +0000

    Added event notifications for the Mares Nemo.

commit 204c83c150ca440fe238a4737b8bb0d19dd42944
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:12:04 2009 +0000

    Added event notifications for the Suunto Solution.

commit 845e6442f6af586e96e5ed58475062ea4a9d0d0d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:11:52 2009 +0000

    Port the Suunto Eon, Vyper, Vyper2 and D9 to the new event code.

commit 3ce6a725a95e52a2ab9dce0bbdf7517e562763a0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:11:38 2009 +0000

    Port the Reefnet Sensus Original, Pro and Ultra to the new event code.

commit 7cba1913225f33c36bfc1830602e3612d4834865
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:11:25 2009 +0000

    Port the Uwatec Aladin, Memomouse and Smart to the new event code.

commit 7c3f4e864f2a11501653bb7594b5dd3c591cbf36
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 20 12:11:11 2009 +0000

    Added basic support for the new event notification code.

commit eb9efb47e12db8ebc3e10a792787e7c7ea7439e2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 11 10:43:44 2009 +0000

    Check the length of the provided buffer space before the data transfer.

commit 679d7a2801268b11f613786f06ac33134853cc1a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 11 10:43:10 2009 +0000

    Use standard header files to define NULL.

commit 19cc36b527513372885d675879df418a970e4c59
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 6 08:27:07 2009 +0000

    Automatically abort when a dive is older than the provided timestamp.

commit e5fea5a37032f4e080911733658ab13fd6767d84
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 5 10:05:15 2009 +0000

    Added a checksum function for the Oceanic VT Pro version string.

commit fe783475840e476a692744b58cdbddd399fd900d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 5 09:59:35 2009 +0000

    Added a parser for the Reefnet Sensus Original.

commit 0645df7546a7e139f8ed142ac60a863beda99a31
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 5 09:59:19 2009 +0000

    Added the foreach() function for the Reefnet Sensus Original.

commit 873eccd2b80777c74e0662628f6cc269ecfac090
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 21 14:12:19 2009 +0000

    Updated the msvc project file.

commit cf5b2acea66b51abe92b99e9d395bb3eed2013ce
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 19 09:28:57 2009 +0000

    Automatically cancel the waiting state.

commit 2315f066a98f5db4de209cf2d30084e94dd26fb8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 19 09:28:10 2009 +0000

    Added the initial implementation for the Reefnet Sensus Original.

commit 8f845c5fe667eb2ea5961d434be53fce7c5ff6d3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 7 10:07:37 2009 +0000

    Reduce the very large timeout value by polling the serial line.
    
    The event reporting is improved as well, by emitting more waiting
    events.

commit c55bbede1d217b8fe54e531bfa38267a0f1b20bc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 6 21:44:40 2009 +0000

    Fixed some warnings related to missing initializers.

commit b434fa344bdf59341d59d1c5cf15c965efab1e90
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 6 21:44:25 2009 +0000

    Fixed some warnings related to shadow variables.

commit 5cde8bdb52603755ba162927f187990d65974203
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 6 13:09:19 2009 +0000

    Declare functions with no arguments as void.

commit d94ecdad25a7b8af200f550b8ce5911a3a926ee8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 6 13:09:06 2009 +0000

    Check the correct variable for NULL.

commit cf8fc54316140795ff46f67bb7fb24d505791774
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 6 13:07:22 2009 +0000

    Updated the Oceanic header file.

commit 9a61ecf49305b67e9c13f4f0a44919a5ced4da2e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jan 2 21:34:54 2009 +0000

    Updated the msvc project file. Patch by Eric Bourque.

commit 1eedd33b5d35bc30b3071aa9dff658a865dda71c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 27 16:18:01 2008 +0000

    Added write support.

commit 7195c000e428b8b9a5e4ef57f4be974738850b3e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 27 16:17:49 2008 +0000

    Added a new function for the keepalive command.

commit 56b52f8fad0f172ccc4554ab92184bb7d25f7f6c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 27 16:17:35 2008 +0000

    Take care of the init and quit command internally.

commit fb9a3f3872e9eb24978a82d211c04c36c9777a45
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 18:20:48 2008 +0000

    Added a parser for the Suunto Solution.

commit a04b9e75c6f9f6b8a72b84297d2c6307dead82b0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 18:20:33 2008 +0000

    Added the foreach() function for the Suunto Solution.

commit c509fe9343527825687c56497228b3c279e60e76
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 18:16:40 2008 +0000

    Added the initial implementation for the Suunto Solution.

commit 471f079c2e11b9b9ef0f6ea9a6a6f450ebed517e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 17:38:39 2008 +0000

    Handle partial dives near the end of the ringbuffer correctly.

commit 6242ba9a135a34087333c008267a037e0636ac34
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 17:38:26 2008 +0000

    Added a parser for the Mares Nemo.

commit aac5caf6642aec326d68c1720186c46874eb242f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 17:38:11 2008 +0000

    Extract the freedive profile data too.

commit 1034912313f7c5684390c6ab3b9a7c9ee2a97415
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 17:37:59 2008 +0000

    Added the foreach function for the Mares Nemo.

commit 02e0f3754697d81627d6a9602328832f2da14777
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Dec 23 17:37:45 2008 +0000

    Added the initial implementation for the Mares Nemo.

commit a6cee60b08f5e226b500533bd2da7ef10cec85c9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 11 07:07:17 2008 +0000

    Forgot to add the calibrate function to the public header file.

commit dde21e649ba4d09984513333d5ae5d1c73cdc484
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 10 13:37:56 2008 +0000

    Forgot to update the list of public header files.

commit 9f13949bd4b9d33029d9eb7276bf37da3dae1da3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 10 13:09:29 2008 +0000

    Added a function to calibrate the interface.

commit c322b2cb292a8cfe7f2b0ef6ef032059f874b8f0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 10 13:09:15 2008 +0000

    Added the initial implementation for the Oceanic VT Pro.

commit 1b18f0f91e0b9e2477ff5a77600dcba6fe3eeda3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 4 15:10:35 2008 +0000

    Generate the module definition file automatically from the symbols file.

commit 0d30a07f5b3e81152e5f229d05a1ba671de6a454
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 4 15:10:25 2008 +0000

    Always use the ANSI variant of the Windows functions.
    
    The current api is not compatible with the wide character data type that
    is required for the unicode variant.

commit 61291646295e68ea4c26ef8d89b29f553c29edb1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 4 15:10:14 2008 +0000

    Use the non-standard _snprintf() function for msvc.

commit c38088aed59eb0acd2af30eb127b7a3fcfd34ff1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 4 15:10:04 2008 +0000

    Added a project file for the MS Visual C++ 2008 compiler.

commit 23ea0d5e1822799588fc58471701d96cf9a95978
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 4 15:09:54 2008 +0000

    Added some explicit casts to be able to build with a C++ compiler.

commit b57c4054407fe5be1af3c1fc1bbc92098675e627
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Dec 4 15:09:40 2008 +0000

    Convert to unix style line endings.

commit b4030895118435714e73e3fcf1948cca4dfa945b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 26 10:11:40 2008 +0000

    Renamed the handshake function to indicate it sends the quit command.

commit c120f98754dd8f5c89b52350e49c42be29bd8bd4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 26 10:11:30 2008 +0000

    Stop reading the response to the init command in the handshake function.

commit 92b7a98260b7d9235e9732777bac9cda701890eb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 26 10:11:20 2008 +0000

    Use a symbolic constant for the location of the pointers.

commit 6d1ee170695e7593a5794d740a10aace1cae7e89
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Nov 26 10:11:10 2008 +0000

    Added the foreach() function for the Oceanic Veo 250.

commit 3b61ef6f6306adda4e4485ad2a6696fcd43ac8f2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 21 08:40:30 2008 +0000

    Use the address of the last read page in the keepalive command.

commit 3c36f9d1665df9ed250ebb19595d2f8a1a51e99e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 21 08:40:19 2008 +0000

    Added a new function for the keepalive command.

commit 2a7e4fdc7db2811fe6bb20b864c4a923f7c71bf0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 21 08:40:08 2008 +0000

    Discard garbage bytes before sending a command.

commit 9ac00891b554f797a7e1b1dd93fcec9a5cb527ba
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 21 08:39:57 2008 +0000

    Added the initial implementation for the Oceanic Veo 250.

commit 25d2f51870ec01826c327495ee796d45bc53d6b3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 20:30:56 2008 +0000

    Merge the Uwatec Smart and Galileo parsers.

commit 03b7e3091eef9de9fa18c3785db45106b2c45646
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 20:30:40 2008 +0000

    Prepare to merge the Uwatec Smart and Galileo parsers.

commit 019b807e0f9fcceaefad4034c89976dca3cea7a8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Nov 10 20:30:27 2008 +0000

    Port the changes from r179 to the Uwatec Smart parser.

commit 7d9ffdc3f8fca1cc1acc35d9791a7356f3394ae6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 4 11:41:10 2008 +0000

    New method to detect the presence (or absence) of pressure samples.
    
    The previous method failed for some dives.

commit 2e2031d73885264e68d800bc7250c9ee824bd9f4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:06:33 2008 +0000

    Use separate variables for the signed and unsigned values.
    
    Because the number of bits in the datatype is not necessary a multiple
    of 8, the conversion can't be done with a simply cast.

commit 53bb7778c70798e289a0ac91aca44ebcca04bb4f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:06:17 2008 +0000

    Set the initial rbt value to 99.
    
    Some models omit the absolute rbt value in the profile data.

commit ee51a528c7715d3eeee74da337569cd5cae742d6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:06:01 2008 +0000

    Added a parser for the Uwatec Galileo.

commit 8899fd1270cd8d03d4ba27236fed29fb0396fcac
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:05:46 2008 +0000

    Added support for compass bearings.

commit a5cabb555030a1afef65bb0adfdf46da62cc88db
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:05:31 2008 +0000

    Use only 1 byte for the alarms.

commit 56c289375868436ff22314921b15fb3c70bbe6fa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:05:15 2008 +0000

    Ignore data bits that are stored in the last type byte for some samples.

commit 52f7d01380755337328e07cbbea9061ba616941b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:04:59 2008 +0000

    Added a parser for the Uwatec Smart.

commit 1a3611867169eefe223ac4537af01f4c0ef702c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:04:44 2008 +0000

    Added a parser for the Suunto D9 and Vyper2.

commit 774c8ea2c002c1398185a1d191379c2bb0940d4e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:04:28 2008 +0000

    Added a parser for the Suunto Spyder.

commit 0395a8e542ae976fcd0295d65e557c448b14d17d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:04:13 2008 +0000

    Added a parser for the Suunto Vyper.

commit c3419542e0c33814e51edd66acee5e6424289c5d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:03:57 2008 +0000

    Added a parser for the Uwatec Memomouse.

commit 40da0a34db045eb43e06f3c5137aa3771bfd1e50
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:03:42 2008 +0000

    Added support for vendor specific sample types.

commit 8d6c72fa6045a1338416c9fedd2c282311c87ff3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:03:26 2008 +0000

    Added a parser for the Reefnet Sensus Ultra.

commit ce57cc756dd56a1ef3a1a0d9af8fb8f2319b178c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:03:10 2008 +0000

    Added a parser for the Reefnet Sensus Pro.

commit e01cbd917c5d3ca1430a6c681c398cbb3d93feee
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:02:55 2008 +0000

    Added constants for doing unit conversions.

commit 08e84cb8fccee751140f8d4097a9c7d8fd374d01
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 31 14:02:39 2008 +0000

    Added a base class for the parsers.

commit 596af5a17bcda656edf87519bb8a330bf58e6d91
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Oct 5 20:14:18 2008 +0000

    Add LGPL license headers.

commit 5a570d17320e8839592119839e55477a407e5be9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 3 17:34:03 2008 +0000

    Only export functions that are part of the public api.

commit ce2f9359cba586d195628a3425754cd58b218307
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Oct 3 14:56:41 2008 +0000

    Removed the interface detection code since it is no longer required.

commit d05ff6bb095fe0e2e52bfffc261b9c5189ca7358
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 27 06:10:27 2008 +0000

    Mark the private function as static.

commit 537f8a51c1d890e6aefbcdee495ff3957bd78fda
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 27 06:09:56 2008 +0000

    Convert to unix style line endings.

commit ffe99a87249a8c3059cf59bfe62c95128144246c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Sep 27 06:09:14 2008 +0000

    Always read at least 8 bytes, because reading fewer bytes is unreliable.

commit 276f45acd28a1e48850069bc095d161f642a1445
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 3 10:16:35 2008 +0000

    Allow the library to be compiled as C++ code.
    
    Moved the initialization of the backend pointers to the beginning of the
    source file. Without the need for a tentative definition, the library
    can be compiled with a C++ compiler.

commit 376ce23ce2ea57f97b75fb48212a98f7c5fc3400
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 3 10:04:13 2008 +0000

    Include the public header file.

commit dfeea21c3612dee12077966a29e0070251563172
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 3 08:51:07 2008 +0000

    Add explicit casts to improve type safety.

commit 599827d5a34eba492cf256873b0e2752fd55b52a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Sep 3 08:46:21 2008 +0000

    Improve the type safety by using the device_status_t enum.

commit 9f1e100fe8c81cfeb932e39a77083c49ac267dcb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 28 21:35:26 2008 +0000

    Fixed another misuse of the status codes.

commit b031d8dc2c3ed7ca817fbdf1252ac5b286acf756
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 28 09:07:09 2008 +0000

    Stop abusing status codes to return size information to the application.
    
    When necessary, an output parameter is added to provide the size
    information. Status codes are strictly reserved for providing status
    information only.

commit d9170ad576e918e54cf78ff7fc1f37332853ec44
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 12:59:05 2008 +0000

    Implemented progress notifications for the Suunto Eon.

commit e2ec7329e6819ff9ffbbe8201425a3459a7997f0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 12:36:04 2008 +0000

    Implemented progress notifications for the Uwatec Smart.

commit 2e4026ffc459cb1b1e1bb841e7304940572f617d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 11:53:25 2008 +0000

    Implemented progress notifications for the Uwatec Memomouse.

commit b884d90125dc166b08a95e6d09d98603ac22b587
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 11:37:04 2008 +0000

    Implemented progress notifications for the Uwatec Aladin.

commit 7e9a1be44588a00501db2396f5a61a171bf59fcb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 11:24:01 2008 +0000

    Implemented progress notifications for the Reefnet Sensus Ultra.

commit b3c1de2336753b4c80966060270c9b2ca2fc18b6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 11:18:17 2008 +0000

    Implemented progress notifications for the Reefnet Sensus Pro.

commit dd847c5cf65b5b88364b77c5c2796806fdf58dd8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 10:17:13 2008 +0000

    Implemented progress notifications for the Suunto D9 and Vyper2.

commit ddf43fb828dfcbc9a2640bd46308da9f8c4d6ffc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 09:58:42 2008 +0000

    Implemented progress notifications for the Suunto Vyper.

commit 1b957f25882856f5b017ce92edf27e2936be5514
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Aug 19 09:53:07 2008 +0000

    Added the initial support for progress notifications.

commit f467f4fd8d4f47b89447f0ec148d12ac40575aff
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 14 10:30:33 2008 +0000

    Automatically abort when a dive is older than the provided timestamp.

commit 6306e4e625255869c8a4b27d7191546003f7551c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Aug 14 09:45:49 2008 +0000

    Moved the code to extract dives to a single function.

commit 5e8d18944a3c940e1ee0626991f49cb2b1a4dd91
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 30 09:03:37 2008 +0000

    Moved all array reversal functions to a common file.

commit 7c03ddcb156f292ee1b301d0e850317e356cbb32
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 30 08:56:08 2008 +0000

    Moved all the checksum functions to a common file.

commit eee1c4cd740f816de6b3ceabd287cac3b597e4f8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 29 18:13:03 2008 +0000

    Fixed a bug in the previous commit.
    
    The dump() function returns the size of the downloaded data, not a
    status code.

commit 44e76cfa8ea635ee984e22df1b64dd49fc1a1a4a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 22 07:57:00 2008 +0000

    Implement the device_foreach() function on top of device_dump().

commit 5ae3b98d5dfaf531ff3e00d957823b7d12bd83ec
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 22 06:05:36 2008 +0000

    Implement the device_dump() function on top of device_read().

commit 16b14e55ef998f395bfd70c0b5b1eed51fd606d2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 22 05:35:08 2008 +0000

    Allow to abort a transfer by returning FALSE from the callback.

commit 4f6329580277c5ffa14a65e4580c63ef0adcc92f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 22 05:31:26 2008 +0000

    Add a function to initialize the base class.

commit ba919d0b1553bcca3c37ba3a8db55e1eb7bd0db6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 18 15:01:36 2008 +0000

    Add autotools generated files to svn:ignore property.

commit eaf10b59da4db0f4764247275119b21ab15806f9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 17 05:25:53 2008 +0000

    Rename the device_download() function to device_dump().
    
    The new name makes it more clear that it's not the recommended function
    to download data.

commit 59b123eb5ccc71bc963599e0c23335c1a2a3c40b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 17 05:24:58 2008 +0000

    Corrected the name of a function in the header file.

commit c40f67c557fd25c26f9b9ea39b656c266f3f3049
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 16 16:59:31 2008 +0000

    Skip the entire header of the packet, not only the first byte.

commit a5143d8c7cdca611f823eb0a83ab4530b4d9774b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 10 12:25:02 2008 +0000

    Wait a small amount of time before sending the command.
    
    Without this delay, the transfer will fail most of the time.

commit d12a44c4580ff6a2a021e69cc6c4167266994e5a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 10 08:10:04 2008 +0000

    Always return the size of the downloaded data.

commit 8a90c18a06030848bd0372eb4d5b9ff6a6ef1d88
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 10:11:14 2008 +0000

    Port the Oceanic Atom 2 to the new api.

commit b99a32d6435babff2f8dec6498252f088ea176cc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 10:06:46 2008 +0000

    Remove all remaining pieces of the legacy api from the Uwatec code.

commit 080cbffe1f5967bef86939f3748c49ac6e675281
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 10:03:51 2008 +0000

    Port the Uwatec Smart to the new api.

commit cf82a0a5453a9c514391543a6421499785e53fbc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 09:37:21 2008 +0000

    Port the Uwatec Memomouse to the new api.

commit 644d84db7bb1e641257ab8a20b046f52dabdee5d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jul 8 09:32:45 2008 +0000

    Port the Uwatec Aladin to the new api.

commit 4ec390303ee941edb7118f92e4b3c4f71c70785f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 7 12:54:25 2008 +0000

    Remove all remaining pieces of the legacy api from the Reefnet code.

commit f561e591b456e4c797045720cc30ee570a164bf7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 7 12:51:29 2008 +0000

    Port the Reefnet Sensus Ultra to the new api.

commit 954856522059f4561e4a4738bdb1198dbf418f1e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jul 7 12:48:47 2008 +0000

    Port the Reefnet Sensus Pro to the new api.

commit 92bdb5dd1ed95956b98f7bc7588cb04aabace81a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 21:43:09 2008 +0000

    Remove all remaining pieces of the legacy api from the Suunto code.

commit 630f32ff8e4dacc32fc6cdbda8e4cd137e423ca1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 15:02:16 2008 +0000

    Port the Suunto Eon to the new api.

commit d0823f6a9d18033fb22185c13801cc4ccef8b2ec
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 14:10:38 2008 +0000

    Port the Suunto Vyper2 to the new api.

commit 8d3c7b29b8e2efb56f558dcb7e5c54755cba13a5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 13:47:37 2008 +0000

    Port the Suunto D9 to the new api.

commit a5fb93d1999aa9baa596d65fbd8a9208470b59ff
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 13:35:57 2008 +0000

    Port the Suunto Vyper to the new api.

commit ea01b66dec3de843f52d291e44d13b5c112fdf18
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 12:49:47 2008 +0000

    Added the first steps towards the implementation of the new api.
    
    For this new api, each device will be implemented as a separate backend
    for a common interface. This will make it easier to support multiple
    devices in a single application.

commit 3ec8bb025caab858a889ad6dc2ced652d46b077b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jul 4 06:37:25 2008 +0000

    Added a constant for the size of the version data.

commit c938a893593fa7ea2e596ec41e186cdfbaee4e58
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 3 09:46:18 2008 +0000

    Write timestamps to the logfile.

commit 0f625f601fd14bdb29fa861fcca7a0167a33e38e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jul 3 05:26:47 2008 +0000

    Defined a few macros for the ringbuffer code.

commit e4ab71db47f3eed2fd0044a02c0f8b1a0d093602
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jul 2 12:04:53 2008 +0000

    Added a more strict check on the ACK/NAK response.

commit cd20f8a02dc294ba2fea18cc829fa079024520c0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 30 12:04:14 2008 +0000

    Split the transfer code in a handshake, version and read function.

commit 03b186e88b0868ae070861d8dedbc7d3fc242389
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 30 09:22:05 2008 +0000

    Treat the first byte of a packet as an ACK/NAK byte.
    
    The first byte of a packet seems to be an ACK/NAK byte, rather than a
    real packet header. The implementation of the transfer function is
    changed to match this observation.

commit 16f12123a37d416018b1f0439f83bbb0624d524f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jun 30 07:50:36 2008 +0000

    Moved the handshaking to a new function and added the quit sequence.

commit 734d0cede556708c7df3ed28fb8c1eedd1477d46
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jun 24 12:28:44 2008 +0000

    Added a function to read individual dives from the Oceanic Atom 2.

commit 4b2a3918fdb2669b13e2d813dfa6952d5f120219
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 20 13:43:19 2008 +0000

    Fixed some compiler warnings.

commit 1a1807a4cc73337b749996fae580584904862348
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 20 13:22:33 2008 +0000

    Fixed a small error where two variables had the same name.

commit d629e02ca250d5f94306d1bb1d5b346216318d99
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 20 13:20:29 2008 +0000

    Moved all ringbuffer operations to a common location.

commit 27ce6102eeab636ec3b4bffc74b7e944aa1fa3fa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 20 12:54:34 2008 +0000

    Updated the Suunto Vyper2 code to match the D9 code.

commit 4142431b36911b62ef62ceaeaecfae388c46245a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jun 15 18:18:22 2008 +0000

    Always return an error code if the supplied memory buffer is too small.

commit 330e6a07ad3f5b21663e79d5d47cf893a28df3b2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jun 15 14:10:28 2008 +0000

    Use a temporary buffer to download the data.

commit 2d8823794983d436647c8b8883216a36511af3b3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Jun 15 12:51:38 2008 +0000

    Simplified the exitcode macro.

commit 6ce9a8e3b92324609a2fa27f4c8dfe23e5f5ebc6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Jun 13 08:45:22 2008 +0000

    Added a 100ms delay before sending the handshake command.

commit 35f6b4845e6cd4026e34e19e7dcdb9af6fdb9314
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 12 08:19:59 2008 +0000

    Removed the feature test macros.
    
    On Mac OS X they disable the definition of the timeval macros and on
    Linux they are defined by default. Thus removing them makes everything
    work on both platforms.

commit 209aa53894b166540f8e040c34fb4266a50389b0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 11 15:23:12 2008 +0000

    Added the initial implementation for the Oceanic Atom 2.

commit ab5a3ffa551c42b78eac62ca56ca73e2ec2a50a3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jun 5 08:44:35 2008 +0000

    Added pkg-config support.

commit 5b8410f98b5a357af6eb3de846062d2f722ce683
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 4 13:56:41 2008 +0000

    Start using autotools to build the project.

commit 0312351bac7da0cdd172918795405aa4e8f595ca
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 4 13:30:55 2008 +0000

    Reorganization to separate the library and the test applications.

commit df8f9e24f2d899c4d72822367519436edde018f4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jun 4 13:18:57 2008 +0000

    Made the discovery function static.

commit 987b785de479460c4699f59f949e8af31090429b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 23 20:36:31 2008 +0000

    Make the public API return the size of the downloaded data.
    
    And renamed a few variables to make the code more consistent with code
    elsewhere in the library.

commit 1d50bcf732e5e90024aa3b19c801db9921b54f39
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 23 20:31:21 2008 +0000

    Added a public API function to set the oldest timestamp.

commit a540260f6185be922cce1e370bd91b07a6bb6c73
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 23 20:12:16 2008 +0000

    Added a function to read individual dives from the Reefnet Sensus Ultra.

commit e0151bacf42319f08732b234c17ca124985d922f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed May 21 10:53:22 2008 +0000

    Added a function to extract individual dives for the Suunto Vyper/Eon.

commit 0c2444ae070ff46e3e7162ff3f5084f1309ef5b1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 20 09:57:14 2008 +0000

    Use a dynamically allocated memory buffer.
    
    Since the memory capacity of the device is unknown, a fixed size buffer
    could cause problems. The public API now returns the size of the
    downloaded data.

commit 400143a0c45919c84b799777a8154963544c26dd
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 20 09:24:31 2008 +0000

    Removed some unnecessary code.

commit 857cd39c545976cb2a26be63e434da41736d282f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue May 20 08:59:15 2008 +0000

    Simplified the error recovery by moving the code to a separate function.

commit 9c30a7268336f04cc61ecca09c61bdd3fd3670f4
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 16 08:30:49 2008 +0000

    Added a public function to control the maximum number of retries.

commit 21ecc37946b27510f719f4d9167165d9fa081784
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 16 07:54:38 2008 +0000

    Separate reading and verification of the prompt byte.

commit d6f2e575d172767f2f7975de889e49d17f6d33a8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri May 16 07:47:45 2008 +0000

    Moved the code to read pages and the error recovery into a new function.

commit e8ce10ffb35df0ca08d4dddcfbbc6c6e4d2042dc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 15 14:20:32 2008 +0000

    Return the dives in reverse order (newest dives first).

commit f37740be7561ece96e09e62b9b214b2c127b728a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 15 13:43:54 2008 +0000

    Added a function to extract individual dives from the binary data.

commit e5ad3767645888cf296f67adc47ced33f8664a15
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu May 15 13:22:26 2008 +0000

    Added a function to extract individual dives from the binary data.

commit 311170f2b8510ee152da6626889a7ba223e004fa
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun May 11 15:05:21 2008 +0000

    Added the initial implementation for the Suunto Eon.

commit 98b5d06be66a455b3a425b21da134ed7c3f95998
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 10 19:15:13 2008 +0000

    Added an auxiliary function to reduce the amount of duplicated code.

commit e9956f50f0c8890e9704a5ce55511fffba4df76c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat May 10 19:06:35 2008 +0000

    Fixed a small error.

commit 5b0810c324e4a8c286be21e9c847a1b0de099317
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Apr 17 08:04:04 2008 +0000

    Added a function to extract individual dives from the binary data.

commit 30ff9e667ac6c07e6f5ed98abe6bf2c7d8e14cec
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Apr 16 17:48:50 2008 +0000

    Fixed a mistake in the transfer protocol.
    
    The device sends the size of the data stream before the actual data.

commit c2bc70e8a0f8434097c856345d7692a23ac2ad92
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Apr 11 13:45:42 2008 +0000

    Return only after all data has been read or written.
    
    And added a function to retrieve the number of bytes waiting in the
    receive buffer.

commit 71a5c0ac3f923baf539cbcf4245edcb3ad5e3ee3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 8 08:16:32 2008 +0000

    Added the initial implementation for the Uwatec Smart.

commit ea32784273825c16a2b2472e5eb625a4bca7e4ea
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Apr 7 12:15:12 2008 +0000

    Added the initial support for infrared connections on Windows and Linux.

commit 0ae0e9e69f883a6399ece0e7a39f6aa53403ae11
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Apr 1 12:20:13 2008 +0000

    Return the dives in reverse order (newest dives first).

commit 1fdd9f186dd43c65492063a7e82616c96e0af941
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 31 09:24:34 2008 +0000

    Added a function to extract individual dives from the binary data.
    
    Each dive is converted from the Aladin format into the Memomouse format.

commit 4d12b4b4913a1c0efe3ace5adfd75d7cb680779c
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 31 09:21:41 2008 +0000

    Added a function to extract individual dives from the binary data.

commit 2a1cd50910de705aa5ca7d3b8f2ba10f296a8c2b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 26 09:53:42 2008 +0000

    Implemented the callback function to read individual dives.

commit 7dd1d19eabe9f3aba6543b2a802b1a2266ef8bcc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 26 08:47:14 2008 +0000

    Reduce the number of read operations.
    
    Only the header of the package needs to be read separately (to obtain
    the size of the entire package). Removed the suunto_vyper_recv function.

commit fcf11209b7f36d3166097385a069c5856ae7b0d0
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 18 10:17:51 2008 +0000

    Added the initial implementation for the Reefnet Sensus Ultra.

commit 3918ca99c5a4a7b02d7ecb271230b6e58300597a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Mar 17 14:47:38 2008 +0000

    Added the initial implementation for the Reefnet Sensus Pro.

commit 8faae1459152a760eae04b1232e8659234512be7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 12 11:06:34 2008 +0000

    Simplified the download code.
    
    With a memory buffer that is large enough to store all profile data,
    there is no need to use an intermediate package buffer.

commit feae81bd45bf26d86a792c6eac5300657bc61ee3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Mar 11 15:58:54 2008 +0000

    Move the function to read individual dives into the library.
    
    A callback function can be provided to process each downloaded dive.

commit 02bb6019ee0eefb3cb5fbddbc25707ffb476fe16
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 5 10:14:47 2008 +0000

    Show the commandline parameters in the logfile.

commit 7c466009fd5b5252dae25dcac5e539f33c86fed2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Mar 5 08:30:41 2008 +0000

    Skip the last 2 bytes when reading the ringbuffer.
    
    It turns out that those 2 bytes do not contain valid profile data.

commit 0025221268bac6e9cf803fc25a3955b77cb6e0e6
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 28 14:20:51 2008 +0000

    Fixed another regression in the timeout code.
    
    The assignment needs extra parentheses, because it has lower precedence
    than the relational operator.

commit 032f39cdd6c93b862f309b4efb04e49dbb743ac1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Feb 28 09:56:18 2008 +0000

    Fixed a regression in the timeout code.
    
    The timestamp was not updated when calculating the remaining timeout.

commit dea1ae15182d75c2b521817378480707babadbdb
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Feb 24 19:52:12 2008 +0000

    Added a function to assert or clear a break condition.

commit 25d8fc0969217f615b5ec7c75eb4373a9ba83ae8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 22 11:12:15 2008 +0000

    Some more code simplifications.

commit 1b44b886c00687d2d0be635d8a64454144e0f912
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 22 10:49:45 2008 +0000

    Cleanup and simplification of the posix timeout code.

commit 52a9293e7d37951b50e777e6335e1053dc420830
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 18 14:41:28 2008 +0000

    Automatically retry the command if the device does not respond.

commit f74e17068f5c0ed69bd456ade71dc4b0e03e93e5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Feb 18 14:26:46 2008 +0000

    Removed the suunto_vyper2_recv and suunto_d9_recv functions.

commit 6f4d8634987ee8c45e8e39c874c3a66621deadb3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Feb 17 09:01:40 2008 +0000

    Read the entire package with a single operation.
    
    Since the package size is known in advance, there is no need to read
    each part (header, data and checksum) separately.

commit 4d30b19251b4bcfb121ea96dde2115f94bc3997a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 15 15:57:45 2008 +0000

    Use the select() function instead of poll().
    
    The poll() function does not support (serial) devices on Mac OS X.

commit 4be1c33ca34ca697429945a26c6aca0505c2a76d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Feb 13 15:55:16 2008 +0000

    Added the initial implementation for the Suunto D6 and D9.

commit 898b1479bc9ddd0015badd212aca28e2f0600e96
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 8 14:17:38 2008 +0000

    Set the fAbortOnError flag explicitly to FALSE.
    
    This change prevents some unexpected errors.

commit 0b5c63995f95e35b8735f94119209a49104e7181
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Feb 8 09:02:36 2008 +0000

    Added support for the Mac OS X operating system.

commit 331ecf1a09de43f973b086193c273db126f0e68b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Feb 3 06:29:07 2008 +0000

    Added a function to change the delay between two commands.
    
    Some dive computers do not work well with the default delay. But
    increasing the default delay would make the transfer unnecessary longer
    for all others.

commit fa20dbb87d9dc70042df9656167586a315444893
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Jan 28 13:52:29 2008 +0000

    Added the initial implementation for the Uwatec Memomouse.

commit 0d800dba959a7bcd930daba1a1b7823bc18a2f6e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 24 10:48:11 2008 +0000

    Do not return the checksum bytes to the user.

commit 6ca41591496d32e8e6aef3a76658922b764d3b04
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Jan 10 09:20:11 2008 +0000

    Added the initial implementation for the Uwatec Aladin.

commit 7f3382dfd7fb023414cd7d21cf5d89b6bfed05b1
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Jan 8 15:58:19 2008 +0000

    Added code to transfer only the dive data from a Suunto Vyper2.
    
    The dives are transfered in reverse order (newest dives first).

commit a004a94c2a2576e9417a4229b0d3bc892c38f446
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 2 12:11:31 2008 +0000

    Added utility functions to duplicate all output to a logfile.

commit 8b52082a2f717a535687895318470679d082f096
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Jan 2 12:01:39 2008 +0000

    Updated the comments on the timings of the original Suunto interface.

commit bc229099af3d1e8ac505589c2c6f17765df097b5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Dec 29 19:06:23 2007 +0000

    Added a missing function to the header file.

commit a63a1e4576949a81b1a1c8fbc03bd1289fb9033a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 19 10:16:00 2007 +0000

    Added the initial implementation for the Suunto Vyper2.

commit 50bc70d89a2fa5a3da19e7fa3b85fac7aa5d4ae8
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 19 09:24:09 2007 +0000

    Use common error codes for all Suunto divecomputers.

commit ec04cc516cc9af73aa6f97f47d7ea9586575969a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Dec 19 09:15:12 2007 +0000

    Prepare to add support for other Suunto dive computers.

commit e67d470c11668f2a08061ec5fe4571e521ee0b47
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Dec 7 12:17:35 2007 +0000

    Return success when trying to close a NULL device.

commit 4a8c15dafebf3e53efc3c9f0f5eb661b956d8487
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 3 14:39:09 2007 +0000

    Changed the default timeout to 1000ms.

commit 3f22a2d3e51e0e9fc592341622e4971b9421c268
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 3 14:38:47 2007 +0000

    Add extra debugging code when a null package is received.

commit d265228b2673346ae9ac5d6b4d8b0009c2c2719d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 3 13:56:22 2007 +0000

    Improved some code comments.

commit 4d4b0f141fc2b47b30d0fc417583faaa666d019a
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Dec 3 13:54:21 2007 +0000

    Do not detect the first package by means of the number of bytes.
    
    If the first package was a null package and the transfer was not
    aborted, it does not work properly.

commit b9a43e3157d14159b48437ba892672fc304f5c38
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 29 09:08:25 2007 +0000

    Do not flush the input and output buffers when configuring the device.

commit 40835b8d80945556d07a58c07f8585dc941e1026
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 27 15:09:38 2007 +0000

    Added a function to configure the size of the input and output buffers.

commit 295c95ac037a7af6c36fceba794ccf21f3e1b223
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 22 15:46:44 2007 +0000

    Fixed include file.

commit ec0e90a738379fb2cd96c1fd62b478f8de82ed54
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 22 15:39:09 2007 +0000

    Renamed the dumpfile to avoid confusion with the dumpfile from SDM.

commit b847086ad79008957928c0fa136ab5e18644dcd3
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 17 09:40:24 2007 +0000

    Do not attempt to read data if it's not required.

commit 5e9279b99d0671937a3a3b7e1a5b9e641da841cf
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 17 08:53:54 2007 +0000

    Read the package length and header with a single read operation.

commit 40e37e66754793ab25a9c0d785aef92b3c48932d
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 16 15:37:50 2007 +0000

    Removed some unnecessary functions.

commit 8f4ebf434c74367389bb8c9d4ba4ce5d6f95446f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 16 13:34:13 2007 +0000

    Reduced the amount of duplicated code.

commit 7f158ff8f68e98a81fe2e172b954186dd2c03189
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 16 11:28:48 2007 +0000

    Use the SUUNTO_VYPER_PACKET_SIZE macro.

commit 7747a6d4bd3efe334e1aa05d602ecabbc2790ebe
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Tue Nov 13 09:48:59 2007 +0000

    Use the result codes in the test application.

commit 8b6db7587334e53183b132366bb596ca86154857
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 9 15:07:57 2007 +0000

    Return more useful result codes from all public api functions.

commit 84e76103c279f4655148f733dc9c194e7fb92707
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 9 14:57:46 2007 +0000

    Updated the code comments on the timing of the echo cancellation.
    
    I measured the echo is arrives after approximately 40ms.

commit 7e75ee3831707449a877a834f4d8927a1f87c0c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 9 14:41:33 2007 +0000

    Setting the RTS line is not really necessary when opening the device.

commit 627ba48bc28bdd5d8a46d963ca2de7be6e891514
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Fri Nov 9 12:47:56 2007 +0000

    Use a macro for all warning messages.

commit 07265e3571c4791a73c37fd4de3c20bbc42fe8c7
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 8 14:46:10 2007 +0000

    Change the echo cancellation to match with Suunto Dive Manager 1.6.
    
    Detection of the interface before reading or writing is not required
    anymore.

commit 94ff25e8a4e36a7dc40628256fd824950a1e140b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Thu Nov 8 08:55:03 2007 +0000

    Open the dump files in binary mode.

commit de3fb61c0a1c47cbdeabe0d54b9387a8bb0758d5
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sun Nov 4 13:12:50 2007 +0000

    Handle null packages correctly.
    
    Abort the transmission and discard the data if a null package is
    received at the end of the internal ring buffer.

commit e1f12108cb2521ab023aad6d86fcb7a57f6e0f07
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 3 20:27:14 2007 +0000

    Handle timeouts while receiving the first package.
    
    Instead of ending the transmission, an error is reported.

commit 316ec12fefea01eda8ebe066535e22c9652a9afc
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Sat Nov 3 20:00:14 2007 +0000

    Added a test to dump the entire memory of the dive computer.

commit 4875f9c2bb5c9830d7a7ba9a40774f7d8414aa2f
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Wed Oct 31 15:25:44 2007 +0000

    Added the initial implementation for the Suunto Vyper.

commit c5fc289cb284cdc35a8b0c3650cd3e68c68643b9
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 10:54:40 2007 +0000

    Added missing break statements in the serial_flush() functions.

commit 76e5f120948edfa188de1915e9f6008784a86b51
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 10:49:35 2007 +0000

    Implemented the win32 serial_drain function using FlushFileBuffers.

commit 21e9cf9739f551b6d556b5eb0ab3948bc472949e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 10:45:35 2007 +0000

    Implemented the win32 serial_drain function using WaitCommEvent.

commit 425efd1c0dd271d779154819ff1c6e081418201b
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 09:56:30 2007 +0000

    Added a shorter implementation for the serial_set_status function.

commit 01546745730a2107bc3e04b338a3b8932eab37f2
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 09:52:28 2007 +0000

    Attempt to read/write before waiting, instead of the other way around.

commit a3ae610b2e6c814be72ae995e81a51d82ce2669e
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 09:37:26 2007 +0000

    Replace termios VMIN=0 and VTIME=0 with O_NONBLOCK.
    
    Enable O_NONBLOCK to be able to detect the difference between a timeout
    and a modem disconnect (EOF). With this change, it's also possible to
    implement write timeouts.

commit 3f33f82bc28000aab08d54a1c260afd9d3490e78
Author: Jef Driesen <jefdriesen@users.sourceforge.net>
Date:   Mon Oct 29 09:22:19 2007 +0000

    Initial import.
